name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: '_/apps/mobile/package-lock.json'
        
    - name: Install dependencies
      working-directory: _/apps/mobile
      run: npm ci
      
    - name: Run linting
      working-directory: _/apps/mobile
      run: npm run lint
      
    - name: Run type checking
      working-directory: _/apps/mobile
      run: npm run type-check
      
    - name: Run tests
      working-directory: _/apps/mobile
      run: npm test -- --coverage --watchAll=false
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: _/apps/mobile/coverage/lcov.info
        flags: mobile
        name: mobile-coverage

  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: '_/apps/mobile/package-lock.json'
        
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
        
    - name: Install dependencies
      working-directory: _/apps/mobile
      run: npm ci
      
    - name: Build preview
      working-directory: _/apps/mobile
      run: |
        npx eas build --platform all --profile preview --non-interactive --no-wait
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  build-production:
    name: Build Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: '_/apps/mobile/package-lock.json'
        
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
        
    - name: Install dependencies
      working-directory: _/apps/mobile
      run: npm ci
      
    - name: Build production
      working-directory: _/apps/mobile
      run: |
        npx eas build --platform all --profile production --non-interactive --no-wait
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
