{"dependencies":[{"name":"expo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"PWvtvXU7MaET6Yd1Gn8oQOXJQ8A=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":42},"end":{"line":2,"column":66,"index":108}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY=","exportNames":["*"],"imports":1}},{"name":"expo-task-manager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":109},"end":{"line":3,"column":49,"index":158}}],"key":"bYMruywqSxptqIFJf3NLT25O6Io=","exportNames":["*"],"imports":1}},{"name":"./BackgroundFetch.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":159},"end":{"line":4,"column":88,"index":247}}],"key":"And7e5D9NkaNiGq0A2ldQR/ZHeM=","exportNames":["*"],"imports":1}},{"name":"./ExpoBackgroundFetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":248},"end":{"line":5,"column":56,"index":304}}],"key":"6DVaGGOf3MWTGnPn8BIh8n37PVc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getStatusAsync = getStatusAsync;\n  exports.setMinimumIntervalAsync = setMinimumIntervalAsync;\n  exports.registerTaskAsync = registerTaskAsync;\n  exports.unregisterTaskAsync = unregisterTaskAsync;\n  Object.defineProperty(exports, \"BackgroundFetchResult\", {\n    enumerable: true,\n    get: function () {\n      return _BackgroundFetchTypes.BackgroundFetchResult;\n    }\n  });\n  Object.defineProperty(exports, \"BackgroundFetchStatus\", {\n    enumerable: true,\n    get: function () {\n      return _BackgroundFetchTypes.BackgroundFetchStatus;\n    }\n  });\n  var _expo = require(_dependencyMap[0], \"expo\");\n  var _expoModulesCore = require(_dependencyMap[1], \"expo-modules-core\");\n  var _expoTaskManager = require(_dependencyMap[2], \"expo-task-manager\");\n  var TaskManager = _interopNamespace(_expoTaskManager);\n  var _BackgroundFetchTypes = require(_dependencyMap[3], \"./BackgroundFetch.types\");\n  var _ExpoBackgroundFetch = require(_dependencyMap[4], \"./ExpoBackgroundFetch\");\n  var ExpoBackgroundFetch = _interopDefault(_ExpoBackgroundFetch);\n  let didShowDeprecationWarning = false;\n  const showDeprecationWarning = () => {\n    if (!didShowDeprecationWarning) {\n      didShowDeprecationWarning = true;\n      console.warn('expo-background-fetch: This library is deprecated. Use expo-background-task instead.');\n    }\n  };\n  let warnedAboutExpoGo = false;\n  function _validate(taskName) {\n    if ((0, _expo.isRunningInExpoGo)()) {\n      if (!warnedAboutExpoGo) {\n        const message = '`Background Fetch` functionality is not available in Expo Go:\\n' + 'You can use this API, and all others, in a development build. Learn more: https://expo.fyi/dev-client.';\n        console.warn(message);\n        warnedAboutExpoGo = true;\n      }\n    }\n    if (!taskName || typeof taskName !== 'string') {\n      throw new TypeError('`taskName` must be a non-empty string.');\n    }\n  }\n  // @needsAudit\n  /**\n   * Gets a status of background fetch.\n   * @return Returns a promise which fulfils with one of `BackgroundFetchStatus` enum values.\n   * @deprecated Use [`getStatusAsync()`](./background-task/#backgroundtaskgetstatusasync) from `expo-background-task`\n   * instead. The `expo-background-fetch` package has been deprecated.\n   */\n  async function getStatusAsync() {\n    showDeprecationWarning();\n    if (_expoModulesCore.Platform.OS === 'android') {\n      return _BackgroundFetchTypes.BackgroundFetchStatus.Available;\n    }\n    return ExpoBackgroundFetch.default.getStatusAsync();\n  }\n  // @needsAudit\n  /**\n   * Sets the minimum number of seconds that must elapse before another background fetch can be\n   * initiated. This value is advisory only and does not indicate the exact amount of time expected\n   * between fetch operations.\n   *\n   * > This method doesn't take any effect on Android. It is a global value which means that it can\n   * overwrite settings from another application opened through Expo Go.\n   *\n   * @param minimumInterval Number of seconds that must elapse before another background fetch can be called.\n   * @return A promise which fulfils once the minimum interval is set.\n   * @deprecated Use the [`registerTaskAsync()`](./background-task#backgroundtaskregistertaskasynctaskname-options) method\n   * from expo-background-task package, and specify [`BackgroundTaskOptions`](./background-task/#backgroundtaskoptions)\n   * argument instead, when setting task interval time.\n   */\n  async function setMinimumIntervalAsync(minimumInterval) {\n    showDeprecationWarning();\n    if (!ExpoBackgroundFetch.default.setMinimumIntervalAsync) {\n      return;\n    }\n    // iOS only\n    await ExpoBackgroundFetch.default.setMinimumIntervalAsync(minimumInterval);\n  }\n  // @needsAudit\n  /**\n   * Registers background fetch task with given name. Registered tasks are saved in persistent storage and restored once the app is initialized.\n   * @param taskName Name of the task to register. The task needs to be defined first - see [`TaskManager.defineTask`](task-manager/#taskmanagerdefinetaskttaskname-taskexecutor)\n   * for more details.\n   * @param options An object containing the background fetch options.\n   *\n   * @example\n   * ```ts\n   * import * as BackgroundFetch from 'expo-background-fetch';\n   * import * as TaskManager from 'expo-task-manager';\n   *\n   * TaskManager.defineTask(YOUR_TASK_NAME, () => {\n   *   try {\n   *     const receivedNewData = // do your background fetch here\n   *     return receivedNewData ? BackgroundFetch.BackgroundFetchResult.NewData : BackgroundFetch.BackgroundFetchResult.NoData;\n   *   } catch (error) {\n   *     return BackgroundFetch.BackgroundFetchResult.Failed;\n   *   }\n   * });\n   * ```\n   * @deprecated Use [`registerTaskAsync()`](./background-task#backgroundtaskregistertaskasynctaskname-options) from `expo-background-task`\n   * instead. The `expo-background-fetch` package has been deprecated.\n   */\n  async function registerTaskAsync(taskName, options = {}) {\n    showDeprecationWarning();\n    if (!ExpoBackgroundFetch.default.registerTaskAsync) {\n      throw new _expoModulesCore.UnavailabilityError('BackgroundFetch', 'registerTaskAsync');\n    }\n    if (!TaskManager.isTaskDefined(taskName)) {\n      throw new Error(`Task '${taskName}' is not defined. You must define a task using TaskManager.defineTask before registering.`);\n    }\n    _validate(taskName);\n    await ExpoBackgroundFetch.default.registerTaskAsync(taskName, options);\n  }\n  // @needsAudit\n  /**\n   * Unregisters background fetch task, so the application will no longer be executing this task.\n   * @param taskName Name of the task to unregister.\n   * @return A promise which fulfils when the task is fully unregistered.\n   * @deprecated Use [`unregisterTaskAsync()`](./background-task/#backgroundtaskunregistertaskasynctaskname) from `expo-background-task`\n   * instead. The `expo-background-fetch` package has been deprecated.\n   */\n  async function unregisterTaskAsync(taskName) {\n    showDeprecationWarning();\n    if (!ExpoBackgroundFetch.default.unregisterTaskAsync) {\n      throw new _expoModulesCore.UnavailabilityError('BackgroundFetch', 'unregisterTaskAsync');\n    }\n    _validate(taskName);\n    await ExpoBackgroundFetch.default.unregisterTaskAsync(taskName);\n  }\n});","lineCount":158,"map":[[27,2,34,0,"exports"],[27,9,34,0],[27,10,34,0,"getStatusAsync"],[27,24,34,0],[27,27,34,0,"getStatusAsync"],[27,41,34,0],[28,2,56,0,"exports"],[28,9,56,0],[28,10,56,0,"setMinimumIntervalAsync"],[28,33,56,0],[28,36,56,0,"setMinimumIntervalAsync"],[28,59,56,0],[29,2,88,0,"exports"],[29,9,88,0],[29,10,88,0,"registerTaskAsync"],[29,27,88,0],[29,30,88,0,"registerTaskAsync"],[29,47,88,0],[30,2,107,0,"exports"],[30,9,107,0],[30,10,107,0,"unregisterTaskAsync"],[30,29,107,0],[30,32,107,0,"unregisterTaskAsync"],[30,51,107,0],[31,2,115,0,"Object"],[31,8,115,0],[31,9,115,0,"defineProperty"],[31,23,115,0],[31,24,115,0,"exports"],[31,31,115,0],[32,4,115,0,"enumerable"],[32,14,115,0],[33,4,115,0,"get"],[33,7,115,0],[33,18,115,0,"get"],[33,19,115,0],[34,6,115,0],[34,13,115,9,"BackgroundFetchResult"],[34,34,115,30],[34,35,115,30,"BackgroundFetchResult"],[34,56,115,30],[35,4,115,30],[36,2,115,30],[37,2,115,0,"Object"],[37,8,115,0],[37,9,115,0,"defineProperty"],[37,23,115,0],[37,24,115,0,"exports"],[37,31,115,0],[38,4,115,0,"enumerable"],[38,14,115,0],[39,4,115,0,"get"],[39,7,115,0],[39,18,115,0,"get"],[39,19,115,0],[40,6,115,0],[40,13,115,32,"BackgroundFetchStatus"],[40,34,115,53],[40,35,115,53,"BackgroundFetchStatus"],[40,56,115,53],[41,4,115,53],[42,2,115,53],[43,2,1,0],[43,6,1,0,"_expo"],[43,11,1,0],[43,14,1,0,"require"],[43,21,1,0],[43,22,1,0,"_dependencyMap"],[43,36,1,0],[44,2,2,0],[44,6,2,0,"_expoModulesCore"],[44,22,2,0],[44,25,2,0,"require"],[44,32,2,0],[44,33,2,0,"_dependencyMap"],[44,47,2,0],[45,2,3,0],[45,6,3,0,"_expoTaskManager"],[45,22,3,0],[45,25,3,0,"require"],[45,32,3,0],[45,33,3,0,"_dependencyMap"],[45,47,3,0],[46,2,3,0],[46,6,3,0,"TaskManager"],[46,17,3,0],[46,20,3,0,"_interopNamespace"],[46,37,3,0],[46,38,3,0,"_expoTaskManager"],[46,54,3,0],[47,2,4,0],[47,6,4,0,"_BackgroundFetchTypes"],[47,27,4,0],[47,30,4,0,"require"],[47,37,4,0],[47,38,4,0,"_dependencyMap"],[47,52,4,0],[48,2,5,0],[48,6,5,0,"_ExpoBackgroundFetch"],[48,26,5,0],[48,29,5,0,"require"],[48,36,5,0],[48,37,5,0,"_dependencyMap"],[48,51,5,0],[49,2,5,0],[49,6,5,0,"ExpoBackgroundFetch"],[49,25,5,0],[49,28,5,0,"_interopDefault"],[49,43,5,0],[49,44,5,0,"_ExpoBackgroundFetch"],[49,64,5,0],[50,2,6,0],[50,6,6,4,"didShowDeprecationWarning"],[50,31,6,29],[50,34,6,32],[50,39,6,37],[51,2,7,0],[51,8,7,6,"showDeprecationWarning"],[51,30,7,28],[51,33,7,31,"showDeprecationWarning"],[51,34,7,31],[51,39,7,37],[52,4,8,4],[52,8,8,8],[52,9,8,9,"didShowDeprecationWarning"],[52,34,8,34],[52,36,8,36],[53,6,9,8,"didShowDeprecationWarning"],[53,31,9,33],[53,34,9,36],[53,38,9,40],[54,6,10,8,"console"],[54,13,10,15],[54,14,10,16,"warn"],[54,18,10,20],[54,19,10,21],[54,105,10,107],[54,106,10,108],[55,4,11,4],[56,2,12,0],[56,3,12,1],[57,2,13,0],[57,6,13,4,"warnedAboutExpoGo"],[57,23,13,21],[57,26,13,24],[57,31,13,29],[58,2,14,0],[58,11,14,9,"_validate"],[58,20,14,18,"_validate"],[58,21,14,19,"taskName"],[58,29,14,27],[58,31,14,29],[59,4,15,4],[59,8,15,8],[59,12,15,8,"isRunningInExpoGo"],[59,17,15,25],[59,18,15,25,"isRunningInExpoGo"],[59,35,15,25],[59,37,15,26],[59,38,15,27],[59,40,15,29],[60,6,16,8],[60,10,16,12],[60,11,16,13,"warnedAboutExpoGo"],[60,28,16,30],[60,30,16,32],[61,8,17,12],[61,14,17,18,"message"],[61,21,17,25],[61,24,17,28],[61,89,17,93],[61,92,18,16],[61,196,18,120],[62,8,19,12,"console"],[62,15,19,19],[62,16,19,20,"warn"],[62,20,19,24],[62,21,19,25,"message"],[62,28,19,32],[62,29,19,33],[63,8,20,12,"warnedAboutExpoGo"],[63,25,20,29],[63,28,20,32],[63,32,20,36],[64,6,21,8],[65,4,22,4],[66,4,23,4],[66,8,23,8],[66,9,23,9,"taskName"],[66,17,23,17],[66,21,23,21],[66,28,23,28,"taskName"],[66,36,23,36],[66,41,23,41],[66,49,23,49],[66,51,23,51],[67,6,24,8],[67,12,24,14],[67,16,24,18,"TypeError"],[67,25,24,27],[67,26,24,28],[67,66,24,68],[67,67,24,69],[68,4,25,4],[69,2,26,0],[70,2,27,0],[71,2,28,0],[72,0,29,0],[73,0,30,0],[74,0,31,0],[75,0,32,0],[76,0,33,0],[77,2,34,7],[77,17,34,22,"getStatusAsync"],[77,31,34,36,"getStatusAsync"],[77,32,34,36],[77,34,34,39],[78,4,35,4,"showDeprecationWarning"],[78,26,35,26],[78,27,35,27],[78,28,35,28],[79,4,36,4],[79,8,36,8,"Platform"],[79,24,36,16],[79,25,36,16,"Platform"],[79,33,36,16],[79,34,36,17,"OS"],[79,36,36,19],[79,41,36,24],[79,50,36,33],[79,52,36,35],[80,6,37,8],[80,13,37,15,"BackgroundFetchStatus"],[80,34,37,36],[80,35,37,36,"BackgroundFetchStatus"],[80,56,37,36],[80,57,37,37,"Available"],[80,66,37,46],[81,4,38,4],[82,4,39,4],[82,11,39,11,"ExpoBackgroundFetch"],[82,30,39,30],[82,31,39,30,"default"],[82,38,39,30],[82,39,39,31,"getStatusAsync"],[82,53,39,45],[82,54,39,46],[82,55,39,47],[83,2,40,0],[84,2,41,0],[85,2,42,0],[86,0,43,0],[87,0,44,0],[88,0,45,0],[89,0,46,0],[90,0,47,0],[91,0,48,0],[92,0,49,0],[93,0,50,0],[94,0,51,0],[95,0,52,0],[96,0,53,0],[97,0,54,0],[98,0,55,0],[99,2,56,7],[99,17,56,22,"setMinimumIntervalAsync"],[99,40,56,45,"setMinimumIntervalAsync"],[99,41,56,46,"minimumInterval"],[99,56,56,61],[99,58,56,63],[100,4,57,4,"showDeprecationWarning"],[100,26,57,26],[100,27,57,27],[100,28,57,28],[101,4,58,4],[101,8,58,8],[101,9,58,9,"ExpoBackgroundFetch"],[101,28,58,28],[101,29,58,28,"default"],[101,36,58,28],[101,37,58,29,"setMinimumIntervalAsync"],[101,60,58,52],[101,62,58,54],[102,6,59,8],[103,4,60,4],[104,4,61,4],[105,4,62,4],[105,10,62,10,"ExpoBackgroundFetch"],[105,29,62,29],[105,30,62,29,"default"],[105,37,62,29],[105,38,62,30,"setMinimumIntervalAsync"],[105,61,62,53],[105,62,62,54,"minimumInterval"],[105,77,62,69],[105,78,62,70],[106,2,63,0],[107,2,64,0],[108,2,65,0],[109,0,66,0],[110,0,67,0],[111,0,68,0],[112,0,69,0],[113,0,70,0],[114,0,71,0],[115,0,72,0],[116,0,73,0],[117,0,74,0],[118,0,75,0],[119,0,76,0],[120,0,77,0],[121,0,78,0],[122,0,79,0],[123,0,80,0],[124,0,81,0],[125,0,82,0],[126,0,83,0],[127,0,84,0],[128,0,85,0],[129,0,86,0],[130,0,87,0],[131,2,88,7],[131,17,88,22,"registerTaskAsync"],[131,34,88,39,"registerTaskAsync"],[131,35,88,40,"taskName"],[131,43,88,48],[131,45,88,50,"options"],[131,52,88,57],[131,55,88,60],[131,56,88,61],[131,57,88,62],[131,59,88,64],[132,4,89,4,"showDeprecationWarning"],[132,26,89,26],[132,27,89,27],[132,28,89,28],[133,4,90,4],[133,8,90,8],[133,9,90,9,"ExpoBackgroundFetch"],[133,28,90,28],[133,29,90,28,"default"],[133,36,90,28],[133,37,90,29,"registerTaskAsync"],[133,54,90,46],[133,56,90,48],[134,6,91,8],[134,12,91,14],[134,16,91,18,"UnavailabilityError"],[134,32,91,37],[134,33,91,37,"UnavailabilityError"],[134,52,91,37],[134,53,91,38],[134,70,91,55],[134,72,91,57],[134,91,91,76],[134,92,91,77],[135,4,92,4],[136,4,93,4],[136,8,93,8],[136,9,93,9,"TaskManager"],[136,20,93,20],[136,21,93,21,"isTaskDefined"],[136,34,93,34],[136,35,93,35,"taskName"],[136,43,93,43],[136,44,93,44],[136,46,93,46],[137,6,94,8],[137,12,94,14],[137,16,94,18,"Error"],[137,21,94,23],[137,22,94,24],[137,31,94,33,"taskName"],[137,39,94,41],[137,130,94,132],[137,131,94,133],[138,4,95,4],[139,4,96,4,"_validate"],[139,13,96,13],[139,14,96,14,"taskName"],[139,22,96,22],[139,23,96,23],[140,4,97,4],[140,10,97,10,"ExpoBackgroundFetch"],[140,29,97,29],[140,30,97,29,"default"],[140,37,97,29],[140,38,97,30,"registerTaskAsync"],[140,55,97,47],[140,56,97,48,"taskName"],[140,64,97,56],[140,66,97,58,"options"],[140,73,97,65],[140,74,97,66],[141,2,98,0],[142,2,99,0],[143,2,100,0],[144,0,101,0],[145,0,102,0],[146,0,103,0],[147,0,104,0],[148,0,105,0],[149,0,106,0],[150,2,107,7],[150,17,107,22,"unregisterTaskAsync"],[150,36,107,41,"unregisterTaskAsync"],[150,37,107,42,"taskName"],[150,45,107,50],[150,47,107,52],[151,4,108,4,"showDeprecationWarning"],[151,26,108,26],[151,27,108,27],[151,28,108,28],[152,4,109,4],[152,8,109,8],[152,9,109,9,"ExpoBackgroundFetch"],[152,28,109,28],[152,29,109,28,"default"],[152,36,109,28],[152,37,109,29,"unregisterTaskAsync"],[152,56,109,48],[152,58,109,50],[153,6,110,8],[153,12,110,14],[153,16,110,18,"UnavailabilityError"],[153,32,110,37],[153,33,110,37,"UnavailabilityError"],[153,52,110,37],[153,53,110,38],[153,70,110,55],[153,72,110,57],[153,93,110,78],[153,94,110,79],[154,4,111,4],[155,4,112,4,"_validate"],[155,13,112,13],[155,14,112,14,"taskName"],[155,22,112,22],[155,23,112,23],[156,4,113,4],[156,10,113,10,"ExpoBackgroundFetch"],[156,29,113,29],[156,30,113,29,"default"],[156,37,113,29],[156,38,113,30,"unregisterTaskAsync"],[156,57,113,49],[156,58,113,50,"taskName"],[156,66,113,58],[156,67,113,59],[157,2,114,0],[158,0,114,1],[158,3]],"functionMap":{"names":["<global>","showDeprecationWarning","_validate","getStatusAsync","setMinimumIntervalAsync","registerTaskAsync","unregisterTaskAsync"],"mappings":"AAA;+BCM;CDK;AEE;CFY;OGQ;CHM;OIgB;CJO;OKyB;CLU;OMS;CNO"},"hasCjsExports":false},"type":"js/module"}]}