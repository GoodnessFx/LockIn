{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveHref = void 0;\n  exports.resolveHrefStringWithSegments = resolveHrefStringWithSegments;\n  var resolveHref = href => {\n    if (typeof href === 'string') {\n      return (0, exports.resolveHref)({\n        pathname: href\n      });\n    }\n    var path = href.pathname ?? '';\n    if (!href?.params) {\n      return path;\n    }\n    var _createQualifiedPathn = createQualifiedPathname(path, {\n        ...href.params\n      }),\n      pathname = _createQualifiedPathn.pathname,\n      params = _createQualifiedPathn.params;\n    var paramsString = createQueryParams(params);\n    return pathname + (paramsString ? `?${paramsString}` : '');\n  };\n  exports.resolveHref = resolveHref;\n  function resolveHrefStringWithSegments(href) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$segments = _ref.segments,\n      segments = _ref$segments === void 0 ? [] : _ref$segments,\n      _ref$params = _ref.params,\n      params = _ref$params === void 0 ? {} : _ref$params;\n    var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      relativeToDirectory = _ref2.relativeToDirectory;\n    if (href.startsWith('.')) {\n      var base = segments?.map(segment => {\n        if (!segment.startsWith('[')) return segment;\n        if (segment.startsWith('[...')) {\n          segment = segment.slice(4, -1);\n          var param = params[segment];\n          if (Array.isArray(param)) {\n            return param.join('/');\n          } else {\n            return param?.split(',')?.join('/') ?? '';\n          }\n        } else {\n          segment = segment.slice(1, -1);\n          return params[segment];\n        }\n      }).filter(Boolean).join('/') ?? '/';\n      if (relativeToDirectory) {\n        base = `${base}/`;\n      }\n      var url = new URL(href, `http://hostname/${base}`);\n      href = `${url.pathname}${url.search}`;\n    }\n    return href;\n  }\n  function createQualifiedPathname(pathname, params) {\n    for (var _ref3 of Object.entries(params)) {\n      var _ref4 = _slicedToArray(_ref3, 2);\n      var key = _ref4[0];\n      var _ref4$ = _ref4[1];\n      var value = _ref4$ === void 0 ? '' : _ref4$;\n      var dynamicKey = `[${key}]`;\n      var deepDynamicKey = `[...${key}]`;\n      if (pathname.includes(dynamicKey)) {\n        pathname = pathname.replace(dynamicKey, encodeParam(value));\n      } else if (pathname.includes(deepDynamicKey)) {\n        pathname = pathname.replace(deepDynamicKey, encodeParam(value));\n      } else {\n        continue;\n      }\n      delete params[key];\n    }\n    return {\n      pathname,\n      params\n    };\n  }\n  function encodeParam(param) {\n    if (Array.isArray(param)) {\n      return param.map(p => encodeParam(p)).join('/');\n    }\n    return encodeURIComponent(param.toString());\n  }\n  function createQueryParams(params) {\n    return Object.entries(params).filter(_ref5 => {\n      var _ref6 = _slicedToArray(_ref5, 2),\n        value = _ref6[1];\n      return value != null;\n    }).map(_ref7 => {\n      var _ref8 = _slicedToArray(_ref7, 2),\n        key = _ref8[0],\n        value = _ref8[1];\n      return `${key}=${encodeURIComponent(value.toString())}`;\n    }).join('&');\n  }\n});","lineCount":101,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0,"exports"],[8,9,3,7],[8,10,3,8,"resolveHref"],[8,21,3,19],[8,24,3,22],[8,29,3,27],[8,30,3,28],[9,2,4,0,"exports"],[9,9,4,7],[9,10,4,8,"resolveHrefStringWithSegments"],[9,39,4,37],[9,42,4,40,"resolveHrefStringWithSegments"],[9,71,4,69],[10,2,6,0],[10,6,6,6,"resolveHref"],[10,17,6,17],[10,20,6,21,"href"],[10,24,6,25],[10,28,6,30],[11,4,7,4],[11,8,7,8],[11,15,7,15,"href"],[11,19,7,19],[11,24,7,24],[11,32,7,32],[11,34,7,34],[12,6,8,8],[12,13,8,15],[12,14,8,16],[12,15,8,17],[12,17,8,19,"exports"],[12,24,8,26],[12,25,8,27,"resolveHref"],[12,36,8,38],[12,38,8,40],[13,8,8,42,"pathname"],[13,16,8,50],[13,18,8,52,"href"],[14,6,8,57],[14,7,8,58],[14,8,8,59],[15,4,9,4],[16,4,10,4],[16,8,10,10,"path"],[16,12,10,14],[16,15,10,17,"href"],[16,19,10,21],[16,20,10,22,"pathname"],[16,28,10,30],[16,32,10,34],[16,34,10,36],[17,4,11,4],[17,8,11,8],[17,9,11,9,"href"],[17,13,11,13],[17,15,11,15,"params"],[17,21,11,21],[17,23,11,23],[18,6,12,8],[18,13,12,15,"path"],[18,17,12,19],[19,4,13,4],[20,4,14,4],[20,8,14,4,"_createQualifiedPathn"],[20,29,14,4],[20,32,14,33,"createQualifiedPathname"],[20,55,14,56],[20,56,14,57,"path"],[20,60,14,61],[20,62,14,63],[21,8,15,8],[21,11,15,11,"href"],[21,15,15,15],[21,16,15,16,"params"],[22,6,16,4],[22,7,16,5],[22,8,16,6],[23,6,14,12,"pathname"],[23,14,14,20],[23,17,14,20,"_createQualifiedPathn"],[23,38,14,20],[23,39,14,12,"pathname"],[23,47,14,20],[24,6,14,22,"params"],[24,12,14,28],[24,15,14,28,"_createQualifiedPathn"],[24,36,14,28],[24,37,14,22,"params"],[24,43,14,28],[25,4,17,4],[25,8,17,10,"paramsString"],[25,20,17,22],[25,23,17,25,"createQueryParams"],[25,40,17,42],[25,41,17,43,"params"],[25,47,17,49],[25,48,17,50],[26,4,18,4],[26,11,18,11,"pathname"],[26,19,18,19],[26,23,18,23,"paramsString"],[26,35,18,35],[26,38,18,38],[26,42,18,42,"paramsString"],[26,54,18,54],[26,56,18,56],[26,59,18,59],[26,61,18,61],[26,62,18,62],[27,2,19,0],[27,3,19,1],[28,2,20,0,"exports"],[28,9,20,7],[28,10,20,8,"resolveHref"],[28,21,20,19],[28,24,20,22,"resolveHref"],[28,35,20,33],[29,2,21,0],[29,11,21,9,"resolveHrefStringWithSegments"],[29,40,21,38,"resolveHrefStringWithSegments"],[29,41,21,39,"href"],[29,45,21,43],[29,47,21,112],[30,4,21,112],[30,8,21,112,"_ref"],[30,12,21,112],[30,15,21,112,"arguments"],[30,24,21,112],[30,25,21,112,"length"],[30,31,21,112],[30,39,21,112,"arguments"],[30,48,21,112],[30,56,21,112,"undefined"],[30,65,21,112],[30,68,21,112,"arguments"],[30,77,21,112],[30,83,21,78],[30,84,21,79],[30,85,21,80],[31,6,21,80,"_ref$segments"],[31,19,21,80],[31,22,21,80,"_ref"],[31,26,21,80],[31,27,21,47,"segments"],[31,35,21,55],[32,6,21,47,"segments"],[32,14,21,55],[32,17,21,55,"_ref$segments"],[32,30,21,55],[32,44,21,58],[32,46,21,60],[32,49,21,60,"_ref$segments"],[32,62,21,60],[33,6,21,60,"_ref$params"],[33,17,21,60],[33,20,21,60,"_ref"],[33,24,21,60],[33,25,21,62,"params"],[33,31,21,68],[34,6,21,62,"params"],[34,12,21,68],[34,15,21,68,"_ref$params"],[34,26,21,68],[34,40,21,71],[34,41,21,72],[34,42,21,73],[34,45,21,73,"_ref$params"],[34,56,21,73],[35,4,21,73],[35,8,21,73,"_ref2"],[35,13,21,73],[35,16,21,73,"arguments"],[35,25,21,73],[35,26,21,73,"length"],[35,32,21,73],[35,40,21,73,"arguments"],[35,49,21,73],[35,57,21,73,"undefined"],[35,66,21,73],[35,69,21,73,"arguments"],[35,78,21,73],[35,84,21,108],[35,85,21,109],[35,86,21,110],[36,6,21,84,"relativeToDirectory"],[36,25,21,103],[36,28,21,103,"_ref2"],[36,33,21,103],[36,34,21,84,"relativeToDirectory"],[36,53,21,103],[37,4,22,4],[37,8,22,8,"href"],[37,12,22,12],[37,13,22,13,"startsWith"],[37,23,22,23],[37,24,22,24],[37,27,22,27],[37,28,22,28],[37,30,22,30],[38,6,24,8],[38,10,24,12,"base"],[38,14,24,16],[38,17,24,19,"segments"],[38,25,24,27],[38,27,25,14,"map"],[38,30,25,17],[38,31,25,19,"segment"],[38,38,25,26],[38,42,25,31],[39,8,26,12],[39,12,26,16],[39,13,26,17,"segment"],[39,20,26,24],[39,21,26,25,"startsWith"],[39,31,26,35],[39,32,26,36],[39,35,26,39],[39,36,26,40],[39,38,27,16],[39,45,27,23,"segment"],[39,52,27,30],[40,8,28,12],[40,12,28,16,"segment"],[40,19,28,23],[40,20,28,24,"startsWith"],[40,30,28,34],[40,31,28,35],[40,37,28,41],[40,38,28,42],[40,40,28,44],[41,10,29,16,"segment"],[41,17,29,23],[41,20,29,26,"segment"],[41,27,29,33],[41,28,29,34,"slice"],[41,33,29,39],[41,34,29,40],[41,35,29,41],[41,37,29,43],[41,38,29,44],[41,39,29,45],[41,40,29,46],[42,10,30,16],[42,14,30,22,"param"],[42,19,30,27],[42,22,30,30,"params"],[42,28,30,36],[42,29,30,37,"segment"],[42,36,30,44],[42,37,30,45],[43,10,31,16],[43,14,31,20,"Array"],[43,19,31,25],[43,20,31,26,"isArray"],[43,27,31,33],[43,28,31,34,"param"],[43,33,31,39],[43,34,31,40],[43,36,31,42],[44,12,32,20],[44,19,32,27,"param"],[44,24,32,32],[44,25,32,33,"join"],[44,29,32,37],[44,30,32,38],[44,33,32,41],[44,34,32,42],[45,10,33,16],[45,11,33,17],[45,17,34,21],[46,12,35,20],[46,19,35,27,"param"],[46,24,35,32],[46,26,35,34,"split"],[46,31,35,39],[46,32,35,40],[46,35,35,43],[46,36,35,44],[46,38,35,46,"join"],[46,42,35,50],[46,43,35,51],[46,46,35,54],[46,47,35,55],[46,51,35,59],[46,53,35,61],[47,10,36,16],[48,8,37,12],[48,9,37,13],[48,15,38,17],[49,10,39,16,"segment"],[49,17,39,23],[49,20,39,26,"segment"],[49,27,39,33],[49,28,39,34,"slice"],[49,33,39,39],[49,34,39,40],[49,35,39,41],[49,37,39,43],[49,38,39,44],[49,39,39,45],[49,40,39,46],[50,10,40,16],[50,17,40,23,"params"],[50,23,40,29],[50,24,40,30,"segment"],[50,31,40,37],[50,32,40,38],[51,8,41,12],[52,6,42,8],[52,7,42,9],[52,8,42,10],[52,9,43,13,"filter"],[52,15,43,19],[52,16,43,20,"Boolean"],[52,23,43,27],[52,24,43,28],[52,25,44,13,"join"],[52,29,44,17],[52,30,44,18],[52,33,44,21],[52,34,44,22],[52,38,44,26],[52,41,44,29],[53,6,45,8],[53,10,45,12,"relativeToDirectory"],[53,29,45,31],[53,31,45,33],[54,8,46,12,"base"],[54,12,46,16],[54,15,46,19],[54,18,46,22,"base"],[54,22,46,26],[54,25,46,29],[55,6,47,8],[56,6,48,8],[56,10,48,14,"url"],[56,13,48,17],[56,16,48,20],[56,20,48,24,"URL"],[56,23,48,27],[56,24,48,28,"href"],[56,28,48,32],[56,30,48,34],[56,49,48,53,"base"],[56,53,48,57],[56,55,48,59],[56,56,48,60],[57,6,49,8,"href"],[57,10,49,12],[57,13,49,15],[57,16,49,18,"url"],[57,19,49,21],[57,20,49,22,"pathname"],[57,28,49,30],[57,31,49,33,"url"],[57,34,49,36],[57,35,49,37,"search"],[57,41,49,43],[57,43,49,45],[58,4,50,4],[59,4,51,4],[59,11,51,11,"href"],[59,15,51,15],[60,2,52,0],[61,2,53,0],[61,11,53,9,"createQualifiedPathname"],[61,34,53,32,"createQualifiedPathname"],[61,35,53,33,"pathname"],[61,43,53,41],[61,45,53,43,"params"],[61,51,53,49],[61,53,53,51],[62,4,54,4],[62,13,54,4,"_ref3"],[62,18,54,4],[62,22,54,36,"Object"],[62,28,54,42],[62,29,54,43,"entries"],[62,36,54,50],[62,37,54,51,"params"],[62,43,54,57],[62,44,54,58],[62,46,54,60],[63,6,54,60],[63,10,54,60,"_ref4"],[63,15,54,60],[63,18,54,60,"_slicedToArray"],[63,32,54,60],[63,33,54,60,"_ref3"],[63,38,54,60],[64,6,54,60],[64,10,54,16,"key"],[64,13,54,19],[64,16,54,19,"_ref4"],[64,21,54,19],[65,6,54,19],[65,10,54,19,"_ref4$"],[65,16,54,19],[65,19,54,19,"_ref4"],[65,24,54,19],[66,6,54,19],[66,10,54,21,"value"],[66,15,54,26],[66,18,54,26,"_ref4$"],[66,24,54,26],[66,38,54,29],[66,40,54,31],[66,43,54,31,"_ref4$"],[66,49,54,31],[67,6,55,8],[67,10,55,14,"dynamicKey"],[67,20,55,24],[67,23,55,27],[67,27,55,31,"key"],[67,30,55,34],[67,33,55,37],[68,6,56,8],[68,10,56,14,"deepDynamicKey"],[68,24,56,28],[68,27,56,31],[68,34,56,38,"key"],[68,37,56,41],[68,40,56,44],[69,6,57,8],[69,10,57,12,"pathname"],[69,18,57,20],[69,19,57,21,"includes"],[69,27,57,29],[69,28,57,30,"dynamicKey"],[69,38,57,40],[69,39,57,41],[69,41,57,43],[70,8,58,12,"pathname"],[70,16,58,20],[70,19,58,23,"pathname"],[70,27,58,31],[70,28,58,32,"replace"],[70,35,58,39],[70,36,58,40,"dynamicKey"],[70,46,58,50],[70,48,58,52,"encodeParam"],[70,59,58,63],[70,60,58,64,"value"],[70,65,58,69],[70,66,58,70],[70,67,58,71],[71,6,59,8],[71,7,59,9],[71,13,60,13],[71,17,60,17,"pathname"],[71,25,60,25],[71,26,60,26,"includes"],[71,34,60,34],[71,35,60,35,"deepDynamicKey"],[71,49,60,49],[71,50,60,50],[71,52,60,52],[72,8,61,12,"pathname"],[72,16,61,20],[72,19,61,23,"pathname"],[72,27,61,31],[72,28,61,32,"replace"],[72,35,61,39],[72,36,61,40,"deepDynamicKey"],[72,50,61,54],[72,52,61,56,"encodeParam"],[72,63,61,67],[72,64,61,68,"value"],[72,69,61,73],[72,70,61,74],[72,71,61,75],[73,6,62,8],[73,7,62,9],[73,13,63,13],[74,8,64,12],[75,6,65,8],[76,6,66,8],[76,13,66,15,"params"],[76,19,66,21],[76,20,66,22,"key"],[76,23,66,25],[76,24,66,26],[77,4,67,4],[78,4,68,4],[78,11,68,11],[79,6,68,13,"pathname"],[79,14,68,21],[80,6,68,23,"params"],[81,4,68,30],[81,5,68,31],[82,2,69,0],[83,2,70,0],[83,11,70,9,"encodeParam"],[83,22,70,20,"encodeParam"],[83,23,70,21,"param"],[83,28,70,26],[83,30,70,28],[84,4,71,4],[84,8,71,8,"Array"],[84,13,71,13],[84,14,71,14,"isArray"],[84,21,71,21],[84,22,71,22,"param"],[84,27,71,27],[84,28,71,28],[84,30,71,30],[85,6,72,8],[85,13,72,15,"param"],[85,18,72,20],[85,19,72,21,"map"],[85,22,72,24],[85,23,72,26,"p"],[85,24,72,27],[85,28,72,32,"encodeParam"],[85,39,72,43],[85,40,72,44,"p"],[85,41,72,45],[85,42,72,46],[85,43,72,47],[85,44,72,48,"join"],[85,48,72,52],[85,49,72,53],[85,52,72,56],[85,53,72,57],[86,4,73,4],[87,4,74,4],[87,11,74,11,"encodeURIComponent"],[87,29,74,29],[87,30,74,30,"param"],[87,35,74,35],[87,36,74,36,"toString"],[87,44,74,44],[87,45,74,45],[87,46,74,46],[87,47,74,47],[88,2,75,0],[89,2,76,0],[89,11,76,9,"createQueryParams"],[89,28,76,26,"createQueryParams"],[89,29,76,27,"params"],[89,35,76,33],[89,37,76,35],[90,4,77,4],[90,11,77,12,"Object"],[90,17,77,18],[90,18,77,19,"entries"],[90,25,77,26],[90,26,77,27,"params"],[90,32,77,33],[90,33,77,34],[90,34,79,9,"filter"],[90,40,79,15],[90,41,79,16,"_ref5"],[90,46,79,16],[91,6,79,16],[91,10,79,16,"_ref6"],[91,15,79,16],[91,18,79,16,"_slicedToArray"],[91,32,79,16],[91,33,79,16,"_ref5"],[91,38,79,16],[92,8,79,20,"value"],[92,13,79,25],[92,16,79,25,"_ref6"],[92,21,79,25],[93,6,79,25],[93,13,79,31,"value"],[93,18,79,36],[93,22,79,40],[93,26,79,44],[94,4,79,44],[94,6,79,45],[94,7,80,9,"map"],[94,10,80,12],[94,11,80,13,"_ref7"],[94,16,80,13],[95,6,80,13],[95,10,80,13,"_ref8"],[95,15,80,13],[95,18,80,13,"_slicedToArray"],[95,32,80,13],[95,33,80,13,"_ref7"],[95,38,80,13],[96,8,80,15,"key"],[96,11,80,18],[96,14,80,18,"_ref8"],[96,19,80,18],[97,8,80,20,"value"],[97,13,80,25],[97,16,80,25,"_ref8"],[97,21,80,25],[98,6,80,25],[98,13,80,31],[98,16,80,34,"key"],[98,19,80,37],[98,23,80,41,"encodeURIComponent"],[98,41,80,59],[98,42,80,60,"value"],[98,47,80,65],[98,48,80,66,"toString"],[98,56,80,74],[98,57,80,75],[98,58,80,76],[98,59,80,77],[98,61,80,79],[99,4,80,79],[99,6,80,80],[99,7,81,9,"join"],[99,11,81,13],[99,12,81,14],[99,15,81,17],[99,16,81,18],[100,2,82,0],[101,0,82,1],[101,3]],"functionMap":{"names":["<global>","resolveHref","resolveHrefStringWithSegments","segments.map$argument_0","createQualifiedPathname","encodeParam","param.map$argument_0","createQueryParams","Object.entries.filter$argument_0","Object.entries.filter.map$argument_0"],"mappings":"AAA;oBCK;CDa;AEE;kBCI;SDiB;CFU;AIC;CJgB;AKC;yBCE,qBD;CLG;AOC;gBCG,4BD;aEC,kEF;CPE"},"hasCjsExports":true},"type":"js/module"}]}