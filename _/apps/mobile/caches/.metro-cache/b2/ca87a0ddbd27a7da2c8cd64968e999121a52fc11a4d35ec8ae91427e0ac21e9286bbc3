{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.validatePathConfig = validatePathConfig;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var formatToList = items => Object.entries(items).map(_ref => {\n    var _ref2 = (0, _slicedToArray.default)(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    return `- ${key} (${value})`;\n  }).join('\\n');\n  function validatePathConfig(config) {\n    var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var validation = {\n      path: 'string',\n      initialRouteName: 'string',\n      screens: 'object',\n      ...(root ? null : {\n        alias: 'array',\n        exact: 'boolean',\n        stringify: 'object',\n        parse: 'object'\n      })\n    };\n    if (typeof config !== 'object' || config === null) {\n      throw new Error(`Expected the configuration to be an object, but got ${JSON.stringify(config)}.`);\n    }\n    var validationErrors = Object.fromEntries(Object.keys(config).map(key => {\n      if (key in validation) {\n        var type = validation[key];\n        var value = config[key];\n        if (value !== undefined) {\n          if (type === 'array') {\n            if (!Array.isArray(value)) {\n              return [key, `expected 'Array', got '${typeof value}'`];\n            }\n          } else if (typeof value !== type) {\n            return [key, `expected '${type}', got '${typeof value}'`];\n          }\n        }\n      } else {\n        return [key, 'extraneous'];\n      }\n      return null;\n    }).filter(Boolean));\n    if (Object.keys(validationErrors).length) {\n      throw new Error(`Found invalid properties in the configuration:\\n${formatToList(validationErrors)}\\n\\nYou can only specify the following properties:\\n${formatToList(validation)}\\n\\nIf you want to specify configuration for screens, you need to specify them under a 'screens' property.\\n\\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);\n    }\n    if (root && 'path' in config && typeof config.path === 'string' && config.path.includes(':')) {\n      throw new Error(`Found invalid path '${config.path}'. The 'path' in the top-level configuration cannot contain patterns for params.`);\n    }\n    if ('screens' in config && config.screens) {\n      Object.entries(config.screens).forEach(_ref3 => {\n        var _ref4 = (0, _slicedToArray.default)(_ref3, 2),\n          _ = _ref4[0],\n          value = _ref4[1];\n        if (typeof value !== 'string') {\n          validatePathConfig(value, false);\n        }\n      });\n    }\n  }\n});","lineCount":72,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,4,0,"exports"],[12,9,4,0],[12,10,4,0,"validatePathConfig"],[12,28,4,0],[12,31,4,0,"validatePathConfig"],[12,49,4,0],[13,2,51,1],[13,6,51,1,"_babelRuntimeHelpersSlicedToArray"],[13,39,51,1],[13,42,51,1,"require"],[13,49,51,1],[13,50,51,1,"_dependencyMap"],[13,64,51,1],[14,2,51,1],[14,6,51,1,"_slicedToArray"],[14,20,51,1],[14,23,51,1,"_interopDefault"],[14,38,51,1],[14,39,51,1,"_babelRuntimeHelpersSlicedToArray"],[14,72,51,1],[15,2,3,0],[15,6,3,6,"formatToList"],[15,18,3,18],[15,21,3,21,"items"],[15,26,3,26],[15,30,3,30,"Object"],[15,36,3,36],[15,37,3,37,"entries"],[15,44,3,44],[15,45,3,45,"items"],[15,50,3,50],[15,51,3,51],[15,52,3,52,"map"],[15,55,3,55],[15,56,3,56,"_ref"],[15,60,3,56],[16,4,3,56],[16,8,3,56,"_ref2"],[16,13,3,56],[16,20,3,56,"_slicedToArray"],[16,34,3,56],[16,35,3,56,"default"],[16,42,3,56],[16,44,3,56,"_ref"],[16,48,3,56],[17,6,3,58,"key"],[17,9,3,61],[17,12,3,61,"_ref2"],[17,17,3,61],[18,6,3,63,"value"],[18,11,3,68],[18,14,3,68,"_ref2"],[18,19,3,68],[19,4,3,68],[19,11,3,74],[19,16,3,79,"key"],[19,19,3,82],[19,24,3,87,"value"],[19,29,3,92],[19,32,3,95],[20,2,3,95],[20,4,3,96],[20,5,3,97,"join"],[20,9,3,101],[20,10,3,102],[20,14,3,106],[20,15,3,107],[21,2,4,7],[21,11,4,16,"validatePathConfig"],[21,29,4,34,"validatePathConfig"],[21,30,4,35,"config"],[21,36,4,41],[21,38,4,56],[22,4,4,56],[22,8,4,43,"root"],[22,12,4,47],[22,15,4,47,"arguments"],[22,24,4,47],[22,25,4,47,"length"],[22,31,4,47],[22,39,4,47,"arguments"],[22,48,4,47],[22,56,4,47,"undefined"],[22,65,4,47],[22,68,4,47,"arguments"],[22,77,4,47],[22,83,4,50],[22,87,4,54],[23,4,5,2],[23,8,5,8,"validation"],[23,18,5,18],[23,21,5,21],[24,6,6,4,"path"],[24,10,6,8],[24,12,6,10],[24,20,6,18],[25,6,7,4,"initialRouteName"],[25,22,7,20],[25,24,7,22],[25,32,7,30],[26,6,8,4,"screens"],[26,13,8,11],[26,15,8,13],[26,23,8,21],[27,6,9,4],[27,10,9,8,"root"],[27,14,9,12],[27,17,9,15],[27,21,9,19],[27,24,9,22],[28,8,10,6,"alias"],[28,13,10,11],[28,15,10,13],[28,22,10,20],[29,8,11,6,"exact"],[29,13,11,11],[29,15,11,13],[29,24,11,22],[30,8,12,6,"stringify"],[30,17,12,15],[30,19,12,17],[30,27,12,25],[31,8,13,6,"parse"],[31,13,13,11],[31,15,13,13],[32,6,14,4],[32,7,14,5],[33,4,15,2],[33,5,15,3],[34,4,16,2],[34,8,16,6],[34,15,16,13,"config"],[34,21,16,19],[34,26,16,24],[34,34,16,32],[34,38,16,36,"config"],[34,44,16,42],[34,49,16,47],[34,53,16,51],[34,55,16,53],[35,6,17,4],[35,12,17,10],[35,16,17,14,"Error"],[35,21,17,19],[35,22,17,20],[35,77,17,75,"JSON"],[35,81,17,79],[35,82,17,80,"stringify"],[35,91,17,89],[35,92,17,90,"config"],[35,98,17,96],[35,99,17,97],[35,102,17,100],[35,103,17,101],[36,4,18,2],[37,4,19,2],[37,8,19,8,"validationErrors"],[37,24,19,24],[37,27,19,27,"Object"],[37,33,19,33],[37,34,19,34,"fromEntries"],[37,45,19,45],[37,46,19,46,"Object"],[37,52,19,52],[37,53,19,53,"keys"],[37,57,19,57],[37,58,19,58,"config"],[37,64,19,64],[37,65,19,65],[37,66,19,66,"map"],[37,69,19,69],[37,70,19,70,"key"],[37,73,19,73],[37,77,19,77],[38,6,20,4],[38,10,20,8,"key"],[38,13,20,11],[38,17,20,15,"validation"],[38,27,20,25],[38,29,20,27],[39,8,21,6],[39,12,21,12,"type"],[39,16,21,16],[39,19,21,19,"validation"],[39,29,21,29],[39,30,21,30,"key"],[39,33,21,33],[39,34,21,34],[40,8,23,6],[40,12,23,12,"value"],[40,17,23,17],[40,20,23,20,"config"],[40,26,23,26],[40,27,23,27,"key"],[40,30,23,30],[40,31,23,31],[41,8,24,6],[41,12,24,10,"value"],[41,17,24,15],[41,22,24,20,"undefined"],[41,31,24,29],[41,33,24,31],[42,10,25,8],[42,14,25,12,"type"],[42,18,25,16],[42,23,25,21],[42,30,25,28],[42,32,25,30],[43,12,26,10],[43,16,26,14],[43,17,26,15,"Array"],[43,22,26,20],[43,23,26,21,"isArray"],[43,30,26,28],[43,31,26,29,"value"],[43,36,26,34],[43,37,26,35],[43,39,26,37],[44,14,27,12],[44,21,27,19],[44,22,27,20,"key"],[44,25,27,23],[44,27,27,25],[44,53,27,51],[44,60,27,58,"value"],[44,65,27,63],[44,68,27,66],[44,69,27,67],[45,12,28,10],[46,10,29,8],[46,11,29,9],[46,17,29,15],[46,21,29,19],[46,28,29,26,"value"],[46,33,29,31],[46,38,29,36,"type"],[46,42,29,40],[46,44,29,42],[47,12,30,10],[47,19,30,17],[47,20,30,18,"key"],[47,23,30,21],[47,25,30,23],[47,38,30,36,"type"],[47,42,30,40],[47,53,30,51],[47,60,30,58,"value"],[47,65,30,63],[47,68,30,66],[47,69,30,67],[48,10,31,8],[49,8,32,6],[50,6,33,4],[50,7,33,5],[50,13,33,11],[51,8,34,6],[51,15,34,13],[51,16,34,14,"key"],[51,19,34,17],[51,21,34,19],[51,33,34,31],[51,34,34,32],[52,6,35,4],[53,6,36,4],[53,13,36,11],[53,17,36,15],[54,4,37,2],[54,5,37,3],[54,6,37,4],[54,7,37,5,"filter"],[54,13,37,11],[54,14,37,12,"Boolean"],[54,21,37,19],[54,22,37,20],[54,23,37,21],[55,4,38,2],[55,8,38,6,"Object"],[55,14,38,12],[55,15,38,13,"keys"],[55,19,38,17],[55,20,38,18,"validationErrors"],[55,36,38,34],[55,37,38,35],[55,38,38,36,"length"],[55,44,38,42],[55,46,38,44],[56,6,39,4],[56,12,39,10],[56,16,39,14,"Error"],[56,21,39,19],[56,22,39,20],[56,73,39,71,"formatToList"],[56,85,39,83],[56,86,39,84,"validationErrors"],[56,102,39,100],[56,103,39,101],[56,158,39,156,"formatToList"],[56,170,39,168],[56,171,39,169,"validation"],[56,181,39,179],[56,182,39,180],[56,408,39,406],[56,409,39,407],[57,4,40,2],[58,4,41,2],[58,8,41,6,"root"],[58,12,41,10],[58,16,41,14],[58,22,41,20],[58,26,41,24,"config"],[58,32,41,30],[58,36,41,34],[58,43,41,41,"config"],[58,49,41,47],[58,50,41,48,"path"],[58,54,41,52],[58,59,41,57],[58,67,41,65],[58,71,41,69,"config"],[58,77,41,75],[58,78,41,76,"path"],[58,82,41,80],[58,83,41,81,"includes"],[58,91,41,89],[58,92,41,90],[58,95,41,93],[58,96,41,94],[58,98,41,96],[59,6,42,4],[59,12,42,10],[59,16,42,14,"Error"],[59,21,42,19],[59,22,42,20],[59,45,42,43,"config"],[59,51,42,49],[59,52,42,50,"path"],[59,56,42,54],[59,138,42,136],[59,139,42,137],[60,4,43,2],[61,4,44,2],[61,8,44,6],[61,17,44,15],[61,21,44,19,"config"],[61,27,44,25],[61,31,44,29,"config"],[61,37,44,35],[61,38,44,36,"screens"],[61,45,44,43],[61,47,44,45],[62,6,45,4,"Object"],[62,12,45,10],[62,13,45,11,"entries"],[62,20,45,18],[62,21,45,19,"config"],[62,27,45,25],[62,28,45,26,"screens"],[62,35,45,33],[62,36,45,34],[62,37,45,35,"forEach"],[62,44,45,42],[62,45,45,43,"_ref3"],[62,50,45,43],[62,54,45,59],[63,8,45,59],[63,12,45,59,"_ref4"],[63,17,45,59],[63,24,45,59,"_slicedToArray"],[63,38,45,59],[63,39,45,59,"default"],[63,46,45,59],[63,48,45,59,"_ref3"],[63,53,45,59],[64,10,45,45,"_"],[64,11,45,46],[64,14,45,46,"_ref4"],[64,19,45,46],[65,10,45,48,"value"],[65,15,45,53],[65,18,45,53,"_ref4"],[65,23,45,53],[66,8,46,6],[66,12,46,10],[66,19,46,17,"value"],[66,24,46,22],[66,29,46,27],[66,37,46,35],[66,39,46,37],[67,10,47,8,"validatePathConfig"],[67,28,47,26],[67,29,47,27,"value"],[67,34,47,32],[67,36,47,34],[67,41,47,39],[67,42,47,40],[68,8,48,6],[69,6,49,4],[69,7,49,5],[69,8,49,6],[70,4,50,2],[71,2,51,0],[72,0,51,1],[72,3]],"functionMap":{"names":["<global>","formatToList","Object.entries.map$argument_0","validatePathConfig","Object.keys.map$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;qBCE,mCC,uCD,YD;OGC;sECe;GDkB;2CEQ;KFI;CHE"},"hasCjsExports":false},"type":"js/module"}]}