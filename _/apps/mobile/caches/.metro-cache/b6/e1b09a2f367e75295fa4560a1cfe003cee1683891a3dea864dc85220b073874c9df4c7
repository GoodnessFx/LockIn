{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"expo-constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0},"end":{"line":1,"column":39}}],"key":"pPv5KzfRT0rL6NCr7G9k0o4d1W8=","exportNames":["*"],"imports":1}},{"name":"./Schemes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0},"end":{"line":2,"column":59}}],"key":"n/tFEHLQPHdXg5i1nrK9VhhMvhA=","exportNames":["*"],"imports":1}},{"name":"./validateURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":44}}],"key":"QglbFjhSs1PLl8wx6icnjPl9qpg=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.createURL = createURL;\n  exports.parse = parse;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _expoConstants = require(_dependencyMap[1], \"expo-constants\");\n  var Constants = _interopDefault(_expoConstants);\n  var _Schemes = require(_dependencyMap[2], \"./Schemes\");\n  var _validateURL = require(_dependencyMap[3], \"./validateURL\");\n  function getHostUri() {\n    if (Constants.default.expoConfig?.hostUri) {\n      return Constants.default.expoConfig.hostUri;\n    } else if (!(0, _Schemes.hasCustomScheme)()) {\n      return removeScheme(Constants.default.linkingUri).replace(/\\/--($|\\/.*$)/, '');\n    } else {\n      return null;\n    }\n  }\n  function isExpoHosted() {\n    var hostUri = getHostUri();\n    return !!(hostUri && (/^(.*\\.)?(expo\\.io|exp\\.host|exp\\.direct|expo\\.test|expo\\.dev)(:.*)?(\\/.*)?$/.test(hostUri) || Constants.default.expoGoConfig?.developer));\n  }\n  function removeScheme(url) {\n    return url.replace(/^[a-zA-Z0-9+.-]+:\\/\\//, '');\n  }\n  function removePort(url) {\n    return url.replace(/(?=([a-zA-Z0-9+.-]+:\\/\\/)?[^/]):\\d+/, '');\n  }\n  function removeLeadingSlash(url) {\n    return url.replace(/^\\//, '');\n  }\n  function removeTrailingSlashAndQueryString(url) {\n    return url.replace(/\\/?\\?.*$/, '');\n  }\n  function ensureLeadingSlash(input, shouldAppend) {\n    var hasSlash = input.startsWith('/');\n    if (hasSlash && !shouldAppend) {\n      return input.substring(1);\n    } else if (!hasSlash && shouldAppend) {\n      return `/${input}`;\n    }\n    return input;\n  }\n  function createURL(path) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      scheme = _ref.scheme,\n      _ref$queryParams = _ref.queryParams,\n      queryParams = _ref$queryParams === void 0 ? {} : _ref$queryParams,\n      _ref$isTripleSlashed = _ref.isTripleSlashed,\n      isTripleSlashed = _ref$isTripleSlashed === void 0 ? false : _ref$isTripleSlashed;\n    var resolvedScheme = (0, _Schemes.resolveScheme)({\n      scheme\n    });\n    var hostUri = getHostUri() || '';\n    if ((0, _Schemes.hasCustomScheme)() && isExpoHosted()) {\n      hostUri = '';\n    }\n    if (path) {\n      if (isExpoHosted() && hostUri) {\n        path = `/--/${removeLeadingSlash(path)}`;\n      }\n      if (isTripleSlashed && !path.startsWith('/')) {\n        path = `/${path}`;\n      }\n    } else {\n      path = '';\n    }\n    var queryString = '';\n    var queryStringMatchResult = hostUri.match(/(.*)\\?(.+)/);\n    if (queryStringMatchResult) {\n      hostUri = queryStringMatchResult[1];\n      queryString = queryStringMatchResult[2];\n      var paramsFromHostUri = {};\n      try {\n        paramsFromHostUri = Object.fromEntries(new URLSearchParams(queryString));\n      } catch {}\n      queryParams = {\n        ...queryParams,\n        ...paramsFromHostUri\n      };\n    }\n    queryString = new URLSearchParams(Object.fromEntries(Object.entries(queryParams).filter(_ref2 => {\n      var _ref3 = (0, _slicedToArray.default)(_ref2, 2),\n        value = _ref3[1];\n      return value != null;\n    }))).toString();\n    if (queryString) {\n      queryString = `?${queryString}`;\n    }\n    hostUri = ensureLeadingSlash(hostUri, !isTripleSlashed);\n    var encodedURI = encodeURI(`${resolvedScheme}:${isTripleSlashed ? '/' : ''}/${hostUri}${path}`);\n    return `${encodedURI}${queryString}`;\n  }\n  function parse(url) {\n    (0, _validateURL.validateURL)(url);\n    var queryParams = {};\n    var path = null;\n    var hostname = null;\n    var scheme = null;\n    try {\n      var parsed = new URL(url);\n      parsed.searchParams.forEach((value, key) => {\n        queryParams[key] = decodeURIComponent(value);\n      });\n      path = parsed.pathname || null;\n      hostname = parsed.hostname || null;\n      scheme = parsed.protocol || null;\n    } catch {\n      path = url;\n    }\n    var hostUri = getHostUri() || '';\n    var hostUriStripped = removePort(removeTrailingSlashAndQueryString(hostUri));\n    if (scheme) {\n      scheme = scheme.substring(0, scheme.length - 1);\n    }\n    if (path) {\n      path = removeLeadingSlash(path);\n      var expoPrefix = null;\n      if (hostUriStripped) {\n        var parts = hostUriStripped.split('/');\n        expoPrefix = parts.slice(1).concat(['--/']).join('/');\n      }\n      if (isExpoHosted() && !(0, _Schemes.hasCustomScheme)() && expoPrefix && path.startsWith(expoPrefix)) {\n        path = path.substring(expoPrefix.length);\n        hostname = null;\n      } else if (path.indexOf('+') > -1) {\n        path = path.substring(path.indexOf('+') + 1);\n      }\n    }\n    return {\n      hostname,\n      path,\n      queryParams,\n      scheme\n    };\n  }\n});","lineCount":147,"map":[[12,2,69,0,"exports"],[12,9,69,0],[12,10,69,0,"createURL"],[12,19,69,0],[12,22,69,0,"createURL"],[12,31,69,0],[13,2,122,0,"exports"],[13,9,122,0],[13,10,122,0,"parse"],[13,15,122,0],[13,18,122,0,"parse"],[13,23,122,0],[14,2,167,1],[14,6,167,1,"_babelRuntimeHelpersSlicedToArray"],[14,39,167,1],[14,42,167,1,"require"],[14,49,167,1],[14,50,167,1,"_dependencyMap"],[14,64,167,1],[15,2,167,1],[15,6,167,1,"_slicedToArray"],[15,20,167,1],[15,23,167,1,"_interopDefault"],[15,38,167,1],[15,39,167,1,"_babelRuntimeHelpersSlicedToArray"],[15,72,167,1],[16,2,1,0],[16,6,1,0,"_expoConstants"],[16,20,1,0],[16,23,1,0,"require"],[16,30,1,0],[16,31,1,0,"_dependencyMap"],[16,45,1,0],[17,2,1,0],[17,6,1,0,"Constants"],[17,15,1,0],[17,18,1,0,"_interopDefault"],[17,33,1,0],[17,34,1,0,"_expoConstants"],[17,48,1,0],[18,2,2,0],[18,6,2,0,"_Schemes"],[18,14,2,0],[18,17,2,0,"require"],[18,24,2,0],[18,25,2,0,"_dependencyMap"],[18,39,2,0],[19,2,3,0],[19,6,3,0,"_validateURL"],[19,18,3,0],[19,21,3,0,"require"],[19,28,3,0],[19,29,3,0,"_dependencyMap"],[19,43,3,0],[20,2,4,0],[20,11,4,9,"getHostUri"],[20,21,4,19,"getHostUri"],[20,22,4,19],[20,24,4,22],[21,4,5,4],[21,8,5,8,"Constants"],[21,17,5,17],[21,18,5,17,"default"],[21,25,5,17],[21,26,5,18,"expoConfig"],[21,36,5,28],[21,38,5,30,"hostUri"],[21,45,5,37],[21,47,5,39],[22,6,6,8],[22,13,6,15,"Constants"],[22,22,6,24],[22,23,6,24,"default"],[22,30,6,24],[22,31,6,25,"expoConfig"],[22,41,6,35],[22,42,6,36,"hostUri"],[22,49,6,43],[23,4,7,4],[23,5,7,5],[23,11,8,9],[23,15,8,13],[23,16,8,14],[23,20,8,14,"hasCustomScheme"],[23,28,8,29],[23,29,8,29,"hasCustomScheme"],[23,44,8,29],[23,46,8,30],[23,47,8,31],[23,49,8,33],[24,6,11,8],[24,13,11,15,"removeScheme"],[24,25,11,27],[24,26,11,28,"Constants"],[24,35,11,37],[24,36,11,37,"default"],[24,43,11,37],[24,44,11,38,"linkingUri"],[24,54,11,48],[24,55,11,49],[24,56,11,50,"replace"],[24,63,11,57],[24,64,11,58],[24,79,11,73],[24,81,11,75],[24,83,11,77],[24,84,11,78],[25,4,12,4],[25,5,12,5],[25,11,13,9],[26,6,14,8],[26,13,14,15],[26,17,14,19],[27,4,15,4],[28,2,16,0],[29,2,17,0],[29,11,17,9,"isExpoHosted"],[29,23,17,21,"isExpoHosted"],[29,24,17,21],[29,26,17,24],[30,4,18,4],[30,8,18,10,"hostUri"],[30,15,18,17],[30,18,18,20,"getHostUri"],[30,28,18,30],[30,29,18,31],[30,30,18,32],[31,4,19,4],[31,11,19,11],[31,12,19,12],[31,14,19,14,"hostUri"],[31,21,19,21],[31,26,20,9],[31,103,20,86],[31,104,20,87,"test"],[31,108,20,91],[31,109,20,92,"hostUri"],[31,116,20,99],[31,117,20,100],[31,121,21,12,"Constants"],[31,130,21,21],[31,131,21,21,"default"],[31,138,21,21],[31,139,21,22,"expoGoConfig"],[31,151,21,34],[31,153,21,36,"developer"],[31,162,21,45],[31,163,21,46],[31,164,21,47],[32,2,22,0],[33,2,23,0],[33,11,23,9,"removeScheme"],[33,23,23,21,"removeScheme"],[33,24,23,22,"url"],[33,27,23,25],[33,29,23,27],[34,4,24,4],[34,11,24,11,"url"],[34,14,24,14],[34,15,24,15,"replace"],[34,22,24,22],[34,23,24,23],[34,46,24,46],[34,48,24,48],[34,50,24,50],[34,51,24,51],[35,2,25,0],[36,2,26,0],[36,11,26,9,"removePort"],[36,21,26,19,"removePort"],[36,22,26,20,"url"],[36,25,26,23],[36,27,26,25],[37,4,27,4],[37,11,27,11,"url"],[37,14,27,14],[37,15,27,15,"replace"],[37,22,27,22],[37,23,27,23],[37,60,27,60],[37,62,27,62],[37,64,27,64],[37,65,27,65],[38,2,28,0],[39,2,29,0],[39,11,29,9,"removeLeadingSlash"],[39,29,29,27,"removeLeadingSlash"],[39,30,29,28,"url"],[39,33,29,31],[39,35,29,33],[40,4,30,4],[40,11,30,11,"url"],[40,14,30,14],[40,15,30,15,"replace"],[40,22,30,22],[40,23,30,23],[40,28,30,28],[40,30,30,30],[40,32,30,32],[40,33,30,33],[41,2,31,0],[42,2,32,0],[42,11,32,9,"removeTrailingSlashAndQueryString"],[42,44,32,42,"removeTrailingSlashAndQueryString"],[42,45,32,43,"url"],[42,48,32,46],[42,50,32,48],[43,4,33,4],[43,11,33,11,"url"],[43,14,33,14],[43,15,33,15,"replace"],[43,22,33,22],[43,23,33,23],[43,33,33,33],[43,35,33,35],[43,37,33,37],[43,38,33,38],[44,2,34,0],[45,2,35,0],[45,11,35,9,"ensureLeadingSlash"],[45,29,35,27,"ensureLeadingSlash"],[45,30,35,28,"input"],[45,35,35,33],[45,37,35,35,"shouldAppend"],[45,49,35,47],[45,51,35,49],[46,4,36,4],[46,8,36,10,"hasSlash"],[46,16,36,18],[46,19,36,21,"input"],[46,24,36,26],[46,25,36,27,"startsWith"],[46,35,36,37],[46,36,36,38],[46,39,36,41],[46,40,36,42],[47,4,37,4],[47,8,37,8,"hasSlash"],[47,16,37,16],[47,20,37,20],[47,21,37,21,"shouldAppend"],[47,33,37,33],[47,35,37,35],[48,6,38,8],[48,13,38,15,"input"],[48,18,38,20],[48,19,38,21,"substring"],[48,28,38,30],[48,29,38,31],[48,30,38,32],[48,31,38,33],[49,4,39,4],[49,5,39,5],[49,11,40,9],[49,15,40,13],[49,16,40,14,"hasSlash"],[49,24,40,22],[49,28,40,26,"shouldAppend"],[49,40,40,38],[49,42,40,40],[50,6,41,8],[50,13,41,15],[50,17,41,19,"input"],[50,22,41,24],[50,24,41,26],[51,4,42,4],[52,4,43,4],[52,11,43,11,"input"],[52,16,43,16],[53,2,44,0],[54,2,69,7],[54,11,69,16,"createURL"],[54,20,69,25,"createURL"],[54,21,69,26,"path"],[54,25,69,30],[54,27,69,92],[55,4,69,92],[55,8,69,92,"_ref"],[55,12,69,92],[55,15,69,92,"arguments"],[55,24,69,92],[55,25,69,92,"length"],[55,31,69,92],[55,39,69,92,"arguments"],[55,48,69,92],[55,56,69,92,"undefined"],[55,65,69,92],[55,68,69,92,"arguments"],[55,77,69,92],[55,83,69,88],[55,84,69,89],[55,85,69,90],[56,6,69,34,"scheme"],[56,12,69,40],[56,15,69,40,"_ref"],[56,19,69,40],[56,20,69,34,"scheme"],[56,26,69,40],[57,6,69,40,"_ref$queryParams"],[57,22,69,40],[57,25,69,40,"_ref"],[57,29,69,40],[57,30,69,42,"queryParams"],[57,41,69,53],[58,6,69,42,"queryParams"],[58,17,69,53],[58,20,69,53,"_ref$queryParams"],[58,36,69,53],[58,50,69,56],[58,51,69,57],[58,52,69,58],[58,55,69,58,"_ref$queryParams"],[58,71,69,58],[59,6,69,58,"_ref$isTripleSlashed"],[59,26,69,58],[59,29,69,58,"_ref"],[59,33,69,58],[59,34,69,60,"isTripleSlashed"],[59,49,69,75],[60,6,69,60,"isTripleSlashed"],[60,21,69,75],[60,24,69,75,"_ref$isTripleSlashed"],[60,44,69,75],[60,58,69,78],[60,63,69,83],[60,66,69,83,"_ref$isTripleSlashed"],[60,86,69,83],[61,4,70,4],[61,8,70,10,"resolvedScheme"],[61,22,70,24],[61,25,70,27],[61,29,70,27,"resolveScheme"],[61,37,70,40],[61,38,70,40,"resolveScheme"],[61,51,70,40],[61,53,70,41],[62,6,70,43,"scheme"],[63,4,70,50],[63,5,70,51],[63,6,70,52],[64,4,71,4],[64,8,71,8,"hostUri"],[64,15,71,15],[64,18,71,18,"getHostUri"],[64,28,71,28],[64,29,71,29],[64,30,71,30],[64,34,71,34],[64,36,71,36],[65,4,72,4],[65,8,72,8],[65,12,72,8,"hasCustomScheme"],[65,20,72,23],[65,21,72,23,"hasCustomScheme"],[65,36,72,23],[65,38,72,24],[65,39,72,25],[65,43,72,29,"isExpoHosted"],[65,55,72,41],[65,56,72,42],[65,57,72,43],[65,59,72,45],[66,6,73,8,"hostUri"],[66,13,73,15],[66,16,73,18],[66,18,73,20],[67,4,74,4],[68,4,75,4],[68,8,75,8,"path"],[68,12,75,12],[68,14,75,14],[69,6,76,8],[69,10,76,12,"isExpoHosted"],[69,22,76,24],[69,23,76,25],[69,24,76,26],[69,28,76,30,"hostUri"],[69,35,76,37],[69,37,76,39],[70,8,77,12,"path"],[70,12,77,16],[70,15,77,19],[70,22,77,26,"removeLeadingSlash"],[70,40,77,44],[70,41,77,45,"path"],[70,45,77,49],[70,46,77,50],[70,48,77,52],[71,6,78,8],[72,6,79,8],[72,10,79,12,"isTripleSlashed"],[72,25,79,27],[72,29,79,31],[72,30,79,32,"path"],[72,34,79,36],[72,35,79,37,"startsWith"],[72,45,79,47],[72,46,79,48],[72,49,79,51],[72,50,79,52],[72,52,79,54],[73,8,80,12,"path"],[73,12,80,16],[73,15,80,19],[73,19,80,23,"path"],[73,23,80,27],[73,25,80,29],[74,6,81,8],[75,4,82,4],[75,5,82,5],[75,11,83,9],[76,6,84,8,"path"],[76,10,84,12],[76,13,84,15],[76,15,84,17],[77,4,85,4],[78,4,88,4],[78,8,88,8,"queryString"],[78,19,88,19],[78,22,88,22],[78,24,88,24],[79,4,89,4],[79,8,89,10,"queryStringMatchResult"],[79,30,89,32],[79,33,89,35,"hostUri"],[79,40,89,42],[79,41,89,43,"match"],[79,46,89,48],[79,47,89,49],[79,59,89,61],[79,60,89,62],[80,4,90,4],[80,8,90,8,"queryStringMatchResult"],[80,30,90,30],[80,32,90,32],[81,6,91,8,"hostUri"],[81,13,91,15],[81,16,91,18,"queryStringMatchResult"],[81,38,91,40],[81,39,91,41],[81,40,91,42],[81,41,91,43],[82,6,92,8,"queryString"],[82,17,92,19],[82,20,92,22,"queryStringMatchResult"],[82,42,92,44],[82,43,92,45],[82,44,92,46],[82,45,92,47],[83,6,93,8],[83,10,93,12,"paramsFromHostUri"],[83,27,93,29],[83,30,93,32],[83,31,93,33],[83,32,93,34],[84,6,94,8],[84,10,94,12],[85,8,95,12,"paramsFromHostUri"],[85,25,95,29],[85,28,95,32,"Object"],[85,34,95,38],[85,35,95,39,"fromEntries"],[85,46,95,50],[85,47,97,12],[85,51,97,16,"URLSearchParams"],[85,66,97,31],[85,67,97,32,"queryString"],[85,78,97,43],[85,79,97,44],[85,80,97,45],[86,6,98,8],[86,7,98,9],[86,8,99,8],[86,14,99,14],[86,15,99,16],[87,6,100,8,"queryParams"],[87,17,100,19],[87,20,100,22],[88,8,101,12],[88,11,101,15,"queryParams"],[88,22,101,26],[89,8,102,12],[89,11,102,15,"paramsFromHostUri"],[90,6,103,8],[90,7,103,9],[91,4,104,4],[92,4,105,4,"queryString"],[92,15,105,15],[92,18,105,18],[92,22,105,22,"URLSearchParams"],[92,37,105,37],[92,38,107,4,"Object"],[92,44,107,10],[92,45,107,11,"fromEntries"],[92,56,107,22],[92,57,107,23,"Object"],[92,63,107,29],[92,64,107,30,"entries"],[92,71,107,37],[92,72,107,38,"queryParams"],[92,83,107,49],[92,84,107,50],[92,85,107,51,"filter"],[92,91,107,57],[92,92,107,58,"_ref2"],[92,97,107,58],[93,6,107,58],[93,10,107,58,"_ref3"],[93,15,107,58],[93,22,107,58,"_slicedToArray"],[93,36,107,58],[93,37,107,58,"default"],[93,44,107,58],[93,46,107,58,"_ref2"],[93,51,107,58],[94,8,107,62,"value"],[94,13,107,67],[94,16,107,67,"_ref3"],[94,21,107,67],[95,6,107,67],[95,13,107,73,"value"],[95,18,107,78],[95,22,107,82],[95,26,107,86],[96,4,107,86],[96,6,107,87],[96,7,107,88],[96,8,107,89],[96,9,107,90,"toString"],[96,17,107,98],[96,18,107,99],[96,19,107,100],[97,4,108,4],[97,8,108,8,"queryString"],[97,19,108,19],[97,21,108,21],[98,6,109,8,"queryString"],[98,17,109,19],[98,20,109,22],[98,24,109,26,"queryString"],[98,35,109,37],[98,37,109,39],[99,4,110,4],[100,4,111,4,"hostUri"],[100,11,111,11],[100,14,111,14,"ensureLeadingSlash"],[100,32,111,32],[100,33,111,33,"hostUri"],[100,40,111,40],[100,42,111,42],[100,43,111,43,"isTripleSlashed"],[100,58,111,58],[100,59,111,59],[101,4,113,4],[101,8,113,10,"encodedURI"],[101,18,113,20],[101,21,113,23,"encodeURI"],[101,30,113,32],[101,31,113,33],[101,34,113,36,"resolvedScheme"],[101,48,113,50],[101,52,113,54,"isTripleSlashed"],[101,67,113,69],[101,70,113,72],[101,73,113,75],[101,76,113,78],[101,78,113,80],[101,82,113,84,"hostUri"],[101,89,113,91],[101,92,113,94,"path"],[101,96,113,98],[101,98,113,100],[101,99,113,101],[102,4,114,4],[102,11,114,11],[102,14,114,14,"encodedURI"],[102,24,114,24],[102,27,114,27,"queryString"],[102,38,114,38],[102,40,114,40],[103,2,115,0],[104,2,122,7],[104,11,122,16,"parse"],[104,16,122,21,"parse"],[104,17,122,22,"url"],[104,20,122,25],[104,22,122,27],[105,4,123,4],[105,8,123,4,"validateURL"],[105,20,123,15],[105,21,123,15,"validateURL"],[105,32,123,15],[105,34,123,16,"url"],[105,37,123,19],[105,38,123,20],[106,4,124,4],[106,8,124,10,"queryParams"],[106,19,124,21],[106,22,124,24],[106,23,124,25],[106,24,124,26],[107,4,125,4],[107,8,125,8,"path"],[107,12,125,12],[107,15,125,15],[107,19,125,19],[108,4,126,4],[108,8,126,8,"hostname"],[108,16,126,16],[108,19,126,19],[108,23,126,23],[109,4,127,4],[109,8,127,8,"scheme"],[109,14,127,14],[109,17,127,17],[109,21,127,21],[110,4,128,4],[110,8,128,8],[111,6,129,8],[111,10,129,14,"parsed"],[111,16,129,20],[111,19,129,23],[111,23,129,27,"URL"],[111,26,129,30],[111,27,129,31,"url"],[111,30,129,34],[111,31,129,35],[112,6,130,8,"parsed"],[112,12,130,14],[112,13,130,15,"searchParams"],[112,25,130,27],[112,26,130,28,"forEach"],[112,33,130,35],[112,34,130,36],[112,35,130,37,"value"],[112,40,130,42],[112,42,130,44,"key"],[112,45,130,47],[112,50,130,52],[113,8,131,12,"queryParams"],[113,19,131,23],[113,20,131,24,"key"],[113,23,131,27],[113,24,131,28],[113,27,131,31,"decodeURIComponent"],[113,45,131,49],[113,46,131,50,"value"],[113,51,131,55],[113,52,131,56],[114,6,132,8],[114,7,132,9],[114,8,132,10],[115,6,133,8,"path"],[115,10,133,12],[115,13,133,15,"parsed"],[115,19,133,21],[115,20,133,22,"pathname"],[115,28,133,30],[115,32,133,34],[115,36,133,38],[116,6,134,8,"hostname"],[116,14,134,16],[116,17,134,19,"parsed"],[116,23,134,25],[116,24,134,26,"hostname"],[116,32,134,34],[116,36,134,38],[116,40,134,42],[117,6,135,8,"scheme"],[117,12,135,14],[117,15,135,17,"parsed"],[117,21,135,23],[117,22,135,24,"protocol"],[117,30,135,32],[117,34,135,36],[117,38,135,40],[118,4,136,4],[118,5,136,5],[118,6,137,4],[118,12,137,10],[119,6,138,8,"path"],[119,10,138,12],[119,13,138,15,"url"],[119,16,138,18],[120,4,139,4],[121,4,140,4],[121,8,140,10,"hostUri"],[121,15,140,17],[121,18,140,20,"getHostUri"],[121,28,140,30],[121,29,140,31],[121,30,140,32],[121,34,140,36],[121,36,140,38],[122,4,141,4],[122,8,141,10,"hostUriStripped"],[122,23,141,25],[122,26,141,28,"removePort"],[122,36,141,38],[122,37,141,39,"removeTrailingSlashAndQueryString"],[122,70,141,72],[122,71,141,73,"hostUri"],[122,78,141,80],[122,79,141,81],[122,80,141,82],[123,4,142,4],[123,8,142,8,"scheme"],[123,14,142,14],[123,16,142,16],[124,6,144,8,"scheme"],[124,12,144,14],[124,15,144,17,"scheme"],[124,21,144,23],[124,22,144,24,"substring"],[124,31,144,33],[124,32,144,34],[124,33,144,35],[124,35,144,37,"scheme"],[124,41,144,43],[124,42,144,44,"length"],[124,48,144,50],[124,51,144,53],[124,52,144,54],[124,53,144,55],[125,4,145,4],[126,4,146,4],[126,8,146,8,"path"],[126,12,146,12],[126,14,146,14],[127,6,147,8,"path"],[127,10,147,12],[127,13,147,15,"removeLeadingSlash"],[127,31,147,33],[127,32,147,34,"path"],[127,36,147,38],[127,37,147,39],[128,6,148,8],[128,10,148,12,"expoPrefix"],[128,20,148,22],[128,23,148,25],[128,27,148,29],[129,6,149,8],[129,10,149,12,"hostUriStripped"],[129,25,149,27],[129,27,149,29],[130,8,150,12],[130,12,150,18,"parts"],[130,17,150,23],[130,20,150,26,"hostUriStripped"],[130,35,150,41],[130,36,150,42,"split"],[130,41,150,47],[130,42,150,48],[130,45,150,51],[130,46,150,52],[131,8,151,12,"expoPrefix"],[131,18,151,22],[131,21,151,25,"parts"],[131,26,151,30],[131,27,151,31,"slice"],[131,32,151,36],[131,33,151,37],[131,34,151,38],[131,35,151,39],[131,36,151,40,"concat"],[131,42,151,46],[131,43,151,47],[131,44,151,48],[131,49,151,53],[131,50,151,54],[131,51,151,55],[131,52,151,56,"join"],[131,56,151,60],[131,57,151,61],[131,60,151,64],[131,61,151,65],[132,6,152,8],[133,6,153,8],[133,10,153,12,"isExpoHosted"],[133,22,153,24],[133,23,153,25],[133,24,153,26],[133,28,153,30],[133,29,153,31],[133,33,153,31,"hasCustomScheme"],[133,41,153,46],[133,42,153,46,"hasCustomScheme"],[133,57,153,46],[133,59,153,47],[133,60,153,48],[133,64,153,52,"expoPrefix"],[133,74,153,62],[133,78,153,66,"path"],[133,82,153,70],[133,83,153,71,"startsWith"],[133,93,153,81],[133,94,153,82,"expoPrefix"],[133,104,153,92],[133,105,153,93],[133,107,153,95],[134,8,154,12,"path"],[134,12,154,16],[134,15,154,19,"path"],[134,19,154,23],[134,20,154,24,"substring"],[134,29,154,33],[134,30,154,34,"expoPrefix"],[134,40,154,44],[134,41,154,45,"length"],[134,47,154,51],[134,48,154,52],[135,8,155,12,"hostname"],[135,16,155,20],[135,19,155,23],[135,23,155,27],[136,6,156,8],[136,7,156,9],[136,13,157,13],[136,17,157,17,"path"],[136,21,157,21],[136,22,157,22,"indexOf"],[136,29,157,29],[136,30,157,30],[136,33,157,33],[136,34,157,34],[136,37,157,37],[136,38,157,38],[136,39,157,39],[136,41,157,41],[137,8,158,12,"path"],[137,12,158,16],[137,15,158,19,"path"],[137,19,158,23],[137,20,158,24,"substring"],[137,29,158,33],[137,30,158,34,"path"],[137,34,158,38],[137,35,158,39,"indexOf"],[137,42,158,46],[137,43,158,47],[137,46,158,50],[137,47,158,51],[137,50,158,54],[137,51,158,55],[137,52,158,56],[138,6,159,8],[139,4,160,4],[140,4,161,4],[140,11,161,11],[141,6,162,8,"hostname"],[141,14,162,16],[142,6,163,8,"path"],[142,10,163,12],[143,6,164,8,"queryParams"],[143,17,164,19],[144,6,165,8,"scheme"],[145,4,166,4],[145,5,166,5],[146,2,167,0],[147,0,167,1],[147,3]],"functionMap":{"names":["<global>","getHostUri","isExpoHosted","removeScheme","removePort","removeLeadingSlash","removeTrailingSlashAndQueryString","ensureLeadingSlash","createURL","Object.entries.filter$argument_0","parse","parsed.searchParams.forEach$argument_0"],"mappings":"AAA;ACG;CDY;AEC;CFK;AGC;CHE;AIC;CJE;AKC;CLE;AMC;CNE;AOC;CPS;OQyB;0DCsC,4BD;CRQ;OUO;oCCQ;SDE;CVmC"},"hasCjsExports":false},"type":"js/module"}]}