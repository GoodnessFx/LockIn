{"dependencies":[{"name":"expo-task-manager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"bYMruywqSxptqIFJf3NLT25O6Io=","exportNames":["*"],"imports":1}},{"name":"expo-background-fetch","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":51},"end":{"line":2,"column":57,"index":108}}],"key":"4Nr1o59VIO+Gg5JXPmDg2JUWavo=","exportNames":["*"],"imports":1}},{"name":"expo-notifications","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":110},"end":{"line":3,"column":52,"index":162}}],"key":"nrBDtkRVez7cBhLzyaRjl+xVfvE=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":164},"end":{"line":4,"column":69,"index":233}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"../../config/constants","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":235},"end":{"line":5,"column":52,"index":287}}],"key":"U9pueC/b5z4sXLFd1HJh3AQ9Q2Q=","exportNames":["*"],"imports":1}},{"name":"../ai/aiService","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":289},"end":{"line":6,"column":44,"index":333}}],"key":"VRCLnp/GSzDBK7kQQA4W6a/RKp4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.registerTasks = registerTasks;\n  exports.unregisterTasks = unregisterTasks;\n  exports.updateLastActive = updateLastActive;\n  exports.getRecoverySuggestions = getRecoverySuggestions;\n  exports.clearRecoverySuggestions = clearRecoverySuggestions;\n  var _expoTaskManager = require(_dependencyMap[0], \"expo-task-manager\");\n  var TaskManager = _interopNamespace(_expoTaskManager);\n  var _expoBackgroundFetch = require(_dependencyMap[1], \"expo-background-fetch\");\n  var BackgroundFetch = _interopNamespace(_expoBackgroundFetch);\n  var _expoNotifications = require(_dependencyMap[2], \"expo-notifications\");\n  var Notifications = _interopNamespace(_expoNotifications);\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[3], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _configConstants = require(_dependencyMap[4], \"../../config/constants\");\n  var _aiAiService = require(_dependencyMap[5], \"../ai/aiService\");\n  const TASK_NAME = 'LOCKIN_INACTIVITY';\n  const INACTIVITY_THRESHOLD = _configConstants.APP_CONFIG.INACTIVITY_THRESHOLD_HOURS * 60 * 60 * 1000; // Convert to milliseconds\n\n  // Configure notification handler\n  Notifications.setNotificationHandler({\n    handleNotification: async () => ({\n      shouldShowAlert: true,\n      shouldPlaySound: true,\n      shouldSetBadge: false\n    })\n  });\n  TaskManager.defineTask(TASK_NAME, async () => {\n    try {\n      console.log('Background task running: Checking for inactivity...');\n\n      // Get last active timestamp\n      const lastActiveStr = await AsyncStorage.default.getItem('lockin:lastActive');\n      const lastActive = lastActiveStr ? new Date(lastActiveStr) : new Date();\n      const now = new Date();\n      const timeSinceActive = now.getTime() - lastActive.getTime();\n\n      // Check if user has been inactive\n      if (timeSinceActive > INACTIVITY_THRESHOLD) {\n        console.log('User inactive detected, creating recovery suggestions...');\n\n        // Get user progress data\n        const progressStr = await AsyncStorage.default.getItem('lockin:progress');\n        const userProfileStr = await AsyncStorage.default.getItem('lockin:userProfile');\n        if (progressStr && userProfileStr) {\n          const progress = JSON.parse(progressStr);\n          const userProfile = JSON.parse(userProfileStr);\n\n          // Generate recovery suggestions using AI\n          const recoveryResponse = await _aiAiService.aiService.getRecoverySuggestions({\n            progress,\n            userProfile\n          });\n\n          // Schedule notification\n          await scheduleRecoveryNotification(recoveryResponse.message);\n\n          // Store recovery suggestions\n          await AsyncStorage.default.setItem('lockin:recoverySuggestions', JSON.stringify({\n            message: recoveryResponse.message,\n            suggestions: recoveryResponse.suggestions || [],\n            timestamp: now.toISOString()\n          }));\n        }\n      }\n\n      // Update last check timestamp\n      await AsyncStorage.default.setItem('lockin:lastBackgroundCheck', now.toISOString());\n      return BackgroundFetch.BackgroundFetchResult.NewData;\n    } catch (error) {\n      console.error('Background task error:', error);\n      return BackgroundFetch.BackgroundFetchResult.Failed;\n    }\n  });\n  async function scheduleRecoveryNotification(message) {\n    try {\n      // Cancel any existing recovery notifications\n      await Notifications.cancelAllScheduledNotificationsAsync();\n\n      // Schedule new notification\n      await Notifications.scheduleNotificationAsync({\n        content: {\n          title: 'Time to get back on track! ðŸš€',\n          body: message.length > 100 ? message.substring(0, 100) + '...' : message,\n          data: {\n            type: 'recovery',\n            message\n          }\n        },\n        trigger: {\n          seconds: 1\n        } // Send immediately\n      });\n    } catch (error) {\n      console.error('Failed to schedule notification:', error);\n    }\n  }\n  async function registerTasks() {\n    try {\n      // Request notification permissions\n      const {\n        status\n      } = await Notifications.requestPermissionsAsync();\n      if (status !== 'granted') {\n        console.warn('Notification permissions not granted');\n      }\n\n      // Register background fetch task\n      await BackgroundFetch.registerTaskAsync(TASK_NAME, {\n        minimumInterval: 60 * 60 * 6,\n        // 6 hours\n        stopOnTerminate: false,\n        startOnBoot: true\n      });\n      console.log('Background tasks registered successfully');\n    } catch (error) {\n      console.error('Failed to register background tasks:', error);\n    }\n  }\n  async function unregisterTasks() {\n    try {\n      await BackgroundFetch.unregisterTaskAsync(TASK_NAME);\n      await Notifications.cancelAllScheduledNotificationsAsync();\n      console.log('Background tasks unregistered successfully');\n    } catch (error) {\n      console.error('Failed to unregister background tasks:', error);\n    }\n  }\n  async function updateLastActive() {\n    try {\n      await AsyncStorage.default.setItem('lockin:lastActive', new Date().toISOString());\n    } catch (error) {\n      console.error('Failed to update last active timestamp:', error);\n    }\n  }\n  async function getRecoverySuggestions() {\n    try {\n      const suggestionsStr = await AsyncStorage.default.getItem('lockin:recoverySuggestions');\n      return suggestionsStr ? JSON.parse(suggestionsStr) : null;\n    } catch (error) {\n      console.error('Failed to get recovery suggestions:', error);\n      return null;\n    }\n  }\n  async function clearRecoverySuggestions() {\n    try {\n      await AsyncStorage.default.removeItem('lockin:recoverySuggestions');\n    } catch (error) {\n      console.error('Failed to clear recovery suggestions:', error);\n    }\n  }\n});","lineCount":177,"map":[[27,2,89,0,"exports"],[27,9,89,0],[27,10,89,0,"registerTasks"],[27,23,89,0],[27,26,89,0,"registerTasks"],[27,39,89,0],[28,2,110,0,"exports"],[28,9,110,0],[28,10,110,0,"unregisterTasks"],[28,25,110,0],[28,28,110,0,"unregisterTasks"],[28,43,110,0],[29,2,120,0,"exports"],[29,9,120,0],[29,10,120,0,"updateLastActive"],[29,26,120,0],[29,29,120,0,"updateLastActive"],[29,45,120,0],[30,2,128,0,"exports"],[30,9,128,0],[30,10,128,0,"getRecoverySuggestions"],[30,32,128,0],[30,35,128,0,"getRecoverySuggestions"],[30,57,128,0],[31,2,138,0,"exports"],[31,9,138,0],[31,10,138,0,"clearRecoverySuggestions"],[31,34,138,0],[31,37,138,0,"clearRecoverySuggestions"],[31,61,138,0],[32,2,1,0],[32,6,1,0,"_expoTaskManager"],[32,22,1,0],[32,25,1,0,"require"],[32,32,1,0],[32,33,1,0,"_dependencyMap"],[32,47,1,0],[33,2,1,0],[33,6,1,0,"TaskManager"],[33,17,1,0],[33,20,1,0,"_interopNamespace"],[33,37,1,0],[33,38,1,0,"_expoTaskManager"],[33,54,1,0],[34,2,2,0],[34,6,2,0,"_expoBackgroundFetch"],[34,26,2,0],[34,29,2,0,"require"],[34,36,2,0],[34,37,2,0,"_dependencyMap"],[34,51,2,0],[35,2,2,0],[35,6,2,0,"BackgroundFetch"],[35,21,2,0],[35,24,2,0,"_interopNamespace"],[35,41,2,0],[35,42,2,0,"_expoBackgroundFetch"],[35,62,2,0],[36,2,3,0],[36,6,3,0,"_expoNotifications"],[36,24,3,0],[36,27,3,0,"require"],[36,34,3,0],[36,35,3,0,"_dependencyMap"],[36,49,3,0],[37,2,3,0],[37,6,3,0,"Notifications"],[37,19,3,0],[37,22,3,0,"_interopNamespace"],[37,39,3,0],[37,40,3,0,"_expoNotifications"],[37,58,3,0],[38,2,4,0],[38,6,4,0,"_reactNativeAsyncStorageAsyncStorage"],[38,42,4,0],[38,45,4,0,"require"],[38,52,4,0],[38,53,4,0,"_dependencyMap"],[38,67,4,0],[39,2,4,0],[39,6,4,0,"AsyncStorage"],[39,18,4,0],[39,21,4,0,"_interopDefault"],[39,36,4,0],[39,37,4,0,"_reactNativeAsyncStorageAsyncStorage"],[39,73,4,0],[40,2,5,0],[40,6,5,0,"_configConstants"],[40,22,5,0],[40,25,5,0,"require"],[40,32,5,0],[40,33,5,0,"_dependencyMap"],[40,47,5,0],[41,2,6,0],[41,6,6,0,"_aiAiService"],[41,18,6,0],[41,21,6,0,"require"],[41,28,6,0],[41,29,6,0,"_dependencyMap"],[41,43,6,0],[42,2,8,0],[42,8,8,6,"TASK_NAME"],[42,17,8,15],[42,20,8,18],[42,39,8,37],[43,2,9,0],[43,8,9,6,"INACTIVITY_THRESHOLD"],[43,28,9,26],[43,31,9,29,"APP_CONFIG"],[43,47,9,39],[43,48,9,39,"APP_CONFIG"],[43,58,9,39],[43,59,9,40,"INACTIVITY_THRESHOLD_HOURS"],[43,85,9,66],[43,88,9,69],[43,90,9,71],[43,93,9,74],[43,95,9,76],[43,98,9,79],[43,102,9,83],[43,103,9,84],[43,104,9,85],[45,2,11,0],[46,2,12,0,"Notifications"],[46,15,12,13],[46,16,12,14,"setNotificationHandler"],[46,38,12,36],[46,39,12,37],[47,4,13,2,"handleNotification"],[47,22,13,20],[47,24,13,22],[47,30,13,22,"handleNotification"],[47,31,13,22],[47,37,13,35],[48,6,14,4,"shouldShowAlert"],[48,21,14,19],[48,23,14,21],[48,27,14,25],[49,6,15,4,"shouldPlaySound"],[49,21,15,19],[49,23,15,21],[49,27,15,25],[50,6,16,4,"shouldSetBadge"],[50,20,16,18],[50,22,16,20],[51,4,17,2],[51,5,17,3],[52,2,18,0],[52,3,18,1],[52,4,18,2],[53,2,20,0,"TaskManager"],[53,13,20,11],[53,14,20,12,"defineTask"],[53,24,20,22],[53,25,20,23,"TASK_NAME"],[53,34,20,32],[53,36,20,34],[53,48,20,46],[54,4,21,2],[54,8,21,6],[55,6,22,4,"console"],[55,13,22,11],[55,14,22,12,"log"],[55,17,22,15],[55,18,22,16],[55,71,22,69],[55,72,22,70],[57,6,24,4],[58,6,25,4],[58,12,25,10,"lastActiveStr"],[58,25,25,23],[58,28,25,26],[58,34,25,32,"AsyncStorage"],[58,46,25,44],[58,47,25,44,"default"],[58,54,25,44],[58,55,25,45,"getItem"],[58,62,25,52],[58,63,25,53],[58,82,25,72],[58,83,25,73],[59,6,26,4],[59,12,26,10,"lastActive"],[59,22,26,20],[59,25,26,23,"lastActiveStr"],[59,38,26,36],[59,41,26,39],[59,45,26,43,"Date"],[59,49,26,47],[59,50,26,48,"lastActiveStr"],[59,63,26,61],[59,64,26,62],[59,67,26,65],[59,71,26,69,"Date"],[59,75,26,73],[59,76,26,74],[59,77,26,75],[60,6,27,4],[60,12,27,10,"now"],[60,15,27,13],[60,18,27,16],[60,22,27,20,"Date"],[60,26,27,24],[60,27,27,25],[60,28,27,26],[61,6,28,4],[61,12,28,10,"timeSinceActive"],[61,27,28,25],[61,30,28,28,"now"],[61,33,28,31],[61,34,28,32,"getTime"],[61,41,28,39],[61,42,28,40],[61,43,28,41],[61,46,28,44,"lastActive"],[61,56,28,54],[61,57,28,55,"getTime"],[61,64,28,62],[61,65,28,63],[61,66,28,64],[63,6,30,4],[64,6,31,4],[64,10,31,8,"timeSinceActive"],[64,25,31,23],[64,28,31,26,"INACTIVITY_THRESHOLD"],[64,48,31,46],[64,50,31,48],[65,8,32,6,"console"],[65,15,32,13],[65,16,32,14,"log"],[65,19,32,17],[65,20,32,18],[65,78,32,76],[65,79,32,77],[67,8,34,6],[68,8,35,6],[68,14,35,12,"progressStr"],[68,25,35,23],[68,28,35,26],[68,34,35,32,"AsyncStorage"],[68,46,35,44],[68,47,35,44,"default"],[68,54,35,44],[68,55,35,45,"getItem"],[68,62,35,52],[68,63,35,53],[68,80,35,70],[68,81,35,71],[69,8,36,6],[69,14,36,12,"userProfileStr"],[69,28,36,26],[69,31,36,29],[69,37,36,35,"AsyncStorage"],[69,49,36,47],[69,50,36,47,"default"],[69,57,36,47],[69,58,36,48,"getItem"],[69,65,36,55],[69,66,36,56],[69,86,36,76],[69,87,36,77],[70,8,38,6],[70,12,38,10,"progressStr"],[70,23,38,21],[70,27,38,25,"userProfileStr"],[70,41,38,39],[70,43,38,41],[71,10,39,8],[71,16,39,14,"progress"],[71,24,39,22],[71,27,39,25,"JSON"],[71,31,39,29],[71,32,39,30,"parse"],[71,37,39,35],[71,38,39,36,"progressStr"],[71,49,39,47],[71,50,39,48],[72,10,40,8],[72,16,40,14,"userProfile"],[72,27,40,25],[72,30,40,28,"JSON"],[72,34,40,32],[72,35,40,33,"parse"],[72,40,40,38],[72,41,40,39,"userProfileStr"],[72,55,40,53],[72,56,40,54],[74,10,42,8],[75,10,43,8],[75,16,43,14,"recoveryResponse"],[75,32,43,30],[75,35,43,33],[75,41,43,39,"aiService"],[75,53,43,48],[75,54,43,48,"aiService"],[75,63,43,48],[75,64,43,49,"getRecoverySuggestions"],[75,86,43,71],[75,87,43,72],[76,12,44,10,"progress"],[76,20,44,18],[77,12,45,10,"userProfile"],[78,10,46,8],[78,11,46,9],[78,12,46,10],[80,10,48,8],[81,10,49,8],[81,16,49,14,"scheduleRecoveryNotification"],[81,44,49,42],[81,45,49,43,"recoveryResponse"],[81,61,49,59],[81,62,49,60,"message"],[81,69,49,67],[81,70,49,68],[83,10,51,8],[84,10,52,8],[84,16,52,14,"AsyncStorage"],[84,28,52,26],[84,29,52,26,"default"],[84,36,52,26],[84,37,52,27,"setItem"],[84,44,52,34],[84,45,52,35],[84,73,52,63],[84,75,52,65,"JSON"],[84,79,52,69],[84,80,52,70,"stringify"],[84,89,52,79],[84,90,52,80],[85,12,53,10,"message"],[85,19,53,17],[85,21,53,19,"recoveryResponse"],[85,37,53,35],[85,38,53,36,"message"],[85,45,53,43],[86,12,54,10,"suggestions"],[86,23,54,21],[86,25,54,23,"recoveryResponse"],[86,41,54,39],[86,42,54,40,"suggestions"],[86,53,54,51],[86,57,54,55],[86,59,54,57],[87,12,55,10,"timestamp"],[87,21,55,19],[87,23,55,21,"now"],[87,26,55,24],[87,27,55,25,"toISOString"],[87,38,55,36],[87,39,55,37],[88,10,56,8],[88,11,56,9],[88,12,56,10],[88,13,56,11],[89,8,57,6],[90,6,58,4],[92,6,60,4],[93,6,61,4],[93,12,61,10,"AsyncStorage"],[93,24,61,22],[93,25,61,22,"default"],[93,32,61,22],[93,33,61,23,"setItem"],[93,40,61,30],[93,41,61,31],[93,69,61,59],[93,71,61,61,"now"],[93,74,61,64],[93,75,61,65,"toISOString"],[93,86,61,76],[93,87,61,77],[93,88,61,78],[93,89,61,79],[94,6,63,4],[94,13,63,11,"BackgroundFetch"],[94,28,63,26],[94,29,63,27,"BackgroundFetchResult"],[94,50,63,48],[94,51,63,49,"NewData"],[94,58,63,56],[95,4,64,2],[95,5,64,3],[95,6,64,4],[95,13,64,11,"error"],[95,18,64,16],[95,20,64,18],[96,6,65,4,"console"],[96,13,65,11],[96,14,65,12,"error"],[96,19,65,17],[96,20,65,18],[96,44,65,42],[96,46,65,44,"error"],[96,51,65,49],[96,52,65,50],[97,6,66,4],[97,13,66,11,"BackgroundFetch"],[97,28,66,26],[97,29,66,27,"BackgroundFetchResult"],[97,50,66,48],[97,51,66,49,"Failed"],[97,57,66,55],[98,4,67,2],[99,2,68,0],[99,3,68,1],[99,4,68,2],[100,2,70,0],[100,17,70,15,"scheduleRecoveryNotification"],[100,45,70,43,"scheduleRecoveryNotification"],[100,46,70,44,"message"],[100,53,70,59],[100,55,70,76],[101,4,71,2],[101,8,71,6],[102,6,72,4],[103,6,73,4],[103,12,73,10,"Notifications"],[103,25,73,23],[103,26,73,24,"cancelAllScheduledNotificationsAsync"],[103,62,73,60],[103,63,73,61],[103,64,73,62],[105,6,75,4],[106,6,76,4],[106,12,76,10,"Notifications"],[106,25,76,23],[106,26,76,24,"scheduleNotificationAsync"],[106,51,76,49],[106,52,76,50],[107,8,77,6,"content"],[107,15,77,13],[107,17,77,15],[108,10,78,8,"title"],[108,15,78,13],[108,17,78,15],[108,48,78,46],[109,10,79,8,"body"],[109,14,79,12],[109,16,79,14,"message"],[109,23,79,21],[109,24,79,22,"length"],[109,30,79,28],[109,33,79,31],[109,36,79,34],[109,39,79,37,"message"],[109,46,79,44],[109,47,79,45,"substring"],[109,56,79,54],[109,57,79,55],[109,58,79,56],[109,60,79,58],[109,63,79,61],[109,64,79,62],[109,67,79,65],[109,72,79,70],[109,75,79,73,"message"],[109,82,79,80],[110,10,80,8,"data"],[110,14,80,12],[110,16,80,14],[111,12,80,16,"type"],[111,16,80,20],[111,18,80,22],[111,28,80,32],[112,12,80,34,"message"],[113,10,80,42],[114,8,81,6],[114,9,81,7],[115,8,82,6,"trigger"],[115,15,82,13],[115,17,82,15],[116,10,82,17,"seconds"],[116,17,82,24],[116,19,82,26],[117,8,82,28],[117,9,82,29],[117,10,82,31],[118,6,83,4],[118,7,83,5],[118,8,83,6],[119,4,84,2],[119,5,84,3],[119,6,84,4],[119,13,84,11,"error"],[119,18,84,16],[119,20,84,18],[120,6,85,4,"console"],[120,13,85,11],[120,14,85,12,"error"],[120,19,85,17],[120,20,85,18],[120,54,85,52],[120,56,85,54,"error"],[120,61,85,59],[120,62,85,60],[121,4,86,2],[122,2,87,0],[123,2,89,7],[123,17,89,22,"registerTasks"],[123,30,89,35,"registerTasks"],[123,31,89,35],[123,33,89,53],[124,4,90,2],[124,8,90,6],[125,6,91,4],[126,6,92,4],[126,12,92,10],[127,8,92,12,"status"],[128,6,92,19],[128,7,92,20],[128,10,92,23],[128,16,92,29,"Notifications"],[128,29,92,42],[128,30,92,43,"requestPermissionsAsync"],[128,53,92,66],[128,54,92,67],[128,55,92,68],[129,6,93,4],[129,10,93,8,"status"],[129,16,93,14],[129,21,93,19],[129,30,93,28],[129,32,93,30],[130,8,94,6,"console"],[130,15,94,13],[130,16,94,14,"warn"],[130,20,94,18],[130,21,94,19],[130,59,94,57],[130,60,94,58],[131,6,95,4],[133,6,97,4],[134,6,98,4],[134,12,98,10,"BackgroundFetch"],[134,27,98,25],[134,28,98,26,"registerTaskAsync"],[134,45,98,43],[134,46,98,44,"TASK_NAME"],[134,55,98,53],[134,57,98,55],[135,8,99,6,"minimumInterval"],[135,23,99,21],[135,25,99,23],[135,27,99,25],[135,30,99,28],[135,32,99,30],[135,35,99,33],[135,36,99,34],[136,8,99,36],[137,8,100,6,"stopOnTerminate"],[137,23,100,21],[137,25,100,23],[137,30,100,28],[138,8,101,6,"startOnBoot"],[138,19,101,17],[138,21,101,19],[139,6,102,4],[139,7,102,5],[139,8,102,6],[140,6,104,4,"console"],[140,13,104,11],[140,14,104,12,"log"],[140,17,104,15],[140,18,104,16],[140,60,104,58],[140,61,104,59],[141,4,105,2],[141,5,105,3],[141,6,105,4],[141,13,105,11,"error"],[141,18,105,16],[141,20,105,18],[142,6,106,4,"console"],[142,13,106,11],[142,14,106,12,"error"],[142,19,106,17],[142,20,106,18],[142,58,106,56],[142,60,106,58,"error"],[142,65,106,63],[142,66,106,64],[143,4,107,2],[144,2,108,0],[145,2,110,7],[145,17,110,22,"unregisterTasks"],[145,32,110,37,"unregisterTasks"],[145,33,110,37],[145,35,110,55],[146,4,111,2],[146,8,111,6],[147,6,112,4],[147,12,112,10,"BackgroundFetch"],[147,27,112,25],[147,28,112,26,"unregisterTaskAsync"],[147,47,112,45],[147,48,112,46,"TASK_NAME"],[147,57,112,55],[147,58,112,56],[148,6,113,4],[148,12,113,10,"Notifications"],[148,25,113,23],[148,26,113,24,"cancelAllScheduledNotificationsAsync"],[148,62,113,60],[148,63,113,61],[148,64,113,62],[149,6,114,4,"console"],[149,13,114,11],[149,14,114,12,"log"],[149,17,114,15],[149,18,114,16],[149,62,114,60],[149,63,114,61],[150,4,115,2],[150,5,115,3],[150,6,115,4],[150,13,115,11,"error"],[150,18,115,16],[150,20,115,18],[151,6,116,4,"console"],[151,13,116,11],[151,14,116,12,"error"],[151,19,116,17],[151,20,116,18],[151,60,116,58],[151,62,116,60,"error"],[151,67,116,65],[151,68,116,66],[152,4,117,2],[153,2,118,0],[154,2,120,7],[154,17,120,22,"updateLastActive"],[154,33,120,38,"updateLastActive"],[154,34,120,38],[154,36,120,56],[155,4,121,2],[155,8,121,6],[156,6,122,4],[156,12,122,10,"AsyncStorage"],[156,24,122,22],[156,25,122,22,"default"],[156,32,122,22],[156,33,122,23,"setItem"],[156,40,122,30],[156,41,122,31],[156,60,122,50],[156,62,122,52],[156,66,122,56,"Date"],[156,70,122,60],[156,71,122,61],[156,72,122,62],[156,73,122,63,"toISOString"],[156,84,122,74],[156,85,122,75],[156,86,122,76],[156,87,122,77],[157,4,123,2],[157,5,123,3],[157,6,123,4],[157,13,123,11,"error"],[157,18,123,16],[157,20,123,18],[158,6,124,4,"console"],[158,13,124,11],[158,14,124,12,"error"],[158,19,124,17],[158,20,124,18],[158,61,124,59],[158,63,124,61,"error"],[158,68,124,66],[158,69,124,67],[159,4,125,2],[160,2,126,0],[161,2,128,7],[161,17,128,22,"getRecoverySuggestions"],[161,39,128,44,"getRecoverySuggestions"],[161,40,128,44],[161,42,128,61],[162,4,129,2],[162,8,129,6],[163,6,130,4],[163,12,130,10,"suggestionsStr"],[163,26,130,24],[163,29,130,27],[163,35,130,33,"AsyncStorage"],[163,47,130,45],[163,48,130,45,"default"],[163,55,130,45],[163,56,130,46,"getItem"],[163,63,130,53],[163,64,130,54],[163,92,130,82],[163,93,130,83],[164,6,131,4],[164,13,131,11,"suggestionsStr"],[164,27,131,25],[164,30,131,28,"JSON"],[164,34,131,32],[164,35,131,33,"parse"],[164,40,131,38],[164,41,131,39,"suggestionsStr"],[164,55,131,53],[164,56,131,54],[164,59,131,57],[164,63,131,61],[165,4,132,2],[165,5,132,3],[165,6,132,4],[165,13,132,11,"error"],[165,18,132,16],[165,20,132,18],[166,6,133,4,"console"],[166,13,133,11],[166,14,133,12,"error"],[166,19,133,17],[166,20,133,18],[166,57,133,55],[166,59,133,57,"error"],[166,64,133,62],[166,65,133,63],[167,6,134,4],[167,13,134,11],[167,17,134,15],[168,4,135,2],[169,2,136,0],[170,2,138,7],[170,17,138,22,"clearRecoverySuggestions"],[170,41,138,46,"clearRecoverySuggestions"],[170,42,138,46],[170,44,138,64],[171,4,139,2],[171,8,139,6],[172,6,140,4],[172,12,140,10,"AsyncStorage"],[172,24,140,22],[172,25,140,22,"default"],[172,32,140,22],[172,33,140,23,"removeItem"],[172,43,140,33],[172,44,140,34],[172,72,140,62],[172,73,140,63],[173,4,141,2],[173,5,141,3],[173,6,141,4],[173,13,141,11,"error"],[173,18,141,16],[173,20,141,18],[174,6,142,4,"console"],[174,13,142,11],[174,14,142,12,"error"],[174,19,142,17],[174,20,142,18],[174,59,142,57],[174,61,142,59,"error"],[174,66,142,64],[174,67,142,65],[175,4,143,2],[176,2,144,0],[177,0,144,1],[177,3]],"functionMap":{"names":["<global>","Notifications.setNotificationHandler$argument_0.handleNotification","TaskManager.defineTask$argument_1","scheduleRecoveryNotification","registerTasks","unregisterTasks","updateLastActive","getRecoverySuggestions","clearRecoverySuggestions"],"mappings":"AAA;sBCY;IDI;kCEG;CFgD;AGE;CHiB;OIE;CJmB;OKE;CLQ;OME;CNM;OOE;CPQ;OQE;CRM"},"hasCjsExports":false},"type":"js/module"}]}