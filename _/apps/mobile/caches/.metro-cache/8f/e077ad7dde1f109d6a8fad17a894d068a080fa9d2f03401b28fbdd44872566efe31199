{"dependencies":[{"name":"../../global-state/router-store","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23},"end":{"line":6,"column":65}}],"key":"34G8cf9eMVuL1UIt4w1T43KGPlk=","exportNames":["*"],"imports":1}},{"name":"../../global-state/routing","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18},"end":{"line":7,"column":55}}],"key":"/KYD16J3C+S2+TKpFA4/GL5ghgM=","exportNames":["*"],"imports":1}},{"name":"../href","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":15},"end":{"line":8,"column":33}}],"key":"JFYDN89CjCE9uy6rzcI/l/zLru8=","exportNames":["*"],"imports":1}},{"name":"../../navigationParams","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":27},"end":{"line":9,"column":60}}],"key":"XAh+4Y1ikoKrpGxORep8MZ3uXwI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getTabPathFromRootStateByHref = getTabPathFromRootStateByHref;\n  exports.getPreloadedRouteFromRootStateByHref = getPreloadedRouteFromRootStateByHref;\n  exports.deepEqual = deepEqual;\n  var router_store_1 = require(_dependencyMap[0], \"../../global-state/router-store\");\n  var routing_1 = require(_dependencyMap[1], \"../../global-state/routing\");\n  var href_1 = require(_dependencyMap[2], \"../href\");\n  var navigationParams_1 = require(_dependencyMap[3], \"../../navigationParams\");\n  function getTabPathFromRootStateByHref(href, rootState) {\n    var hrefState = router_store_1.store.getStateForHref((0, href_1.resolveHref)(href));\n    var state = rootState;\n    if (!hrefState || !state) {\n      return [];\n    }\n    var _ref = (0, routing_1.findDivergentState)(hrefState, state, true),\n      navigationRoutes = _ref.navigationRoutes;\n    if (!navigationRoutes.length) {\n      return [];\n    }\n    var tabPath = [];\n    navigationRoutes.forEach((route, i, arr) => {\n      if (route.state?.type === 'tab') {\n        var tabState = route.state;\n        var oldTabKey = tabState.routes[tabState.index].key;\n        if (!arr[i + 1]) {\n          throw new Error(`New tab route is missing for ${route.key}. This is likely an internal Expo Router bug.`);\n        }\n        var newTabKey = arr[i + 1].key;\n        tabPath.push({\n          oldTabKey,\n          newTabKey\n        });\n      }\n    });\n    return tabPath;\n  }\n  function getPreloadedRouteFromRootStateByHref(href, rootState) {\n    var hrefState = router_store_1.store.getStateForHref((0, href_1.resolveHref)(href));\n    var state = rootState;\n    if (!hrefState || !state) {\n      return undefined;\n    }\n    var _ref2 = (0, routing_1.findDivergentState)(hrefState, state, true),\n      navigationState = _ref2.navigationState,\n      actionStateRoute = _ref2.actionStateRoute;\n    if (!navigationState || !actionStateRoute) {\n      return undefined;\n    }\n    if (navigationState.type === 'stack') {\n      var stackState = navigationState;\n      var payload = (0, routing_1.getPayloadFromStateRoute)(actionStateRoute);\n      var preloadedRoute = stackState.preloadedRoutes.find(route => route.name === actionStateRoute.name && deepEqual((0, navigationParams_1.removeInternalExpoRouterParams)(route.params), (0, navigationParams_1.removeInternalExpoRouterParams)(payload.params)));\n      var activeRoute = stackState.routes[stackState.index];\n      if (activeRoute.name === preloadedRoute?.name && deepEqual((0, navigationParams_1.removeInternalExpoRouterParams)(activeRoute.params ?? {}), (0, navigationParams_1.removeInternalExpoRouterParams)(payload.params ?? {}))) {\n        return undefined;\n      }\n      return preloadedRoute;\n    }\n    return undefined;\n  }\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (a == null || b == null) {\n      return false;\n    }\n    if (typeof a !== 'object' || typeof b !== 'object') {\n      return false;\n    }\n    var keys = Object.keys(a);\n    return keys.length === Object.keys(b).length && keys.every(key => deepEqual(a[key], b[key]));\n  }\n});","lineCount":79,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getTabPathFromRootStateByHref"],[7,39,3,37],[7,42,3,40,"getTabPathFromRootStateByHref"],[7,71,3,69],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"getPreloadedRouteFromRootStateByHref"],[8,46,4,44],[8,49,4,47,"getPreloadedRouteFromRootStateByHref"],[8,85,4,83],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"deepEqual"],[9,19,5,17],[9,22,5,20,"deepEqual"],[9,31,5,29],[10,2,6,0],[10,6,6,6,"router_store_1"],[10,20,6,20],[10,23,6,23,"require"],[10,30,6,30],[10,31,6,30,"_dependencyMap"],[10,45,6,30],[10,83,6,64],[10,84,6,65],[11,2,7,0],[11,6,7,6,"routing_1"],[11,15,7,15],[11,18,7,18,"require"],[11,25,7,25],[11,26,7,25,"_dependencyMap"],[11,40,7,25],[11,73,7,54],[11,74,7,55],[12,2,8,0],[12,6,8,6,"href_1"],[12,12,8,12],[12,15,8,15,"require"],[12,22,8,22],[12,23,8,22,"_dependencyMap"],[12,37,8,22],[12,51,8,32],[12,52,8,33],[13,2,9,0],[13,6,9,6,"navigationParams_1"],[13,24,9,24],[13,27,9,27,"require"],[13,34,9,34],[13,35,9,34,"_dependencyMap"],[13,49,9,34],[13,78,9,59],[13,79,9,60],[14,2,10,0],[14,11,10,9,"getTabPathFromRootStateByHref"],[14,40,10,38,"getTabPathFromRootStateByHref"],[14,41,10,39,"href"],[14,45,10,43],[14,47,10,45,"rootState"],[14,56,10,54],[14,58,10,56],[15,4,11,4],[15,8,11,10,"hrefState"],[15,17,11,19],[15,20,11,22,"router_store_1"],[15,34,11,36],[15,35,11,37,"store"],[15,40,11,42],[15,41,11,43,"getStateForHref"],[15,56,11,58],[15,57,11,59],[15,58,11,60],[15,59,11,61],[15,61,11,63,"href_1"],[15,67,11,69],[15,68,11,70,"resolveHref"],[15,79,11,81],[15,81,11,83,"href"],[15,85,11,87],[15,86,11,88],[15,87,11,89],[16,4,12,4],[16,8,12,10,"state"],[16,13,12,15],[16,16,12,18,"rootState"],[16,25,12,27],[17,4,13,4],[17,8,13,8],[17,9,13,9,"hrefState"],[17,18,13,18],[17,22,13,22],[17,23,13,23,"state"],[17,28,13,28],[17,30,13,30],[18,6,14,8],[18,13,14,15],[18,15,14,17],[19,4,15,4],[20,4,17,4],[20,8,17,4,"_ref"],[20,12,17,4],[20,15,17,33],[20,16,17,34],[20,17,17,35],[20,19,17,37,"routing_1"],[20,28,17,46],[20,29,17,47,"findDivergentState"],[20,47,17,65],[20,49,17,67,"hrefState"],[20,58,17,76],[20,60,17,78,"state"],[20,65,17,83],[20,67,17,85],[20,71,17,89],[20,72,17,90],[21,6,17,12,"navigationRoutes"],[21,22,17,28],[21,25,17,28,"_ref"],[21,29,17,28],[21,30,17,12,"navigationRoutes"],[21,46,17,28],[22,4,18,4],[22,8,18,8],[22,9,18,9,"navigationRoutes"],[22,25,18,25],[22,26,18,26,"length"],[22,32,18,32],[22,34,18,34],[23,6,19,8],[23,13,19,15],[23,15,19,17],[24,4,20,4],[25,4,21,4],[25,8,21,10,"tabPath"],[25,15,21,17],[25,18,21,20],[25,20,21,22],[26,4,22,4,"navigationRoutes"],[26,20,22,20],[26,21,22,21,"forEach"],[26,28,22,28],[26,29,22,29],[26,30,22,30,"route"],[26,35,22,35],[26,37,22,37,"i"],[26,38,22,38],[26,40,22,40,"arr"],[26,43,22,43],[26,48,22,48],[27,6,23,8],[27,10,23,12,"route"],[27,15,23,17],[27,16,23,18,"state"],[27,21,23,23],[27,23,23,25,"type"],[27,27,23,29],[27,32,23,34],[27,37,23,39],[27,39,23,41],[28,8,24,12],[28,12,24,18,"tabState"],[28,20,24,26],[28,23,24,29,"route"],[28,28,24,34],[28,29,24,35,"state"],[28,34,24,40],[29,8,25,12],[29,12,25,18,"oldTabKey"],[29,21,25,27],[29,24,25,30,"tabState"],[29,32,25,38],[29,33,25,39,"routes"],[29,39,25,45],[29,40,25,46,"tabState"],[29,48,25,54],[29,49,25,55,"index"],[29,54,25,60],[29,55,25,61],[29,56,25,62,"key"],[29,59,25,65],[30,8,27,12],[30,12,27,16],[30,13,27,17,"arr"],[30,16,27,20],[30,17,27,21,"i"],[30,18,27,22],[30,21,27,25],[30,22,27,26],[30,23,27,27],[30,25,27,29],[31,10,28,16],[31,16,28,22],[31,20,28,26,"Error"],[31,25,28,31],[31,26,28,32],[31,58,28,64,"route"],[31,63,28,69],[31,64,28,70,"key"],[31,67,28,73],[31,114,28,120],[31,115,28,121],[32,8,29,12],[33,8,30,12],[33,12,30,18,"newTabKey"],[33,21,30,27],[33,24,30,30,"arr"],[33,27,30,33],[33,28,30,34,"i"],[33,29,30,35],[33,32,30,38],[33,33,30,39],[33,34,30,40],[33,35,30,41,"key"],[33,38,30,44],[34,8,31,12,"tabPath"],[34,15,31,19],[34,16,31,20,"push"],[34,20,31,24],[34,21,31,25],[35,10,31,27,"oldTabKey"],[35,19,31,36],[36,10,31,38,"newTabKey"],[37,8,31,48],[37,9,31,49],[37,10,31,50],[38,6,32,8],[39,4,33,4],[39,5,33,5],[39,6,33,6],[40,4,34,4],[40,11,34,11,"tabPath"],[40,18,34,18],[41,2,35,0],[42,2,36,0],[42,11,36,9,"getPreloadedRouteFromRootStateByHref"],[42,47,36,45,"getPreloadedRouteFromRootStateByHref"],[42,48,36,46,"href"],[42,52,36,50],[42,54,36,52,"rootState"],[42,63,36,61],[42,65,36,63],[43,4,37,4],[43,8,37,10,"hrefState"],[43,17,37,19],[43,20,37,22,"router_store_1"],[43,34,37,36],[43,35,37,37,"store"],[43,40,37,42],[43,41,37,43,"getStateForHref"],[43,56,37,58],[43,57,37,59],[43,58,37,60],[43,59,37,61],[43,61,37,63,"href_1"],[43,67,37,69],[43,68,37,70,"resolveHref"],[43,79,37,81],[43,81,37,83,"href"],[43,85,37,87],[43,86,37,88],[43,87,37,89],[44,4,38,4],[44,8,38,10,"state"],[44,13,38,15],[44,16,38,18,"rootState"],[44,25,38,27],[45,4,39,4],[45,8,39,8],[45,9,39,9,"hrefState"],[45,18,39,18],[45,22,39,22],[45,23,39,23,"state"],[45,28,39,28],[45,30,39,30],[46,6,40,8],[46,13,40,15,"undefined"],[46,22,40,24],[47,4,41,4],[48,4,43,4],[48,8,43,4,"_ref2"],[48,13,43,4],[48,16,43,50],[48,17,43,51],[48,18,43,52],[48,20,43,54,"routing_1"],[48,29,43,63],[48,30,43,64,"findDivergentState"],[48,48,43,82],[48,50,43,84,"hrefState"],[48,59,43,93],[48,61,43,95,"state"],[48,66,43,100],[48,68,43,102],[48,72,43,106],[48,73,43,107],[49,6,43,12,"navigationState"],[49,21,43,27],[49,24,43,27,"_ref2"],[49,29,43,27],[49,30,43,12,"navigationState"],[49,45,43,27],[50,6,43,29,"actionStateRoute"],[50,22,43,45],[50,25,43,45,"_ref2"],[50,30,43,45],[50,31,43,29,"actionStateRoute"],[50,47,43,45],[51,4,44,4],[51,8,44,8],[51,9,44,9,"navigationState"],[51,24,44,24],[51,28,44,28],[51,29,44,29,"actionStateRoute"],[51,45,44,45],[51,47,44,47],[52,6,45,8],[52,13,45,15,"undefined"],[52,22,45,24],[53,4,46,4],[54,4,47,4],[54,8,47,8,"navigationState"],[54,23,47,23],[54,24,47,24,"type"],[54,28,47,28],[54,33,47,33],[54,40,47,40],[54,42,47,42],[55,6,48,8],[55,10,48,14,"stackState"],[55,20,48,24],[55,23,48,27,"navigationState"],[55,38,48,42],[56,6,49,8],[56,10,49,14,"payload"],[56,17,49,21],[56,20,49,24],[56,21,49,25],[56,22,49,26],[56,24,49,28,"routing_1"],[56,33,49,37],[56,34,49,38,"getPayloadFromStateRoute"],[56,58,49,62],[56,60,49,64,"actionStateRoute"],[56,76,49,80],[56,77,49,81],[57,6,50,8],[57,10,50,14,"preloadedRoute"],[57,24,50,28],[57,27,50,31,"stackState"],[57,37,50,41],[57,38,50,42,"preloadedRoutes"],[57,53,50,57],[57,54,50,58,"find"],[57,58,50,62],[57,59,50,64,"route"],[57,64,50,69],[57,68,50,74,"route"],[57,73,50,79],[57,74,50,80,"name"],[57,78,50,84],[57,83,50,89,"actionStateRoute"],[57,99,50,105],[57,100,50,106,"name"],[57,104,50,110],[57,108,51,12,"deepEqual"],[57,117,51,21],[57,118,51,22],[57,119,51,23],[57,120,51,24],[57,122,51,26,"navigationParams_1"],[57,140,51,44],[57,141,51,45,"removeInternalExpoRouterParams"],[57,171,51,75],[57,173,51,77,"route"],[57,178,51,82],[57,179,51,83,"params"],[57,185,51,89],[57,186,51,90],[57,188,51,92],[57,189,51,93],[57,190,51,94],[57,192,51,96,"navigationParams_1"],[57,210,51,114],[57,211,51,115,"removeInternalExpoRouterParams"],[57,241,51,145],[57,243,51,147,"payload"],[57,250,51,154],[57,251,51,155,"params"],[57,257,51,161],[57,258,51,162],[57,259,51,163],[57,260,51,164],[58,6,52,8],[58,10,52,14,"activeRoute"],[58,21,52,25],[58,24,52,28,"stackState"],[58,34,52,38],[58,35,52,39,"routes"],[58,41,52,45],[58,42,52,46,"stackState"],[58,52,52,56],[58,53,52,57,"index"],[58,58,52,62],[58,59,52,63],[59,6,55,8],[59,10,55,12,"activeRoute"],[59,21,55,23],[59,22,55,24,"name"],[59,26,55,28],[59,31,55,33,"preloadedRoute"],[59,45,55,47],[59,47,55,49,"name"],[59,51,55,53],[59,55,56,12,"deepEqual"],[59,64,56,21],[59,65,58,12],[59,66,58,13],[59,67,58,14],[59,69,58,16,"navigationParams_1"],[59,87,58,34],[59,88,58,35,"removeInternalExpoRouterParams"],[59,118,58,65],[59,120,58,67,"activeRoute"],[59,131,58,78],[59,132,58,79,"params"],[59,138,58,85],[59,142,58,89],[59,143,58,90],[59,144,58,91],[59,145,58,92],[59,147,58,94],[59,148,58,95],[59,149,58,96],[59,151,58,98,"navigationParams_1"],[59,169,58,116],[59,170,58,117,"removeInternalExpoRouterParams"],[59,200,58,147],[59,202,58,149,"payload"],[59,209,58,156],[59,210,58,157,"params"],[59,216,58,163],[59,220,58,167],[59,221,58,168],[59,222,58,169],[59,223,58,170],[59,224,58,171],[59,226,58,173],[60,8,59,12],[60,15,59,19,"undefined"],[60,24,59,28],[61,6,60,8],[62,6,61,8],[62,13,61,15,"preloadedRoute"],[62,27,61,29],[63,4,62,4],[64,4,63,4],[64,11,63,11,"undefined"],[64,20,63,20],[65,2,64,0],[66,2,65,0],[66,11,65,9,"deepEqual"],[66,20,65,18,"deepEqual"],[66,21,65,19,"a"],[66,22,65,20],[66,24,65,22,"b"],[66,25,65,23],[66,27,65,25],[67,4,66,4],[67,8,66,8,"a"],[67,9,66,9],[67,14,66,14,"b"],[67,15,66,15],[67,17,66,17],[68,6,67,8],[68,13,67,15],[68,17,67,19],[69,4,68,4],[70,4,69,4],[70,8,69,8,"a"],[70,9,69,9],[70,13,69,13],[70,17,69,17],[70,21,69,21,"b"],[70,22,69,22],[70,26,69,26],[70,30,69,30],[70,32,69,32],[71,6,70,8],[71,13,70,15],[71,18,70,20],[72,4,71,4],[73,4,72,4],[73,8,72,8],[73,15,72,15,"a"],[73,16,72,16],[73,21,72,21],[73,29,72,29],[73,33,72,33],[73,40,72,40,"b"],[73,41,72,41],[73,46,72,46],[73,54,72,54],[73,56,72,56],[74,6,73,8],[74,13,73,15],[74,18,73,20],[75,4,74,4],[76,4,75,4],[76,8,75,10,"keys"],[76,12,75,14],[76,15,75,17,"Object"],[76,21,75,23],[76,22,75,24,"keys"],[76,26,75,28],[76,27,75,29,"a"],[76,28,75,30],[76,29,75,31],[77,4,76,4],[77,11,76,11,"keys"],[77,15,76,15],[77,16,76,16,"length"],[77,22,76,22],[77,27,76,27,"Object"],[77,33,76,33],[77,34,76,34,"keys"],[77,38,76,38],[77,39,76,39,"b"],[77,40,76,40],[77,41,76,41],[77,42,76,42,"length"],[77,48,76,48],[77,52,76,52,"keys"],[77,56,76,56],[77,57,76,57,"every"],[77,62,76,62],[77,63,76,64,"key"],[77,66,76,67],[77,70,76,72,"deepEqual"],[77,79,76,81],[77,80,76,82,"a"],[77,81,76,83],[77,82,76,84,"key"],[77,85,76,87],[77,86,76,88],[77,88,76,90,"b"],[77,89,76,91],[77,90,76,92,"key"],[77,93,76,95],[77,94,76,96],[77,95,76,97],[77,96,76,98],[78,2,77,0],[79,0,77,1],[79,3]],"functionMap":{"names":["<global>","getTabPathFromRootStateByHref","navigationRoutes.forEach$argument_0","getPreloadedRouteFromRootStateByHref","stackState.preloadedRoutes.find$argument_0","deepEqual","keys.every$argument_0"],"mappings":"AAA;ACS;6BCY;KDW;CDE;AGC;+DCc;mKDC;CHa;AKC;+DCW,kCD;CLC"},"hasCjsExports":true},"type":"js/module"}]}