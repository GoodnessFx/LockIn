{"dependencies":[{"name":"./conversions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":20},"end":{"line":1,"column":44}}],"key":"AUDPhSp3SCRpotk+n4dj5MLm8fk=","exportNames":["*"],"imports":1}},{"name":"./route","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":14},"end":{"line":2,"column":32}}],"key":"CgLF7khkD2MDURiduSWr++dKYzw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var conversions = require(_dependencyMap[0], \"./conversions\");\n  var route = require(_dependencyMap[1], \"./route\");\n  var convert = {};\n  var models = Object.keys(conversions);\n  function wrapRaw(fn) {\n    var wrappedFn = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      var arg0 = args[0];\n      if (arg0 === undefined || arg0 === null) {\n        return arg0;\n      }\n      if (arg0.length > 1) {\n        args = arg0;\n      }\n      return fn(args);\n    };\n    if ('conversion' in fn) {\n      wrappedFn.conversion = fn.conversion;\n    }\n    return wrappedFn;\n  }\n  function wrapRounded(fn) {\n    var wrappedFn = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      var arg0 = args[0];\n      if (arg0 === undefined || arg0 === null) {\n        return arg0;\n      }\n      if (arg0.length > 1) {\n        args = arg0;\n      }\n      var result = fn(args);\n      if (typeof result === 'object') {\n        for (var len = result.length, i = 0; i < len; i++) {\n          result[i] = Math.round(result[i]);\n        }\n      }\n      return result;\n    };\n    if ('conversion' in fn) {\n      wrappedFn.conversion = fn.conversion;\n    }\n    return wrappedFn;\n  }\n  models.forEach(fromModel => {\n    convert[fromModel] = {};\n    Object.defineProperty(convert[fromModel], 'channels', {\n      value: conversions[fromModel].channels\n    });\n    Object.defineProperty(convert[fromModel], 'labels', {\n      value: conversions[fromModel].labels\n    });\n    var routes = route(fromModel);\n    var routeModels = Object.keys(routes);\n    routeModels.forEach(toModel => {\n      var fn = routes[toModel];\n      convert[fromModel][toModel] = wrapRounded(fn);\n      convert[fromModel][toModel].raw = wrapRaw(fn);\n    });\n  });\n  module.exports = convert;\n});","lineCount":67,"map":[[2,2,1,0],[2,6,1,6,"conversions"],[2,17,1,17],[2,20,1,20,"require"],[2,27,1,27],[2,28,1,27,"_dependencyMap"],[2,42,1,27],[2,62,1,43],[2,63,1,44],[3,2,2,0],[3,6,2,6,"route"],[3,11,2,11],[3,14,2,14,"require"],[3,21,2,21],[3,22,2,21,"_dependencyMap"],[3,36,2,21],[3,50,2,31],[3,51,2,32],[4,2,4,0],[4,6,4,6,"convert"],[4,13,4,13],[4,16,4,16],[4,17,4,17],[4,18,4,18],[5,2,6,0],[5,6,6,6,"models"],[5,12,6,12],[5,15,6,15,"Object"],[5,21,6,21],[5,22,6,22,"keys"],[5,26,6,26],[5,27,6,27,"conversions"],[5,38,6,38],[5,39,6,39],[6,2,8,0],[6,11,8,9,"wrapRaw"],[6,18,8,16,"wrapRaw"],[6,19,8,17,"fn"],[6,21,8,19],[6,23,8,21],[7,4,9,1],[7,8,9,7,"wrappedFn"],[7,17,9,16],[7,20,9,19],[7,29,9,19,"wrappedFn"],[7,30,9,19],[7,32,9,38],[8,6,9,38],[8,15,9,38,"_len"],[8,19,9,38],[8,22,9,38,"arguments"],[8,31,9,38],[8,32,9,38,"length"],[8,38,9,38],[8,40,9,32,"args"],[8,44,9,36],[8,51,9,36,"Array"],[8,56,9,36],[8,57,9,36,"_len"],[8,61,9,36],[8,64,9,36,"_key"],[8,68,9,36],[8,74,9,36,"_key"],[8,78,9,36],[8,81,9,36,"_len"],[8,85,9,36],[8,87,9,36,"_key"],[8,91,9,36],[9,8,9,32,"args"],[9,12,9,36],[9,13,9,36,"_key"],[9,17,9,36],[9,21,9,36,"arguments"],[9,30,9,36],[9,31,9,36,"_key"],[9,35,9,36],[10,6,9,36],[11,6,10,2],[11,10,10,8,"arg0"],[11,14,10,12],[11,17,10,15,"args"],[11,21,10,19],[11,22,10,20],[11,23,10,21],[11,24,10,22],[12,6,11,2],[12,10,11,6,"arg0"],[12,14,11,10],[12,19,11,15,"undefined"],[12,28,11,24],[12,32,11,28,"arg0"],[12,36,11,32],[12,41,11,37],[12,45,11,41],[12,47,11,43],[13,8,12,3],[13,15,12,10,"arg0"],[13,19,12,14],[14,6,13,2],[15,6,15,2],[15,10,15,6,"arg0"],[15,14,15,10],[15,15,15,11,"length"],[15,21,15,17],[15,24,15,20],[15,25,15,21],[15,27,15,23],[16,8,16,3,"args"],[16,12,16,7],[16,15,16,10,"arg0"],[16,19,16,14],[17,6,17,2],[18,6,19,2],[18,13,19,9,"fn"],[18,15,19,11],[18,16,19,12,"args"],[18,20,19,16],[18,21,19,17],[19,4,20,1],[19,5,20,2],[20,4,23,1],[20,8,23,5],[20,20,23,17],[20,24,23,21,"fn"],[20,26,23,23],[20,28,23,25],[21,6,24,2,"wrappedFn"],[21,15,24,11],[21,16,24,12,"conversion"],[21,26,24,22],[21,29,24,25,"fn"],[21,31,24,27],[21,32,24,28,"conversion"],[21,42,24,38],[22,4,25,1],[23,4,27,1],[23,11,27,8,"wrappedFn"],[23,20,27,17],[24,2,28,0],[25,2,30,0],[25,11,30,9,"wrapRounded"],[25,22,30,20,"wrapRounded"],[25,23,30,21,"fn"],[25,25,30,23],[25,27,30,25],[26,4,31,1],[26,8,31,7,"wrappedFn"],[26,17,31,16],[26,20,31,19],[26,29,31,19,"wrappedFn"],[26,30,31,19],[26,32,31,38],[27,6,31,38],[27,15,31,38,"_len2"],[27,20,31,38],[27,23,31,38,"arguments"],[27,32,31,38],[27,33,31,38,"length"],[27,39,31,38],[27,41,31,32,"args"],[27,45,31,36],[27,52,31,36,"Array"],[27,57,31,36],[27,58,31,36,"_len2"],[27,63,31,36],[27,66,31,36,"_key2"],[27,71,31,36],[27,77,31,36,"_key2"],[27,82,31,36],[27,85,31,36,"_len2"],[27,90,31,36],[27,92,31,36,"_key2"],[27,97,31,36],[28,8,31,32,"args"],[28,12,31,36],[28,13,31,36,"_key2"],[28,18,31,36],[28,22,31,36,"arguments"],[28,31,31,36],[28,32,31,36,"_key2"],[28,37,31,36],[29,6,31,36],[30,6,32,2],[30,10,32,8,"arg0"],[30,14,32,12],[30,17,32,15,"args"],[30,21,32,19],[30,22,32,20],[30,23,32,21],[30,24,32,22],[31,6,34,2],[31,10,34,6,"arg0"],[31,14,34,10],[31,19,34,15,"undefined"],[31,28,34,24],[31,32,34,28,"arg0"],[31,36,34,32],[31,41,34,37],[31,45,34,41],[31,47,34,43],[32,8,35,3],[32,15,35,10,"arg0"],[32,19,35,14],[33,6,36,2],[34,6,38,2],[34,10,38,6,"arg0"],[34,14,38,10],[34,15,38,11,"length"],[34,21,38,17],[34,24,38,20],[34,25,38,21],[34,27,38,23],[35,8,39,3,"args"],[35,12,39,7],[35,15,39,10,"arg0"],[35,19,39,14],[36,6,40,2],[37,6,42,2],[37,10,42,8,"result"],[37,16,42,14],[37,19,42,17,"fn"],[37,21,42,19],[37,22,42,20,"args"],[37,26,42,24],[37,27,42,25],[38,6,47,2],[38,10,47,6],[38,17,47,13,"result"],[38,23,47,19],[38,28,47,24],[38,36,47,32],[38,38,47,34],[39,8,48,3],[39,13,48,8],[39,17,48,12,"len"],[39,20,48,15],[39,23,48,18,"result"],[39,29,48,24],[39,30,48,25,"length"],[39,36,48,31],[39,38,48,33,"i"],[39,39,48,34],[39,42,48,37],[39,43,48,38],[39,45,48,40,"i"],[39,46,48,41],[39,49,48,44,"len"],[39,52,48,47],[39,54,48,49,"i"],[39,55,48,50],[39,57,48,52],[39,59,48,54],[40,10,49,4,"result"],[40,16,49,10],[40,17,49,11,"i"],[40,18,49,12],[40,19,49,13],[40,22,49,16,"Math"],[40,26,49,20],[40,27,49,21,"round"],[40,32,49,26],[40,33,49,27,"result"],[40,39,49,33],[40,40,49,34,"i"],[40,41,49,35],[40,42,49,36],[40,43,49,37],[41,8,50,3],[42,6,51,2],[43,6,53,2],[43,13,53,9,"result"],[43,19,53,15],[44,4,54,1],[44,5,54,2],[45,4,57,1],[45,8,57,5],[45,20,57,17],[45,24,57,21,"fn"],[45,26,57,23],[45,28,57,25],[46,6,58,2,"wrappedFn"],[46,15,58,11],[46,16,58,12,"conversion"],[46,26,58,22],[46,29,58,25,"fn"],[46,31,58,27],[46,32,58,28,"conversion"],[46,42,58,38],[47,4,59,1],[48,4,61,1],[48,11,61,8,"wrappedFn"],[48,20,61,17],[49,2,62,0],[50,2,64,0,"models"],[50,8,64,6],[50,9,64,7,"forEach"],[50,16,64,14],[50,17,64,15,"fromModel"],[50,26,64,24],[50,30,64,28],[51,4,65,1,"convert"],[51,11,65,8],[51,12,65,9,"fromModel"],[51,21,65,18],[51,22,65,19],[51,25,65,22],[51,26,65,23],[51,27,65,24],[52,4,67,1,"Object"],[52,10,67,7],[52,11,67,8,"defineProperty"],[52,25,67,22],[52,26,67,23,"convert"],[52,33,67,30],[52,34,67,31,"fromModel"],[52,43,67,40],[52,44,67,41],[52,46,67,43],[52,56,67,53],[52,58,67,55],[53,6,67,56,"value"],[53,11,67,61],[53,13,67,63,"conversions"],[53,24,67,74],[53,25,67,75,"fromModel"],[53,34,67,84],[53,35,67,85],[53,36,67,86,"channels"],[54,4,67,94],[54,5,67,95],[54,6,67,96],[55,4,68,1,"Object"],[55,10,68,7],[55,11,68,8,"defineProperty"],[55,25,68,22],[55,26,68,23,"convert"],[55,33,68,30],[55,34,68,31,"fromModel"],[55,43,68,40],[55,44,68,41],[55,46,68,43],[55,54,68,51],[55,56,68,53],[56,6,68,54,"value"],[56,11,68,59],[56,13,68,61,"conversions"],[56,24,68,72],[56,25,68,73,"fromModel"],[56,34,68,82],[56,35,68,83],[56,36,68,84,"labels"],[57,4,68,90],[57,5,68,91],[57,6,68,92],[58,4,70,1],[58,8,70,7,"routes"],[58,14,70,13],[58,17,70,16,"route"],[58,22,70,21],[58,23,70,22,"fromModel"],[58,32,70,31],[58,33,70,32],[59,4,71,1],[59,8,71,7,"routeModels"],[59,19,71,18],[59,22,71,21,"Object"],[59,28,71,27],[59,29,71,28,"keys"],[59,33,71,32],[59,34,71,33,"routes"],[59,40,71,39],[59,41,71,40],[60,4,73,1,"routeModels"],[60,15,73,12],[60,16,73,13,"forEach"],[60,23,73,20],[60,24,73,21,"toModel"],[60,31,73,28],[60,35,73,32],[61,6,74,2],[61,10,74,8,"fn"],[61,12,74,10],[61,15,74,13,"routes"],[61,21,74,19],[61,22,74,20,"toModel"],[61,29,74,27],[61,30,74,28],[62,6,76,2,"convert"],[62,13,76,9],[62,14,76,10,"fromModel"],[62,23,76,19],[62,24,76,20],[62,25,76,21,"toModel"],[62,32,76,28],[62,33,76,29],[62,36,76,32,"wrapRounded"],[62,47,76,43],[62,48,76,44,"fn"],[62,50,76,46],[62,51,76,47],[63,6,77,2,"convert"],[63,13,77,9],[63,14,77,10,"fromModel"],[63,23,77,19],[63,24,77,20],[63,25,77,21,"toModel"],[63,32,77,28],[63,33,77,29],[63,34,77,30,"raw"],[63,37,77,33],[63,40,77,36,"wrapRaw"],[63,47,77,43],[63,48,77,44,"fn"],[63,50,77,46],[63,51,77,47],[64,4,78,1],[64,5,78,2],[64,6,78,3],[65,2,79,0],[65,3,79,1],[65,4,79,2],[66,2,81,0,"module"],[66,8,81,6],[66,9,81,7,"exports"],[66,16,81,14],[66,19,81,17,"convert"],[66,26,81,24],[67,0,81,25],[67,3]],"functionMap":{"names":["<global>","wrapRaw","wrappedFn","wrapRounded","models.forEach$argument_0","routeModels.forEach$argument_0"],"mappings":"AAA;ACO;mBCC;EDW;CDQ;AGE;mBDC;ECuB;CHQ;eIE;qBCS;EDK;CJC"},"hasCjsExports":true},"type":"js/module"}]}