{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":43}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"BaseRouter\", {\n    enumerable: true,\n    get: function () {\n      return BaseRouter;\n    }\n  });\n  var _nanoidNonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  var BaseRouter = {\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'SET_PARAMS':\n        case 'REPLACE_PARAMS':\n          {\n            var index = action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            return {\n              ...state,\n              routes: state.routes.map((r, i) => i === index ? {\n                ...r,\n                params: action.type === 'REPLACE_PARAMS' ? action.payload.params : {\n                  ...r.params,\n                  ...action.payload.params\n                }\n              } : r)\n            };\n          }\n        case 'RESET':\n          {\n            var nextState = action.payload;\n            if (nextState.routes.length === 0 || nextState.routes.some(route => !state.routeNames.includes(route.name))) {\n              return null;\n            }\n            if (nextState.stale === false) {\n              if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(name => !state.routeNames.includes(name))) {\n                return null;\n              }\n              return {\n                ...nextState,\n                routes: nextState.routes.map(route => route.key ? route : {\n                  ...route,\n                  key: `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`\n                })\n              };\n            }\n            return nextState;\n          }\n        default:\n          return null;\n      }\n    },\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\n    }\n  };\n});","lineCount":63,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,8,0,"Object"],[7,8,8,0],[7,9,8,0,"defineProperty"],[7,23,8,0],[7,24,8,0,"exports"],[7,31,8,0],[8,4,8,0,"enumerable"],[8,14,8,0],[9,4,8,0,"get"],[9,7,8,0],[9,18,8,0,"get"],[9,19,8,0],[10,6,8,0],[10,13,8,0,"BaseRouter"],[10,23,8,0],[11,4,8,0],[12,2,8,0],[13,2,3,0],[13,6,3,0,"_nanoidNonSecure"],[13,22,3,0],[13,25,3,0,"require"],[13,32,3,0],[13,33,3,0,"_dependencyMap"],[13,47,3,0],[14,2,8,7],[14,6,8,13,"BaseRouter"],[14,16,8,23],[14,19,8,26],[15,4,9,2,"getStateForAction"],[15,21,9,19,"getStateForAction"],[15,22,9,20,"state"],[15,27,9,25],[15,29,9,27,"action"],[15,35,9,33],[15,37,9,35],[16,6,10,4],[16,14,10,12,"action"],[16,20,10,18],[16,21,10,19,"type"],[16,25,10,23],[17,8,11,6],[17,13,11,11],[17,25,11,23],[18,8,12,6],[18,13,12,11],[18,29,12,27],[19,10,13,8],[20,12,14,10],[20,16,14,16,"index"],[20,21,14,21],[20,24,14,24,"action"],[20,30,14,30],[20,31,14,31,"source"],[20,37,14,37],[20,40,14,40,"state"],[20,45,14,45],[20,46,14,46,"routes"],[20,52,14,52],[20,53,14,53,"findIndex"],[20,62,14,62],[20,63,14,63,"r"],[20,64,14,64],[20,68,14,68,"r"],[20,69,14,69],[20,70,14,70,"key"],[20,73,14,73],[20,78,14,78,"action"],[20,84,14,84],[20,85,14,85,"source"],[20,91,14,91],[20,92,14,92],[20,95,14,95,"state"],[20,100,14,100],[20,101,14,101,"index"],[20,106,14,106],[21,12,15,10],[21,16,15,14,"index"],[21,21,15,19],[21,26,15,24],[21,27,15,25],[21,28,15,26],[21,30,15,28],[22,14,16,12],[22,21,16,19],[22,25,16,23],[23,12,17,10],[24,12,18,10],[24,19,18,17],[25,14,19,12],[25,17,19,15,"state"],[25,22,19,20],[26,14,20,12,"routes"],[26,20,20,18],[26,22,20,20,"state"],[26,27,20,25],[26,28,20,26,"routes"],[26,34,20,32],[26,35,20,33,"map"],[26,38,20,36],[26,39,20,37],[26,40,20,38,"r"],[26,41,20,39],[26,43,20,41,"i"],[26,44,20,42],[26,49,20,47,"i"],[26,50,20,48],[26,55,20,53,"index"],[26,60,20,58],[26,63,20,61],[27,16,21,14],[27,19,21,17,"r"],[27,20,21,18],[28,16,22,14,"params"],[28,22,22,20],[28,24,22,22,"action"],[28,30,22,28],[28,31,22,29,"type"],[28,35,22,33],[28,40,22,38],[28,56,22,54],[28,59,22,57,"action"],[28,65,22,63],[28,66,22,64,"payload"],[28,73,22,71],[28,74,22,72,"params"],[28,80,22,78],[28,83,22,81],[29,18,23,16],[29,21,23,19,"r"],[29,22,23,20],[29,23,23,21,"params"],[29,29,23,27],[30,18,24,16],[30,21,24,19,"action"],[30,27,24,25],[30,28,24,26,"payload"],[30,35,24,33],[30,36,24,34,"params"],[31,16,25,14],[32,14,26,12],[32,15,26,13],[32,18,26,16,"r"],[32,19,26,17],[33,12,27,10],[33,13,27,11],[34,10,28,8],[35,8,29,6],[35,13,29,11],[35,20,29,18],[36,10,30,8],[37,12,31,10],[37,16,31,16,"nextState"],[37,25,31,25],[37,28,31,28,"action"],[37,34,31,34],[37,35,31,35,"payload"],[37,42,31,42],[38,12,32,10],[38,16,32,14,"nextState"],[38,25,32,23],[38,26,32,24,"routes"],[38,32,32,30],[38,33,32,31,"length"],[38,39,32,37],[38,44,32,42],[38,45,32,43],[38,49,32,47,"nextState"],[38,58,32,56],[38,59,32,57,"routes"],[38,65,32,63],[38,66,32,64,"some"],[38,70,32,68],[38,71,32,69,"route"],[38,76,32,74],[38,80,32,78],[38,81,32,79,"state"],[38,86,32,84],[38,87,32,85,"routeNames"],[38,97,32,95],[38,98,32,96,"includes"],[38,106,32,104],[38,107,32,105,"route"],[38,112,32,110],[38,113,32,111,"name"],[38,117,32,115],[38,118,32,116],[38,119,32,117],[38,121,32,119],[39,14,33,12],[39,21,33,19],[39,25,33,23],[40,12,34,10],[41,12,35,10],[41,16,35,14,"nextState"],[41,25,35,23],[41,26,35,24,"stale"],[41,31,35,29],[41,36,35,34],[41,41,35,39],[41,43,35,41],[42,14,36,12],[42,18,36,16,"state"],[42,23,36,21],[42,24,36,22,"routeNames"],[42,34,36,32],[42,35,36,33,"length"],[42,41,36,39],[42,46,36,44,"nextState"],[42,55,36,53],[42,56,36,54,"routeNames"],[42,66,36,64],[42,67,36,65,"length"],[42,73,36,71],[42,77,36,75,"nextState"],[42,86,36,84],[42,87,36,85,"routeNames"],[42,97,36,95],[42,98,36,96,"some"],[42,102,36,100],[42,103,36,101,"name"],[42,107,36,105],[42,111,36,109],[42,112,36,110,"state"],[42,117,36,115],[42,118,36,116,"routeNames"],[42,128,36,126],[42,129,36,127,"includes"],[42,137,36,135],[42,138,36,136,"name"],[42,142,36,140],[42,143,36,141],[42,144,36,142],[42,146,36,144],[43,16,37,14],[43,23,37,21],[43,27,37,25],[44,14,38,12],[45,14,39,12],[45,21,39,19],[46,16,40,14],[46,19,40,17,"nextState"],[46,28,40,26],[47,16,41,14,"routes"],[47,22,41,20],[47,24,41,22,"nextState"],[47,33,41,31],[47,34,41,32,"routes"],[47,40,41,38],[47,41,41,39,"map"],[47,44,41,42],[47,45,41,43,"route"],[47,50,41,48],[47,54,41,52,"route"],[47,59,41,57],[47,60,41,58,"key"],[47,63,41,61],[47,66,41,64,"route"],[47,71,41,69],[47,74,41,72],[48,18,42,16],[48,21,42,19,"route"],[48,26,42,24],[49,18,43,16,"key"],[49,21,43,19],[49,23,43,21],[49,26,43,24,"route"],[49,31,43,29],[49,32,43,30,"name"],[49,36,43,34],[49,40,43,38],[49,44,43,38,"nanoid"],[49,60,43,44],[49,61,43,44,"nanoid"],[49,67,43,44],[49,69,43,45],[49,70,43,46],[50,16,44,14],[50,17,44,15],[51,14,45,12],[51,15,45,13],[52,12,46,10],[53,12,47,10],[53,19,47,17,"nextState"],[53,28,47,26],[54,10,48,8],[55,8,49,6],[56,10,50,8],[56,17,50,15],[56,21,50,19],[57,6,51,4],[58,4,52,2],[58,5,52,3],[59,4,53,2,"shouldActionChangeFocus"],[59,27,53,25,"shouldActionChangeFocus"],[59,28,53,26,"action"],[59,34,53,32],[59,36,53,34],[60,6,54,4],[60,13,54,11,"action"],[60,19,54,17],[60,20,54,18,"type"],[60,24,54,22],[60,29,54,27],[60,39,54,37],[60,43,54,41,"action"],[60,49,54,47],[60,50,54,48,"type"],[60,54,54,52],[60,59,54,57],[60,80,54,78],[61,4,55,2],[62,2,56,0],[62,3,56,1],[63,0,56,2],[63,3]],"functionMap":{"names":["<global>","getStateForAction","state.routes.findIndex$argument_0","state.routes.map$argument_0","nextState.routes.some$argument_0","nextState.routeNames.some$argument_0","nextState.routes.map$argument_0","shouldActionChangeFocus"],"mappings":"AAA;ECQ;+DCK,4BD;qCEM;iBFM;qEGM,+CH;qGII,wCJ;2CKK;eLG;GDQ;EOC;GPE"},"hasCjsExports":false},"type":"js/module"}]}