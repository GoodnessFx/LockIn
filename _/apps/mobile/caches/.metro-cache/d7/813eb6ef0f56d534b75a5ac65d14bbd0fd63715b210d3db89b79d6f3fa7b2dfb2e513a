{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncIterator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"iAa+RToycgxigMSWyQzterF69/I=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0},"end":{"line":2,"column":38}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"streamedQuery\", {\n    enumerable: true,\n    get: function () {\n      return streamedQuery;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersAsyncIterator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncIterator\");\n  var _asyncIterator = _interopDefault(_babelRuntimeHelpersAsyncIterator);\n  var _utilsJs = require(_dependencyMap[2], \"./utils.js\");\n  function streamedQuery(_ref) {\n    var streamFn = _ref.streamFn,\n      _ref$refetchMode = _ref.refetchMode,\n      refetchMode = _ref$refetchMode === void 0 ? \"reset\" : _ref$refetchMode,\n      _ref$reducer = _ref.reducer,\n      reducer = _ref$reducer === void 0 ? (items, chunk) => (0, _utilsJs.addToEnd)(items, chunk) : _ref$reducer,\n      _ref$initialValue = _ref.initialValue,\n      initialValue = _ref$initialValue === void 0 ? [] : _ref$initialValue;\n    return /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator.default)(function* (context) {\n        var query = context.client.getQueryCache().find({\n          queryKey: context.queryKey,\n          exact: true\n        });\n        var isRefetch = !!query && query.state.data !== void 0;\n        if (isRefetch && refetchMode === \"reset\") {\n          query.setState({\n            status: \"pending\",\n            data: void 0,\n            error: null,\n            fetchStatus: \"fetching\"\n          });\n        }\n        var result = initialValue;\n        var stream = yield streamFn(context);\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          var _loop = function* () {\n            var chunk = _step.value;\n            {\n              if (context.signal.aborted) {\n                return 1; // break\n              }\n              if (!isRefetch || refetchMode !== \"replace\") {\n                context.client.setQueryData(context.queryKey, prev => reducer(prev === void 0 ? initialValue : prev, chunk));\n              }\n              result = reducer(result, chunk);\n            }\n          };\n          for (var _iterator = (0, _asyncIterator.default)(stream), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            if (yield* _loop()) break;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              yield _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        if (isRefetch && refetchMode === \"replace\" && !context.signal.aborted) {\n          context.client.setQueryData(context.queryKey, result);\n        }\n        return context.client.getQueryData(context.queryKey);\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n});","lineCount":91,"map":[[12,2,40,0,"Object"],[12,8,40,0],[12,9,40,0,"defineProperty"],[12,23,40,0],[12,24,40,0,"exports"],[12,31,40,0],[13,4,40,0,"enumerable"],[13,14,40,0],[14,4,40,0,"get"],[14,7,40,0],[14,18,40,0,"get"],[14,19,40,0],[15,6,40,0],[15,13,41,2,"streamedQuery"],[15,26,41,15],[16,4,41,15],[17,2,41,15],[18,2,42,2],[18,6,42,2,"_babelRuntimeHelpersAsyncToGenerator"],[18,42,42,2],[18,45,42,2,"require"],[18,52,42,2],[18,53,42,2,"_dependencyMap"],[18,67,42,2],[19,2,42,2],[19,6,42,2,"_asyncToGenerator"],[19,23,42,2],[19,26,42,2,"_interopDefault"],[19,41,42,2],[19,42,42,2,"_babelRuntimeHelpersAsyncToGenerator"],[19,78,42,2],[20,2,42,2],[20,6,42,2,"_babelRuntimeHelpersAsyncIterator"],[20,39,42,2],[20,42,42,2,"require"],[20,49,42,2],[20,50,42,2,"_dependencyMap"],[20,64,42,2],[21,2,42,2],[21,6,42,2,"_asyncIterator"],[21,20,42,2],[21,23,42,2,"_interopDefault"],[21,38,42,2],[21,39,42,2,"_babelRuntimeHelpersAsyncIterator"],[21,72,42,2],[22,2,2,0],[22,6,2,0,"_utilsJs"],[22,14,2,0],[22,17,2,0,"require"],[22,24,2,0],[22,25,2,0,"_dependencyMap"],[22,39,2,0],[23,2,3,0],[23,11,3,9,"streamedQuery"],[23,24,3,22,"streamedQuery"],[23,25,3,22,"_ref"],[23,29,3,22],[23,31,8,3],[24,4,8,3],[24,8,4,2,"streamFn"],[24,16,4,10],[24,19,4,10,"_ref"],[24,23,4,10],[24,24,4,2,"streamFn"],[24,32,4,10],[25,6,4,10,"_ref$refetchMode"],[25,22,4,10],[25,25,4,10,"_ref"],[25,29,4,10],[25,30,5,2,"refetchMode"],[25,41,5,13],[26,6,5,2,"refetchMode"],[26,17,5,13],[26,20,5,13,"_ref$refetchMode"],[26,36,5,13],[26,50,5,16],[26,57,5,23],[26,60,5,23,"_ref$refetchMode"],[26,76,5,23],[27,6,5,23,"_ref$reducer"],[27,18,5,23],[27,21,5,23,"_ref"],[27,25,5,23],[27,26,6,2,"reducer"],[27,33,6,9],[28,6,6,2,"reducer"],[28,13,6,9],[28,16,6,9,"_ref$reducer"],[28,28,6,9],[28,42,6,12],[28,43,6,13,"items"],[28,48,6,18],[28,50,6,20,"chunk"],[28,55,6,25],[28,60,6,30],[28,64,6,30,"addToEnd"],[28,72,6,38],[28,73,6,38,"addToEnd"],[28,81,6,38],[28,83,6,39,"items"],[28,88,6,44],[28,90,6,46,"chunk"],[28,95,6,51],[28,96,6,52],[28,99,6,52,"_ref$reducer"],[28,111,6,52],[29,6,6,52,"_ref$initialValue"],[29,23,6,52],[29,26,6,52,"_ref"],[29,30,6,52],[29,31,7,2,"initialValue"],[29,43,7,14],[30,6,7,2,"initialValue"],[30,18,7,14],[30,21,7,14,"_ref$initialValue"],[30,38,7,14],[30,52,7,17],[30,54,7,19],[30,57,7,19,"_ref$initialValue"],[30,74,7,19],[31,4,9,2],[32,6,9,2],[32,10,9,2,"_ref2"],[32,15,9,2],[32,22,9,2,"_asyncToGenerator"],[32,39,9,2],[32,40,9,2,"default"],[32,47,9,2],[32,49,9,9],[32,60,9,16,"context"],[32,67,9,23],[32,69,9,28],[33,8,10,4],[33,12,10,10,"query"],[33,17,10,15],[33,20,10,18,"context"],[33,27,10,25],[33,28,10,26,"client"],[33,34,10,32],[33,35,10,33,"getQueryCache"],[33,48,10,46],[33,49,10,47],[33,50,10,48],[33,51,10,49,"find"],[33,55,10,53],[33,56,10,54],[34,10,10,56,"queryKey"],[34,18,10,64],[34,20,10,66,"context"],[34,27,10,73],[34,28,10,74,"queryKey"],[34,36,10,82],[35,10,10,84,"exact"],[35,15,10,89],[35,17,10,91],[36,8,10,96],[36,9,10,97],[36,10,10,98],[37,8,11,4],[37,12,11,10,"isRefetch"],[37,21,11,19],[37,24,11,22],[37,25,11,23],[37,26,11,24,"query"],[37,31,11,29],[37,35,11,33,"query"],[37,40,11,38],[37,41,11,39,"state"],[37,46,11,44],[37,47,11,45,"data"],[37,51,11,49],[37,56,11,54],[37,61,11,59],[37,62,11,60],[38,8,12,4],[38,12,12,8,"isRefetch"],[38,21,12,17],[38,25,12,21,"refetchMode"],[38,36,12,32],[38,41,12,37],[38,48,12,44],[38,50,12,46],[39,10,13,6,"query"],[39,15,13,11],[39,16,13,12,"setState"],[39,24,13,20],[39,25,13,21],[40,12,14,8,"status"],[40,18,14,14],[40,20,14,16],[40,29,14,25],[41,12,15,8,"data"],[41,16,15,12],[41,18,15,14],[41,23,15,19],[41,24,15,20],[42,12,16,8,"error"],[42,17,16,13],[42,19,16,15],[42,23,16,19],[43,12,17,8,"fetchStatus"],[43,23,17,19],[43,25,17,21],[44,10,18,6],[44,11,18,7],[44,12,18,8],[45,8,19,4],[46,8,20,4],[46,12,20,8,"result"],[46,18,20,14],[46,21,20,17,"initialValue"],[46,33,20,29],[47,8,21,4],[47,12,21,10,"stream"],[47,18,21,16],[47,27,21,25,"streamFn"],[47,35,21,33],[47,36,21,34,"context"],[47,43,21,41],[47,44,21,42],[48,8,21,43],[48,12,21,43,"_iteratorAbruptCompletion"],[48,37,21,43],[49,8,21,43],[49,12,21,43,"_didIteratorError"],[49,29,21,43],[50,8,21,43],[50,12,21,43,"_iteratorError"],[50,26,21,43],[51,8,21,43],[52,10,21,43],[52,14,21,43,"_loop"],[52,19,21,43],[52,32,21,43,"_loop"],[52,33,21,43],[52,35,22,38],[53,12,22,38],[53,16,22,21,"chunk"],[53,21,22,26],[53,24,22,26,"_step"],[53,29,22,26],[53,30,22,26,"value"],[53,35,22,26],[54,12,22,26],[55,14,23,6],[55,18,23,10,"context"],[55,25,23,17],[55,26,23,18,"signal"],[55,32,23,24],[55,33,23,25,"aborted"],[55,40,23,32],[55,42,23,34],[56,16,23,34],[57,14,25,6],[58,14,26,6],[58,18,26,10],[58,19,26,11,"isRefetch"],[58,28,26,20],[58,32,26,24,"refetchMode"],[58,43,26,35],[58,48,26,40],[58,57,26,49],[58,59,26,51],[59,16,27,8,"context"],[59,23,27,15],[59,24,27,16,"client"],[59,30,27,22],[59,31,27,23,"setQueryData"],[59,43,27,35],[59,44,28,10,"context"],[59,51,28,17],[59,52,28,18,"queryKey"],[59,60,28,26],[59,62,29,11,"prev"],[59,66,29,15],[59,70,29,20,"reducer"],[59,77,29,27],[59,78,29,28,"prev"],[59,82,29,32],[59,87,29,37],[59,92,29,42],[59,93,29,43],[59,96,29,46,"initialValue"],[59,108,29,58],[59,111,29,61,"prev"],[59,115,29,65],[59,117,29,67,"chunk"],[59,122,29,72],[59,123,30,8],[59,124,30,9],[60,14,31,6],[61,14,32,6,"result"],[61,20,32,12],[61,23,32,15,"reducer"],[61,30,32,22],[61,31,32,23,"result"],[61,37,32,29],[61,39,32,31,"chunk"],[61,44,32,36],[61,45,32,37],[62,12,32,38],[63,10,33,4],[63,11,33,5],[64,10,22,4],[64,19,22,4,"_iterator"],[64,28,22,4],[64,35,22,4,"_asyncIterator"],[64,49,22,4],[64,50,22,4,"default"],[64,57,22,4],[64,59,22,30,"stream"],[64,65,22,36],[64,68,22,36,"_step"],[64,73,22,36],[64,75,22,36,"_iteratorAbruptCompletion"],[64,100,22,36],[64,105,22,36,"_step"],[64,110,22,36],[64,119,22,36,"_iterator"],[64,128,22,36],[64,129,22,36,"next"],[64,133,22,36],[64,137,22,36,"done"],[64,141,22,36],[64,143,22,36,"_iteratorAbruptCompletion"],[64,168,22,36],[65,12,22,36],[65,23,22,36,"_loop"],[65,28,22,36],[65,32,24,8],[66,10,24,14],[67,8,33,5],[67,17,33,5,"err"],[67,20,33,5],[68,10,33,5,"_didIteratorError"],[68,27,33,5],[69,10,33,5,"_iteratorError"],[69,24,33,5],[69,27,33,5,"err"],[69,30,33,5],[70,8,33,5],[71,10,33,5],[72,12,33,5],[72,16,33,5,"_iteratorAbruptCompletion"],[72,41,33,5],[72,45,33,5,"_iterator"],[72,54,33,5],[72,55,33,5,"return"],[72,61,33,5],[73,14,33,5],[73,20,33,5,"_iterator"],[73,29,33,5],[73,30,33,5,"return"],[73,36,33,5],[74,12,33,5],[75,10,33,5],[76,12,33,5],[76,16,33,5,"_didIteratorError"],[76,33,33,5],[77,14,33,5],[77,20,33,5,"_iteratorError"],[77,34,33,5],[78,12,33,5],[79,10,33,5],[80,8,33,5],[81,8,34,4],[81,12,34,8,"isRefetch"],[81,21,34,17],[81,25,34,21,"refetchMode"],[81,36,34,32],[81,41,34,37],[81,50,34,46],[81,54,34,50],[81,55,34,51,"context"],[81,62,34,58],[81,63,34,59,"signal"],[81,69,34,65],[81,70,34,66,"aborted"],[81,77,34,73],[81,79,34,75],[82,10,35,6,"context"],[82,17,35,13],[82,18,35,14,"client"],[82,24,35,20],[82,25,35,21,"setQueryData"],[82,37,35,33],[82,38,35,34,"context"],[82,45,35,41],[82,46,35,42,"queryKey"],[82,54,35,50],[82,56,35,52,"result"],[82,62,35,58],[82,63,35,59],[83,8,36,4],[84,8,37,4],[84,15,37,11,"context"],[84,22,37,18],[84,23,37,19,"client"],[84,29,37,25],[84,30,37,26,"getQueryData"],[84,42,37,38],[84,43,37,39,"context"],[84,50,37,46],[84,51,37,47,"queryKey"],[84,59,37,55],[84,60,37,56],[85,6,38,2],[85,7,38,3],[86,6,38,3],[86,23,38,3,"_x"],[86,25,38,3],[87,8,38,3],[87,15,38,3,"_ref2"],[87,20,38,3],[87,21,38,3,"apply"],[87,26,38,3],[87,33,38,3,"arguments"],[87,42,38,3],[88,6,38,3],[89,4,38,3],[90,2,39,0],[91,0,39,1],[91,3]],"functionMap":{"names":["<global>","streamedQuery","<anonymous>","context.client.setQueryData$argument_1"],"mappings":"AAA;ACE;YCG,wCD;SCG;UCoB,+DD;GDS;CDC"},"hasCjsExports":false},"type":"js/module"}]}