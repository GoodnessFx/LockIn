{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":43,"column":17},"end":{"line":43,"column":52}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"query-string","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":44,"column":33},"end":{"line":44,"column":56}}],"key":"CQ4f6+ZdkmuRCkqw6zIINc/cka0=","exportNames":["*"],"imports":1}},{"name":"../matchers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":45,"column":19},"end":{"line":45,"column":41}}],"key":"lD+VV93WPi10A3qv5+9m649ytvA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\").default;\n  var _objectWithoutProperties = require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\").default;\n  var _excluded = [\"preserveDynamicRoutes\", \"preserveGroups\", \"shouldEncodeURISegment\"],\n    _excluded2 = [\"#\"];\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function () {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, \"default\", {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = this && this.__importStar || function () {\n    var ownKeys = function (o) {\n      ownKeys = Object.getOwnPropertyNames || function (o) {\n        var ar = [];\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n        return ar;\n      };\n      return ownKeys(o);\n    };\n    return function (mod) {\n      if (mod && mod.__esModule) return mod;\n      var result = {};\n      if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n      __setModuleDefault(result, mod);\n      return result;\n    };\n  }();\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getParamName = void 0;\n  exports.validatePathConfig = validatePathConfig;\n  exports.fixCurrentParams = fixCurrentParams;\n  exports.appendQueryAndHash = appendQueryAndHash;\n  exports.appendBaseUrl = appendBaseUrl;\n  exports.getPathWithConventionsCollapsed = getPathWithConventionsCollapsed;\n  exports.isDynamicPart = isDynamicPart;\n  var native_1 = require(_dependencyMap[2], \"@react-navigation/native\");\n  var queryString = __importStar(require(_dependencyMap[3], \"query-string\"));\n  var matchers_1 = require(_dependencyMap[4], \"../matchers\");\n  function validatePathConfig(_ref) {\n    var preserveDynamicRoutes = _ref.preserveDynamicRoutes,\n      preserveGroups = _ref.preserveGroups,\n      shouldEncodeURISegment = _ref.shouldEncodeURISegment,\n      options = _objectWithoutProperties(_ref, _excluded);\n    (0, native_1.validatePathConfig)(options);\n  }\n  function fixCurrentParams(allParams, route, stringify) {\n    var currentParams = Object.fromEntries(Object.entries(route.params).flatMap(_ref2 => {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n      if (key === 'screen' || key === 'params') {\n        return [];\n      }\n      return [[key, stringify?.[key] ? stringify[key](value) : Array.isArray(value) ? value.map(String) : String(value)]];\n    }));\n    Object.assign(allParams, currentParams);\n    return currentParams;\n  }\n  function appendQueryAndHash(path, _ref4) {\n    var hash = _ref4['#'],\n      focusedParams = _objectWithoutProperties(_ref4, _excluded2);\n    var query = queryString.stringify(focusedParams, {\n      sort: false\n    });\n    if (query) {\n      path += `?${query}`;\n    }\n    if (hash) {\n      path += `#${hash}`;\n    }\n    return path;\n  }\n  function appendBaseUrl(path) {\n    var baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    if (process.env.NODE_ENV !== 'development') {\n      if (baseUrl) {\n        return `/${baseUrl.replace(/^\\/+/, '').replace(/\\/$/, '')}${path}`;\n      }\n    }\n    return path;\n  }\n  function getPathWithConventionsCollapsed(_ref5) {\n    var pattern = _ref5.pattern,\n      route = _ref5.route,\n      params = _ref5.params,\n      preserveGroups = _ref5.preserveGroups,\n      preserveDynamicRoutes = _ref5.preserveDynamicRoutes,\n      _ref5$shouldEncodeURI = _ref5.shouldEncodeURISegment,\n      shouldEncodeURISegment = _ref5$shouldEncodeURI === void 0 ? true : _ref5$shouldEncodeURI,\n      initialRouteName = _ref5.initialRouteName;\n    var segments = pattern.split('/');\n    return segments.map((p, i) => {\n      var name = (0, exports.getParamName)(p);\n      if (p.startsWith('*')) {\n        if (preserveDynamicRoutes) {\n          if (name === 'not-found') {\n            return '+not-found';\n          }\n          return `[...${name}]`;\n        } else if (params[name]) {\n          if (Array.isArray(params[name])) {\n            return params[name].join('/');\n          }\n          return params[name];\n        } else if (route.name.startsWith('[') && route.name.endsWith(']')) {\n          return '';\n        } else if (p === '*not-found') {\n          return '';\n        } else {\n          return route.name;\n        }\n      }\n      if (p.startsWith(':')) {\n        if (preserveDynamicRoutes) {\n          return `[${name}]`;\n        }\n        var value = params[name];\n        if (value === undefined && p.endsWith('?')) {\n          return;\n        }\n        return (shouldEncodeURISegment ? encodeURISegment(value) : value) ?? 'undefined';\n      }\n      if (!preserveGroups && (0, matchers_1.matchGroupName)(p) != null) {\n        if (segments.length - 1 === i) {\n          if (initialRouteName) {\n            if (segmentMatchesConvention(initialRouteName)) {\n              return '';\n            }\n            return shouldEncodeURISegment ? encodeURISegment(initialRouteName, {\n              preserveBrackets: true\n            }) : initialRouteName;\n          }\n        }\n        return '';\n      }\n      return shouldEncodeURISegment ? encodeURISegment(p, {\n        preserveBrackets: true\n      }) : p;\n    }).map(v => v ?? '').join('/');\n  }\n  var getParamName = pattern => pattern.replace(/^[:*]/, '').replace(/\\?$/, '');\n  exports.getParamName = getParamName;\n  function isDynamicPart(p) {\n    return p.startsWith(':') || p.startsWith('*');\n  }\n  function segmentMatchesConvention(segment) {\n    return segment === 'index' || (0, matchers_1.matchGroupName)(segment) != null || (0, matchers_1.matchDynamicName)(segment) != null;\n  }\n  function encodeURISegment(str) {\n    var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref6$preserveBracket = _ref6.preserveBrackets,\n      preserveBrackets = _ref6$preserveBracket === void 0 ? false : _ref6$preserveBracket;\n    str = String(str).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n    if (preserveBrackets) {\n      str = str.replace(/%5B/g, '[').replace(/%5D/g, ']');\n    }\n    return str;\n  }\n});","lineCount":182,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[4,90,1,13,"default"],[4,97,1,13],[5,2,1,13],[5,6,1,13,"_objectWithoutProperties"],[5,30,1,13],[5,33,1,13,"require"],[5,40,1,13],[5,41,1,13,"_dependencyMap"],[5,55,1,13],[5,110,1,13,"default"],[5,117,1,13],[6,2,1,13],[6,6,1,13,"_excluded"],[6,15,1,13],[7,4,1,13,"_excluded2"],[7,14,1,13],[8,2,2,0],[8,6,2,4,"__createBinding"],[8,21,2,19],[8,24,2,23],[8,28,2,27],[8,32,2,31],[8,36,2,35],[8,37,2,36,"__createBinding"],[8,52,2,51],[8,57,2,57,"Object"],[8,63,2,63],[8,64,2,64,"create"],[8,70,2,70],[8,73,2,74],[8,83,2,83,"o"],[8,84,2,84],[8,86,2,86,"m"],[8,87,2,87],[8,89,2,89,"k"],[8,90,2,90],[8,92,2,92,"k2"],[8,94,2,94],[8,96,2,96],[9,4,3,4],[9,8,3,8,"k2"],[9,10,3,10],[9,15,3,15,"undefined"],[9,24,3,24],[9,26,3,26,"k2"],[9,28,3,28],[9,31,3,31,"k"],[9,32,3,32],[10,4,4,4],[10,8,4,8,"desc"],[10,12,4,12],[10,15,4,15,"Object"],[10,21,4,21],[10,22,4,22,"getOwnPropertyDescriptor"],[10,46,4,46],[10,47,4,47,"m"],[10,48,4,48],[10,50,4,50,"k"],[10,51,4,51],[10,52,4,52],[11,4,5,4],[11,8,5,8],[11,9,5,9,"desc"],[11,13,5,13],[11,18,5,18],[11,23,5,23],[11,27,5,27,"desc"],[11,31,5,31],[11,34,5,34],[11,35,5,35,"m"],[11,36,5,36],[11,37,5,37,"__esModule"],[11,47,5,47],[11,50,5,50,"desc"],[11,54,5,54],[11,55,5,55,"writable"],[11,63,5,63],[11,67,5,67,"desc"],[11,71,5,71],[11,72,5,72,"configurable"],[11,84,5,84],[11,85,5,85],[11,87,5,87],[12,6,6,6,"desc"],[12,10,6,10],[12,13,6,13],[13,8,6,15,"enumerable"],[13,18,6,25],[13,20,6,27],[13,24,6,31],[14,8,6,33,"get"],[14,11,6,36],[14,13,6,38],[14,22,6,38,"get"],[14,23,6,38],[14,25,6,49],[15,10,6,51],[15,17,6,58,"m"],[15,18,6,59],[15,19,6,60,"k"],[15,20,6,61],[15,21,6,62],[16,8,6,64],[17,6,6,66],[17,7,6,67],[18,4,7,4],[19,4,8,4,"Object"],[19,10,8,10],[19,11,8,11,"defineProperty"],[19,25,8,25],[19,26,8,26,"o"],[19,27,8,27],[19,29,8,29,"k2"],[19,31,8,31],[19,33,8,33,"desc"],[19,37,8,37],[19,38,8,38],[20,2,9,0],[20,3,9,1],[20,6,9,6],[20,16,9,15,"o"],[20,17,9,16],[20,19,9,18,"m"],[20,20,9,19],[20,22,9,21,"k"],[20,23,9,22],[20,25,9,24,"k2"],[20,27,9,26],[20,29,9,28],[21,4,10,4],[21,8,10,8,"k2"],[21,10,10,10],[21,15,10,15,"undefined"],[21,24,10,24],[21,26,10,26,"k2"],[21,28,10,28],[21,31,10,31,"k"],[21,32,10,32],[22,4,11,4,"o"],[22,5,11,5],[22,6,11,6,"k2"],[22,8,11,8],[22,9,11,9],[22,12,11,12,"m"],[22,13,11,13],[22,14,11,14,"k"],[22,15,11,15],[22,16,11,16],[23,2,12,0],[23,3,12,2],[23,4,12,3],[24,2,13,0],[24,6,13,4,"__setModuleDefault"],[24,24,13,22],[24,27,13,26],[24,31,13,30],[24,35,13,34],[24,39,13,38],[24,40,13,39,"__setModuleDefault"],[24,58,13,57],[24,63,13,63,"Object"],[24,69,13,69],[24,70,13,70,"create"],[24,76,13,76],[24,79,13,80],[24,89,13,89,"o"],[24,90,13,90],[24,92,13,92,"v"],[24,93,13,93],[24,95,13,95],[25,4,14,4,"Object"],[25,10,14,10],[25,11,14,11,"defineProperty"],[25,25,14,25],[25,26,14,26,"o"],[25,27,14,27],[25,29,14,29],[25,38,14,38],[25,40,14,40],[26,6,14,42,"enumerable"],[26,16,14,52],[26,18,14,54],[26,22,14,58],[27,6,14,60,"value"],[27,11,14,65],[27,13,14,67,"v"],[28,4,14,69],[28,5,14,70],[28,6,14,71],[29,2,15,0],[29,3,15,1],[29,6,15,5],[29,16,15,14,"o"],[29,17,15,15],[29,19,15,17,"v"],[29,20,15,18],[29,22,15,20],[30,4,16,4,"o"],[30,5,16,5],[30,6,16,6],[30,15,16,15],[30,16,16,16],[30,19,16,19,"v"],[30,20,16,20],[31,2,17,0],[31,3,17,1],[31,4,17,2],[32,2,18,0],[32,6,18,4,"__importStar"],[32,18,18,16],[32,21,18,20],[32,25,18,24],[32,29,18,28],[32,33,18,32],[32,34,18,33,"__importStar"],[32,46,18,45],[32,50,18,51],[32,62,18,63],[33,4,19,4],[33,8,19,8,"ownKeys"],[33,15,19,15],[33,18,19,18],[33,27,19,18,"ownKeys"],[33,28,19,27,"o"],[33,29,19,28],[33,31,19,30],[34,6,20,8,"ownKeys"],[34,13,20,15],[34,16,20,18,"Object"],[34,22,20,24],[34,23,20,25,"getOwnPropertyNames"],[34,42,20,44],[34,46,20,48],[34,56,20,58,"o"],[34,57,20,59],[34,59,20,61],[35,8,21,12],[35,12,21,16,"ar"],[35,14,21,18],[35,17,21,21],[35,19,21,23],[36,8,22,12],[36,13,22,17],[36,17,22,21,"k"],[36,18,22,22],[36,22,22,26,"o"],[36,23,22,27],[36,25,22,29],[36,29,22,33,"Object"],[36,35,22,39],[36,36,22,40,"prototype"],[36,45,22,49],[36,46,22,50,"hasOwnProperty"],[36,60,22,64],[36,61,22,65,"call"],[36,65,22,69],[36,66,22,70,"o"],[36,67,22,71],[36,69,22,73,"k"],[36,70,22,74],[36,71,22,75],[36,73,22,77,"ar"],[36,75,22,79],[36,76,22,80,"ar"],[36,78,22,82],[36,79,22,83,"length"],[36,85,22,89],[36,86,22,90],[36,89,22,93,"k"],[36,90,22,94],[37,8,23,12],[37,15,23,19,"ar"],[37,17,23,21],[38,6,24,8],[38,7,24,9],[39,6,25,8],[39,13,25,15,"ownKeys"],[39,20,25,22],[39,21,25,23,"o"],[39,22,25,24],[39,23,25,25],[40,4,26,4],[40,5,26,5],[41,4,27,4],[41,11,27,11],[41,21,27,21,"mod"],[41,24,27,24],[41,26,27,26],[42,6,28,8],[42,10,28,12,"mod"],[42,13,28,15],[42,17,28,19,"mod"],[42,20,28,22],[42,21,28,23,"__esModule"],[42,31,28,33],[42,33,28,35],[42,40,28,42,"mod"],[42,43,28,45],[43,6,29,8],[43,10,29,12,"result"],[43,16,29,18],[43,19,29,21],[43,20,29,22],[43,21,29,23],[44,6,30,8],[44,10,30,12,"mod"],[44,13,30,15],[44,17,30,19],[44,21,30,23],[44,23,30,25],[44,28,30,30],[44,32,30,34,"k"],[44,33,30,35],[44,36,30,38,"ownKeys"],[44,43,30,45],[44,44,30,46,"mod"],[44,47,30,49],[44,48,30,50],[44,50,30,52,"i"],[44,51,30,53],[44,54,30,56],[44,55,30,57],[44,57,30,59,"i"],[44,58,30,60],[44,61,30,63,"k"],[44,62,30,64],[44,63,30,65,"length"],[44,69,30,71],[44,71,30,73,"i"],[44,72,30,74],[44,74,30,76],[44,76,30,78],[44,80,30,82,"k"],[44,81,30,83],[44,82,30,84,"i"],[44,83,30,85],[44,84,30,86],[44,89,30,91],[44,98,30,100],[44,100,30,102,"__createBinding"],[44,115,30,117],[44,116,30,118,"result"],[44,122,30,124],[44,124,30,126,"mod"],[44,127,30,129],[44,129,30,131,"k"],[44,130,30,132],[44,131,30,133,"i"],[44,132,30,134],[44,133,30,135],[44,134,30,136],[45,6,31,8,"__setModuleDefault"],[45,24,31,26],[45,25,31,27,"result"],[45,31,31,33],[45,33,31,35,"mod"],[45,36,31,38],[45,37,31,39],[46,6,32,8],[46,13,32,15,"result"],[46,19,32,21],[47,4,33,4],[47,5,33,5],[48,2,34,0],[48,3,34,1],[48,4,34,3],[48,5,34,4],[49,2,35,0,"Object"],[49,8,35,6],[49,9,35,7,"defineProperty"],[49,23,35,21],[49,24,35,22,"exports"],[49,31,35,29],[49,33,35,31],[49,45,35,43],[49,47,35,45],[50,4,35,47,"value"],[50,9,35,52],[50,11,35,54],[51,2,35,59],[51,3,35,60],[51,4,35,61],[52,2,36,0,"exports"],[52,9,36,7],[52,10,36,8,"getParamName"],[52,22,36,20],[52,25,36,23],[52,30,36,28],[52,31,36,29],[53,2,37,0,"exports"],[53,9,37,7],[53,10,37,8,"validatePathConfig"],[53,28,37,26],[53,31,37,29,"validatePathConfig"],[53,49,37,47],[54,2,38,0,"exports"],[54,9,38,7],[54,10,38,8,"fixCurrentParams"],[54,26,38,24],[54,29,38,27,"fixCurrentParams"],[54,45,38,43],[55,2,39,0,"exports"],[55,9,39,7],[55,10,39,8,"appendQueryAndHash"],[55,28,39,26],[55,31,39,29,"appendQueryAndHash"],[55,49,39,47],[56,2,40,0,"exports"],[56,9,40,7],[56,10,40,8,"appendBaseUrl"],[56,23,40,21],[56,26,40,24,"appendBaseUrl"],[56,39,40,37],[57,2,41,0,"exports"],[57,9,41,7],[57,10,41,8,"getPathWithConventionsCollapsed"],[57,41,41,39],[57,44,41,42,"getPathWithConventionsCollapsed"],[57,75,41,73],[58,2,42,0,"exports"],[58,9,42,7],[58,10,42,8,"isDynamicPart"],[58,23,42,21],[58,26,42,24,"isDynamicPart"],[58,39,42,37],[59,2,43,0],[59,6,43,6,"native_1"],[59,14,43,14],[59,17,43,17,"require"],[59,24,43,24],[59,25,43,24,"_dependencyMap"],[59,39,43,24],[59,70,43,51],[59,71,43,52],[60,2,44,0],[60,6,44,6,"queryString"],[60,17,44,17],[60,20,44,20,"__importStar"],[60,32,44,32],[60,33,44,33,"require"],[60,40,44,40],[60,41,44,40,"_dependencyMap"],[60,55,44,40],[60,74,44,55],[60,75,44,56],[60,76,44,57],[61,2,45,0],[61,6,45,6,"matchers_1"],[61,16,45,16],[61,19,45,19,"require"],[61,26,45,26],[61,27,45,26,"_dependencyMap"],[61,41,45,26],[61,59,45,40],[61,60,45,41],[62,2,46,0],[62,11,46,9,"validatePathConfig"],[62,29,46,27,"validatePathConfig"],[62,30,46,27,"_ref"],[62,34,46,27],[62,36,46,107],[63,4,46,107],[63,8,46,30,"preserveDynamicRoutes"],[63,29,46,51],[63,32,46,51,"_ref"],[63,36,46,51],[63,37,46,30,"preserveDynamicRoutes"],[63,58,46,51],[64,6,46,53,"preserveGroups"],[64,20,46,67],[64,23,46,67,"_ref"],[64,27,46,67],[64,28,46,53,"preserveGroups"],[64,42,46,67],[65,6,46,69,"shouldEncodeURISegment"],[65,28,46,91],[65,31,46,91,"_ref"],[65,35,46,91],[65,36,46,69,"shouldEncodeURISegment"],[65,58,46,91],[66,6,46,96,"options"],[66,13,46,103],[66,16,46,103,"_objectWithoutProperties"],[66,40,46,103],[66,41,46,103,"_ref"],[66,45,46,103],[66,47,46,103,"_excluded"],[66,56,46,103],[67,4,47,4],[67,5,47,5],[67,6,47,6],[67,8,47,8,"native_1"],[67,16,47,16],[67,17,47,17,"validatePathConfig"],[67,35,47,35],[67,37,47,37,"options"],[67,44,47,44],[67,45,47,45],[68,2,48,0],[69,2,49,0],[69,11,49,9,"fixCurrentParams"],[69,27,49,25,"fixCurrentParams"],[69,28,49,26,"allParams"],[69,37,49,35],[69,39,49,37,"route"],[69,44,49,42],[69,46,49,44,"stringify"],[69,55,49,53],[69,57,49,55],[70,4,51,4],[70,8,51,10,"currentParams"],[70,21,51,23],[70,24,51,26,"Object"],[70,30,51,32],[70,31,51,33,"fromEntries"],[70,42,51,44],[70,43,51,45,"Object"],[70,49,51,51],[70,50,51,52,"entries"],[70,57,51,59],[70,58,51,60,"route"],[70,63,51,65],[70,64,51,66,"params"],[70,70,51,72],[70,71,51,73],[70,72,51,74,"flatMap"],[70,79,51,81],[70,80,51,82,"_ref2"],[70,85,51,82],[70,89,51,100],[71,6,51,100],[71,10,51,100,"_ref3"],[71,15,51,100],[71,18,51,100,"_slicedToArray"],[71,32,51,100],[71,33,51,100,"_ref2"],[71,38,51,100],[72,8,51,84,"key"],[72,11,51,87],[72,14,51,87,"_ref3"],[72,19,51,87],[73,8,51,89,"value"],[73,13,51,94],[73,16,51,94,"_ref3"],[73,21,51,94],[74,6,52,8],[74,10,52,12,"key"],[74,13,52,15],[74,18,52,20],[74,26,52,28],[74,30,52,32,"key"],[74,33,52,35],[74,38,52,40],[74,46,52,48],[74,48,52,50],[75,8,53,12],[75,15,53,19],[75,17,53,21],[76,6,54,8],[77,6,55,8],[77,13,55,15],[77,14,56,12],[77,15,57,16,"key"],[77,18,57,19],[77,20,58,16,"stringify"],[77,29,58,25],[77,32,58,28,"key"],[77,35,58,31],[77,36,58,32],[77,39,59,22,"stringify"],[77,48,59,31],[77,49,59,32,"key"],[77,52,59,35],[77,53,59,36],[77,54,59,37,"value"],[77,59,59,42],[77,60,59,43],[77,63,60,22,"Array"],[77,68,60,27],[77,69,60,28,"isArray"],[77,76,60,35],[77,77,60,36,"value"],[77,82,60,41],[77,83,60,42],[77,86,61,26,"value"],[77,91,61,31],[77,92,61,32,"map"],[77,95,61,35],[77,96,61,36,"String"],[77,102,61,42],[77,103,61,43],[77,106,62,26,"String"],[77,112,62,32],[77,113,62,33,"value"],[77,118,62,38],[77,119,62,39],[77,120,63,13],[77,121,64,9],[78,4,65,4],[78,5,65,5],[78,6,65,6],[78,7,65,7],[79,4,67,4,"Object"],[79,10,67,10],[79,11,67,11,"assign"],[79,17,67,17],[79,18,67,18,"allParams"],[79,27,67,27],[79,29,67,29,"currentParams"],[79,42,67,42],[79,43,67,43],[80,4,68,4],[80,11,68,11,"currentParams"],[80,24,68,24],[81,2,69,0],[82,2,70,0],[82,11,70,9,"appendQueryAndHash"],[82,29,70,27,"appendQueryAndHash"],[82,30,70,28,"path"],[82,34,70,32],[82,36,70,32,"_ref4"],[82,41,70,32],[82,43,70,67],[83,4,70,67],[83,8,70,41,"hash"],[83,12,70,45],[83,15,70,45,"_ref4"],[83,20,70,45],[83,21,70,36],[83,24,70,39],[84,6,70,50,"focusedParams"],[84,19,70,63],[84,22,70,63,"_objectWithoutProperties"],[84,46,70,63],[84,47,70,63,"_ref4"],[84,52,70,63],[84,54,70,63,"_excluded2"],[84,64,70,63],[85,4,71,4],[85,8,71,10,"query"],[85,13,71,15],[85,16,71,18,"queryString"],[85,27,71,29],[85,28,71,30,"stringify"],[85,37,71,39],[85,38,71,40,"focusedParams"],[85,51,71,53],[85,53,71,55],[86,6,71,57,"sort"],[86,10,71,61],[86,12,71,63],[87,4,71,69],[87,5,71,70],[87,6,71,71],[88,4,72,4],[88,8,72,8,"query"],[88,13,72,13],[88,15,72,15],[89,6,73,8,"path"],[89,10,73,12],[89,14,73,16],[89,18,73,20,"query"],[89,23,73,25],[89,25,73,27],[90,4,74,4],[91,4,75,4],[91,8,75,8,"hash"],[91,12,75,12],[91,14,75,14],[92,6,76,8,"path"],[92,10,76,12],[92,14,76,16],[92,18,76,20,"hash"],[92,22,76,24],[92,24,76,26],[93,4,77,4],[94,4,78,4],[94,11,78,11,"path"],[94,15,78,15],[95,2,79,0],[96,2,80,0],[96,11,80,9,"appendBaseUrl"],[96,24,80,22,"appendBaseUrl"],[96,25,80,23,"path"],[96,29,80,27],[96,31,80,66],[97,4,80,66],[97,8,80,29,"baseUrl"],[97,15,80,36],[97,18,80,36,"arguments"],[97,27,80,36],[97,28,80,36,"length"],[97,34,80,36],[97,42,80,36,"arguments"],[97,51,80,36],[97,59,80,36,"undefined"],[97,68,80,36],[97,71,80,36,"arguments"],[97,80,80,36],[98,4,81,4],[98,8,81,8,"process"],[98,15,81,15],[98,16,81,16,"env"],[98,19,81,19],[98,20,81,20,"NODE_ENV"],[98,28,81,28],[98,33,81,33],[98,46,81,46],[98,48,81,48],[99,6,82,8],[99,10,82,12,"baseUrl"],[99,17,82,19],[99,19,82,21],[100,8,83,12],[100,15,83,19],[100,19,83,23,"baseUrl"],[100,26,83,30],[100,27,83,31,"replace"],[100,34,83,38],[100,35,83,39],[100,41,83,45],[100,43,83,47],[100,45,83,49],[100,46,83,50],[100,47,83,51,"replace"],[100,54,83,58],[100,55,83,59],[100,60,83,64],[100,62,83,66],[100,64,83,68],[100,65,83,69],[100,68,83,72,"path"],[100,72,83,76],[100,74,83,78],[101,6,84,8],[102,4,85,4],[103,4,86,4],[103,11,86,11,"path"],[103,15,86,15],[104,2,87,0],[105,2,88,0],[105,11,88,9,"getPathWithConventionsCollapsed"],[105,42,88,40,"getPathWithConventionsCollapsed"],[105,43,88,40,"_ref5"],[105,48,88,40],[105,50,88,158],[106,4,88,158],[106,8,88,43,"pattern"],[106,15,88,50],[106,18,88,50,"_ref5"],[106,23,88,50],[106,24,88,43,"pattern"],[106,31,88,50],[107,6,88,52,"route"],[107,11,88,57],[107,14,88,57,"_ref5"],[107,19,88,57],[107,20,88,52,"route"],[107,25,88,57],[108,6,88,59,"params"],[108,12,88,65],[108,15,88,65,"_ref5"],[108,20,88,65],[108,21,88,59,"params"],[108,27,88,65],[109,6,88,67,"preserveGroups"],[109,20,88,81],[109,23,88,81,"_ref5"],[109,28,88,81],[109,29,88,67,"preserveGroups"],[109,43,88,81],[110,6,88,83,"preserveDynamicRoutes"],[110,27,88,104],[110,30,88,104,"_ref5"],[110,35,88,104],[110,36,88,83,"preserveDynamicRoutes"],[110,57,88,104],[111,6,88,104,"_ref5$shouldEncodeURI"],[111,27,88,104],[111,30,88,104,"_ref5"],[111,35,88,104],[111,36,88,106,"shouldEncodeURISegment"],[111,58,88,128],[112,6,88,106,"shouldEncodeURISegment"],[112,28,88,128],[112,31,88,128,"_ref5$shouldEncodeURI"],[112,52,88,128],[112,66,88,131],[112,70,88,135],[112,73,88,135,"_ref5$shouldEncodeURI"],[112,94,88,135],[113,6,88,137,"initialRouteName"],[113,22,88,153],[113,25,88,153,"_ref5"],[113,30,88,153],[113,31,88,137,"initialRouteName"],[113,47,88,153],[114,4,89,4],[114,8,89,10,"segments"],[114,16,89,18],[114,19,89,21,"pattern"],[114,26,89,28],[114,27,89,29,"split"],[114,32,89,34],[114,33,89,35],[114,36,89,38],[114,37,89,39],[115,4,90,4],[115,11,90,11,"segments"],[115,19,90,19],[115,20,91,9,"map"],[115,23,91,12],[115,24,91,13],[115,25,91,14,"p"],[115,26,91,15],[115,28,91,17,"i"],[115,29,91,18],[115,34,91,23],[116,6,92,8],[116,10,92,14,"name"],[116,14,92,18],[116,17,92,21],[116,18,92,22],[116,19,92,23],[116,21,92,25,"exports"],[116,28,92,32],[116,29,92,33,"getParamName"],[116,41,92,45],[116,43,92,47,"p"],[116,44,92,48],[116,45,92,49],[117,6,95,8],[117,10,95,12,"p"],[117,11,95,13],[117,12,95,14,"startsWith"],[117,22,95,24],[117,23,95,25],[117,26,95,28],[117,27,95,29],[117,29,95,31],[118,8,96,12],[118,12,96,16,"preserveDynamicRoutes"],[118,33,96,37],[118,35,96,39],[119,10,97,16],[119,14,97,20,"name"],[119,18,97,24],[119,23,97,29],[119,34,97,40],[119,36,97,42],[120,12,98,20],[120,19,98,27],[120,31,98,39],[121,10,99,16],[122,10,100,16],[122,17,100,23],[122,24,100,30,"name"],[122,28,100,34],[122,31,100,37],[123,8,101,12],[123,9,101,13],[123,15,102,17],[123,19,102,21,"params"],[123,25,102,27],[123,26,102,28,"name"],[123,30,102,32],[123,31,102,33],[123,33,102,35],[124,10,103,16],[124,14,103,20,"Array"],[124,19,103,25],[124,20,103,26,"isArray"],[124,27,103,33],[124,28,103,34,"params"],[124,34,103,40],[124,35,103,41,"name"],[124,39,103,45],[124,40,103,46],[124,41,103,47],[124,43,103,49],[125,12,104,20],[125,19,104,27,"params"],[125,25,104,33],[125,26,104,34,"name"],[125,30,104,38],[125,31,104,39],[125,32,104,40,"join"],[125,36,104,44],[125,37,104,45],[125,40,104,48],[125,41,104,49],[126,10,105,16],[127,10,106,16],[127,17,106,23,"params"],[127,23,106,29],[127,24,106,30,"name"],[127,28,106,34],[127,29,106,35],[128,8,107,12],[128,9,107,13],[128,15,108,17],[128,19,108,21,"route"],[128,24,108,26],[128,25,108,27,"name"],[128,29,108,31],[128,30,108,32,"startsWith"],[128,40,108,42],[128,41,108,43],[128,44,108,46],[128,45,108,47],[128,49,108,51,"route"],[128,54,108,56],[128,55,108,57,"name"],[128,59,108,61],[128,60,108,62,"endsWith"],[128,68,108,70],[128,69,108,71],[128,72,108,74],[128,73,108,75],[128,75,108,77],[129,10,109,16],[129,17,109,23],[129,19,109,25],[130,8,110,12],[130,9,110,13],[130,15,111,17],[130,19,111,21,"p"],[130,20,111,22],[130,25,111,27],[130,37,111,39],[130,39,111,41],[131,10,112,16],[131,17,112,23],[131,19,112,25],[132,8,113,12],[132,9,113,13],[132,15,114,17],[133,10,115,16],[133,17,115,23,"route"],[133,22,115,28],[133,23,115,29,"name"],[133,27,115,33],[134,8,116,12],[135,6,117,8],[136,6,119,8],[136,10,119,12,"p"],[136,11,119,13],[136,12,119,14,"startsWith"],[136,22,119,24],[136,23,119,25],[136,26,119,28],[136,27,119,29],[136,29,119,31],[137,8,120,12],[137,12,120,16,"preserveDynamicRoutes"],[137,33,120,37],[137,35,120,39],[138,10,121,16],[138,17,121,23],[138,21,121,27,"name"],[138,25,121,31],[138,28,121,34],[139,8,122,12],[140,8,124,12],[140,12,124,18,"value"],[140,17,124,23],[140,20,124,26,"params"],[140,26,124,32],[140,27,124,33,"name"],[140,31,124,37],[140,32,124,38],[141,8,125,12],[141,12,125,16,"value"],[141,17,125,21],[141,22,125,26,"undefined"],[141,31,125,35],[141,35,125,39,"p"],[141,36,125,40],[141,37,125,41,"endsWith"],[141,45,125,49],[141,46,125,50],[141,49,125,53],[141,50,125,54],[141,52,125,56],[142,10,126,16],[143,8,127,12],[144,8,128,12],[144,15,128,19],[144,16,128,20,"shouldEncodeURISegment"],[144,38,128,42],[144,41,128,45,"encodeURISegment"],[144,57,128,61],[144,58,128,62,"value"],[144,63,128,67],[144,64,128,68],[144,67,128,71,"value"],[144,72,128,76],[144,77,128,81],[144,88,128,92],[145,6,129,8],[146,6,130,8],[146,10,130,12],[146,11,130,13,"preserveGroups"],[146,25,130,27],[146,29,130,31],[146,30,130,32],[146,31,130,33],[146,33,130,35,"matchers_1"],[146,43,130,45],[146,44,130,46,"matchGroupName"],[146,58,130,60],[146,60,130,62,"p"],[146,61,130,63],[146,62,130,64],[146,66,130,68],[146,70,130,72],[146,72,130,74],[147,8,134,12],[147,12,134,16,"segments"],[147,20,134,24],[147,21,134,25,"length"],[147,27,134,31],[147,30,134,34],[147,31,134,35],[147,36,134,40,"i"],[147,37,134,41],[147,39,134,43],[148,10,135,16],[148,14,135,20,"initialRouteName"],[148,30,135,36],[148,32,135,38],[149,12,137,20],[149,16,137,24,"segmentMatchesConvention"],[149,40,137,48],[149,41,137,49,"initialRouteName"],[149,57,137,65],[149,58,137,66],[149,60,137,68],[150,14,138,24],[150,21,138,31],[150,23,138,33],[151,12,139,20],[152,12,140,20],[152,19,140,27,"shouldEncodeURISegment"],[152,41,140,49],[152,44,141,26,"encodeURISegment"],[152,60,141,42],[152,61,141,43,"initialRouteName"],[152,77,141,59],[152,79,141,61],[153,14,141,63,"preserveBrackets"],[153,30,141,79],[153,32,141,81],[154,12,141,86],[154,13,141,87],[154,14,141,88],[154,17,142,26,"initialRouteName"],[154,33,142,42],[155,10,143,16],[156,8,144,12],[157,8,145,12],[157,15,145,19],[157,17,145,21],[158,6,146,8],[159,6,148,8],[159,13,148,15,"shouldEncodeURISegment"],[159,35,148,37],[159,38,148,40,"encodeURISegment"],[159,54,148,56],[159,55,148,57,"p"],[159,56,148,58],[159,58,148,60],[160,8,148,62,"preserveBrackets"],[160,24,148,78],[160,26,148,80],[161,6,148,85],[161,7,148,86],[161,8,148,87],[161,11,148,90,"p"],[161,12,148,91],[162,4,149,4],[162,5,149,5],[162,6,149,6],[162,7,150,9,"map"],[162,10,150,12],[162,11,150,14,"v"],[162,12,150,15],[162,16,150,20,"v"],[162,17,150,21],[162,21,150,25],[162,23,150,27],[162,24,150,28],[162,25,151,9,"join"],[162,29,151,13],[162,30,151,14],[162,33,151,17],[162,34,151,18],[163,2,152,0],[164,2,153,0],[164,6,153,6,"getParamName"],[164,18,153,18],[164,21,153,22,"pattern"],[164,28,153,29],[164,32,153,34,"pattern"],[164,39,153,41],[164,40,153,42,"replace"],[164,47,153,49],[164,48,153,50],[164,55,153,57],[164,57,153,59],[164,59,153,61],[164,60,153,62],[164,61,153,63,"replace"],[164,68,153,70],[164,69,153,71],[164,74,153,76],[164,76,153,78],[164,78,153,80],[164,79,153,81],[165,2,154,0,"exports"],[165,9,154,7],[165,10,154,8,"getParamName"],[165,22,154,20],[165,25,154,23,"getParamName"],[165,37,154,35],[166,2,155,0],[166,11,155,9,"isDynamicPart"],[166,24,155,22,"isDynamicPart"],[166,25,155,23,"p"],[166,26,155,24],[166,28,155,26],[167,4,156,4],[167,11,156,11,"p"],[167,12,156,12],[167,13,156,13,"startsWith"],[167,23,156,23],[167,24,156,24],[167,27,156,27],[167,28,156,28],[167,32,156,32,"p"],[167,33,156,33],[167,34,156,34,"startsWith"],[167,44,156,44],[167,45,156,45],[167,48,156,48],[167,49,156,49],[168,2,157,0],[169,2,158,0],[169,11,158,9,"segmentMatchesConvention"],[169,35,158,33,"segmentMatchesConvention"],[169,36,158,34,"segment"],[169,43,158,41],[169,45,158,43],[170,4,159,4],[170,11,159,12,"segment"],[170,18,159,19],[170,23,159,24],[170,30,159,31],[170,34,159,35],[170,35,159,36],[170,36,159,37],[170,38,159,39,"matchers_1"],[170,48,159,49],[170,49,159,50,"matchGroupName"],[170,63,159,64],[170,65,159,66,"segment"],[170,72,159,73],[170,73,159,74],[170,77,159,78],[170,81,159,82],[170,85,159,86],[170,86,159,87],[170,87,159,88],[170,89,159,90,"matchers_1"],[170,99,159,100],[170,100,159,101,"matchDynamicName"],[170,116,159,117],[170,118,159,119,"segment"],[170,125,159,126],[170,126,159,127],[170,130,159,131],[170,134,159,135],[171,2,160,0],[172,2,161,0],[172,11,161,9,"encodeURISegment"],[172,27,161,25,"encodeURISegment"],[172,28,161,26,"str"],[172,31,161,29],[172,33,161,66],[173,4,161,66],[173,8,161,66,"_ref6"],[173,13,161,66],[173,16,161,66,"arguments"],[173,25,161,66],[173,26,161,66,"length"],[173,32,161,66],[173,40,161,66,"arguments"],[173,49,161,66],[173,57,161,66,"undefined"],[173,66,161,66],[173,69,161,66,"arguments"],[173,78,161,66],[173,84,161,62],[173,85,161,63],[173,86,161,64],[174,6,161,64,"_ref6$preserveBracket"],[174,27,161,64],[174,30,161,64,"_ref6"],[174,35,161,64],[174,36,161,33,"preserveBrackets"],[174,52,161,49],[175,6,161,33,"preserveBrackets"],[175,22,161,49],[175,25,161,49,"_ref6$preserveBracket"],[175,46,161,49],[175,60,161,52],[175,65,161,57],[175,68,161,57,"_ref6$preserveBracket"],[175,89,161,57],[176,4,164,4,"str"],[176,7,164,7],[176,10,164,10,"String"],[176,16,164,16],[176,17,164,17,"str"],[176,20,164,20],[176,21,164,21],[176,22,164,22,"replace"],[176,29,164,29],[176,30,164,30],[176,63,164,63],[176,65,164,66,"char"],[176,69,164,70],[176,73,164,75,"encodeURIComponent"],[176,91,164,93],[176,92,164,94,"char"],[176,96,164,98],[176,97,164,99],[176,98,164,100],[177,4,165,4],[177,8,165,8,"preserveBrackets"],[177,24,165,24],[177,26,165,26],[178,6,167,8,"str"],[178,9,167,11],[178,12,167,14,"str"],[178,15,167,17],[178,16,167,18,"replace"],[178,23,167,25],[178,24,167,26],[178,30,167,32],[178,32,167,34],[178,35,167,37],[178,36,167,38],[178,37,167,39,"replace"],[178,44,167,46],[178,45,167,47],[178,51,167,53],[178,53,167,55],[178,56,167,58],[178,57,167,59],[179,4,168,4],[180,4,169,4],[180,11,169,11,"str"],[180,14,169,14],[181,2,170,0],[182,0,170,1],[182,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","ownKeys","validatePathConfig","fixCurrentParams","Object.entries.flatMap$argument_0","appendQueryAndHash","appendBaseUrl","getPathWithConventionsCollapsed","segments.map$argument_0","segments.map.map$argument_0","getParamName","isDynamicPart","segmentMatchesConvention","encodeURISegment","String.replace$argument_1"],"mappings":"AAA;0ECC;sCCI,2BD;CDG,KC;CDG;gFCC;CDE,IC;CDE;mDCC;kBEC;gDFC;SEI;KFE;CDQ;AIY;CJE;AKC;kFCE;KDc;CLI;AOC;CPS;AQC;CRO;ASC;aCG;KD0D;aEC,cF;CTE;qBYC,4DZ;AaE;CbE;AcC;CdE;AeC;iECG,kCD;CfM"},"hasCjsExports":true},"type":"js/module"}]}