{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":43}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"],"imports":1}},{"name":"./BaseRouter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0},"end":{"line":4,"column":45}}],"key":"dJts27xOtIr7LbP/D7m0z2vzxHI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"TabActions\", {\n    enumerable: true,\n    get: function () {\n      return TabActions;\n    }\n  });\n  exports.TabRouter = TabRouter;\n  var _nanoidNonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  var _BaseRouterJs = require(_dependencyMap[1], \"./BaseRouter.js\");\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name,\n          params\n        }\n      };\n    }\n  };\n  var getRouteHistory = (routes, index, backBehavior, initialRouteName) => {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n        break;\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n        break;\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(route => route.name === initialRouteName);\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n        break;\n      case 'history':\n      case 'fullHistory':\n        break;\n    }\n    return history;\n  };\n  var changeIndex = (state, index, backBehavior, initialRouteName) => {\n    var history = state.history;\n    if (backBehavior === 'history' || backBehavior === 'fullHistory') {\n      var currentRoute = state.routes[index];\n      if (backBehavior === 'history') {\n        history = history.filter(it => it.type === 'route' ? it.key !== currentRoute.key : false);\n      } else if (backBehavior === 'fullHistory') {\n        var lastHistoryRouteItemIndex = history.findLastIndex(item => item.type === 'route');\n        if (currentRoute.key === history[lastHistoryRouteItemIndex]?.key) {\n          history = [...history.slice(0, lastHistoryRouteItemIndex), ...history.slice(lastHistoryRouteItemIndex + 1)];\n        }\n      }\n      history = history.concat({\n        type: TYPE_ROUTE,\n        key: currentRoute.key,\n        params: backBehavior === 'fullHistory' ? currentRoute.params : undefined\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n    return {\n      ...state,\n      index,\n      history\n    };\n  };\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n      _ref$backBehavior = _ref.backBehavior,\n      backBehavior = _ref$backBehavior === void 0 ? 'firstRoute' : _ref$backBehavior;\n    var router = {\n      ..._BaseRouterJs.BaseRouter,\n      type: 'tab',\n      getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(name => ({\n          name,\n          key: `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n          params: routeParamList[name]\n        }));\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nanoidNonSecure.nanoid)()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n          preloadedRouteKeys: []\n        };\n      },\n      getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = routeNames.map(name => {\n          var route = state.routes.find(r => r.name === name);\n          return {\n            ...route,\n            name,\n            key: route && route.name === name && route.key ? route.key : `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n            params: routeParamList[name] !== undefined ? {\n              ...routeParamList[name],\n              ...(route ? route.params : undefined)\n            } : route ? route.params : undefined\n          };\n        });\n        var index = Math.min(Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0), routes.length - 1);\n        var routeKeys = routes.map(route => route.key);\n        var history = state.history?.filter(it => routeKeys.includes(it.key)) ?? [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nanoidNonSecure.nanoid)()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n          preloadedRouteKeys: state.preloadedRouteKeys?.filter(key => routeKeys.includes(key)) ?? []\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n          routeParamList = _ref4.routeParamList,\n          routeKeyChanges = _ref4.routeKeyChanges;\n        var routes = routeNames.map(name => state.routes.find(r => r.name === name && !routeKeyChanges.includes(r.name)) || {\n          name,\n          key: `${name}-${(0, _nanoidNonSecure.nanoid)()}`,\n          params: routeParamList[name]\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(it => it.type !== 'route' || routes.find(r => r.key === it.key));\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n        return {\n          ...state,\n          history,\n          routeNames,\n          routes,\n          index\n        };\n      },\n      getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(r => r.key === key);\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList,\n          routeGetIdList = _ref5.routeGetIdList;\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n          case 'NAVIGATE_DEPRECATED':\n            {\n              var index = state.routes.findIndex(route => route.name === action.payload.name);\n              if (index === -1) {\n                return null;\n              }\n              var updatedState = changeIndex({\n                ...state,\n                routes: state.routes.map(route => {\n                  if (route.name !== action.payload.name) {\n                    return route;\n                  }\n                  var getId = routeGetIdList[route.name];\n                  var currentId = getId?.({\n                    params: route.params\n                  });\n                  var nextId = getId?.({\n                    params: action.payload.params\n                  });\n                  var key = currentId === nextId ? route.key : `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`;\n                  var params;\n                  if ((action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED') && action.payload.merge && currentId === nextId) {\n                    params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params\n                    } : route.params;\n                  } else {\n                    params = routeParamList[route.name] !== undefined ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params\n                    } : action.payload.params;\n                  }\n                  var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                  return params !== route.params || path !== route.path ? {\n                    ...route,\n                    key,\n                    path,\n                    params\n                  } : route;\n                })\n              }, index, backBehavior, initialRouteName);\n              return {\n                ...updatedState,\n                preloadedRouteKeys: updatedState.preloadedRouteKeys.filter(key => key !== state.routes[updatedState.index].key)\n              };\n            }\n          case 'SET_PARAMS':\n          case 'REPLACE_PARAMS':\n            {\n              var nextState = _BaseRouterJs.BaseRouter.getStateForAction(state, action);\n              if (nextState !== null) {\n                var _index = nextState.index;\n                if (_index != null) {\n                  var focusedRoute = nextState.routes[_index];\n                  var historyItemIndex = state.history.findLastIndex(item => item.key === focusedRoute.key);\n                  var updatedHistory = state.history;\n                  if (historyItemIndex !== -1) {\n                    updatedHistory = [...state.history];\n                    updatedHistory[historyItemIndex] = {\n                      ...updatedHistory[historyItemIndex],\n                      params: focusedRoute.params\n                    };\n                  }\n                  return {\n                    ...nextState,\n                    history: updatedHistory\n                  };\n                }\n              }\n              return nextState;\n            }\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n              var previousHistoryItem = state.history[state.history.length - 2];\n              var previousKey = previousHistoryItem?.key;\n              var _index2 = state.routes.findLastIndex(route => route.key === previousKey);\n              if (_index2 === -1) {\n                return null;\n              }\n              var routes = state.routes;\n              if (backBehavior === 'fullHistory' && routes[_index2].params !== previousHistoryItem.params) {\n                routes = [...state.routes];\n                routes[_index2] = {\n                  ...routes[_index2],\n                  params: previousHistoryItem.params\n                };\n              }\n              return {\n                ...state,\n                routes,\n                preloadedRouteKeys: state.preloadedRouteKeys.filter(key => key !== state.routes[_index2].key),\n                history: state.history.slice(0, -1),\n                index: _index2\n              };\n            }\n          case 'PRELOAD':\n            {\n              var routeIndex = state.routes.findIndex(route => route.name === action.payload.name);\n              if (routeIndex === -1) {\n                return null;\n              }\n              var route = state.routes[routeIndex];\n              var getId = routeGetIdList[route.name];\n              var currentId = getId?.({\n                params: route.params\n              });\n              var nextId = getId?.({\n                params: action.payload.params\n              });\n              var key = currentId === nextId ? route.key : `${route.name}-${(0, _nanoidNonSecure.nanoid)()}`;\n              var params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...action.payload.params\n              } : undefined;\n              var newRoute = params !== route.params ? {\n                ...route,\n                key,\n                params\n              } : route;\n              return {\n                ...state,\n                preloadedRouteKeys: state.preloadedRouteKeys.filter(key => key !== route.key).concat(newRoute.key),\n                routes: state.routes.map((route, index) => index === routeIndex ? newRoute : route),\n                history: key === route.key ? state.history : state.history.filter(record => record.key !== route.key)\n              };\n            }\n          default:\n            return _BaseRouterJs.BaseRouter.getStateForAction(state, action);\n        }\n      },\n      actionCreators: TabActions\n    };\n    return router;\n  }\n});","lineCount":327,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"TabActions"],[10,23,6,0],[11,4,6,0],[12,2,6,0],[13,2,87,0,"exports"],[13,9,87,0],[13,10,87,0,"TabRouter"],[13,19,87,0],[13,22,87,0,"TabRouter"],[13,31,87,0],[14,2,3,0],[14,6,3,0,"_nanoidNonSecure"],[14,22,3,0],[14,25,3,0,"require"],[14,32,3,0],[14,33,3,0,"_dependencyMap"],[14,47,3,0],[15,2,4,0],[15,6,4,0,"_BaseRouterJs"],[15,19,4,0],[15,22,4,0,"require"],[15,29,4,0],[15,30,4,0,"_dependencyMap"],[15,44,4,0],[16,2,5,0],[16,6,5,6,"TYPE_ROUTE"],[16,16,5,16],[16,19,5,19],[16,26,5,26],[17,2,6,7],[17,6,6,13,"TabActions"],[17,16,6,23],[17,19,6,26],[18,4,7,2,"jumpTo"],[18,10,7,8,"jumpTo"],[18,11,7,9,"name"],[18,15,7,13],[18,17,7,15,"params"],[18,23,7,21],[18,25,7,23],[19,6,8,4],[19,13,8,11],[20,8,9,6,"type"],[20,12,9,10],[20,14,9,12],[20,23,9,21],[21,8,10,6,"payload"],[21,15,10,13],[21,17,10,15],[22,10,11,8,"name"],[22,14,11,12],[23,10,12,8,"params"],[24,8,13,6],[25,6,14,4],[25,7,14,5],[26,4,15,2],[27,2,16,0],[27,3,16,1],[28,2,17,0],[28,6,17,6,"getRouteHistory"],[28,21,17,21],[28,24,17,24,"getRouteHistory"],[28,25,17,25,"routes"],[28,31,17,31],[28,33,17,33,"index"],[28,38,17,38],[28,40,17,40,"backBehavior"],[28,52,17,52],[28,54,17,54,"initialRouteName"],[28,70,17,70],[28,75,17,75],[29,4,18,2],[29,8,18,8,"history"],[29,15,18,15],[29,18,18,18],[29,19,18,19],[30,6,19,4,"type"],[30,10,19,8],[30,12,19,10,"TYPE_ROUTE"],[30,22,19,20],[31,6,20,4,"key"],[31,9,20,7],[31,11,20,9,"routes"],[31,17,20,15],[31,18,20,16,"index"],[31,23,20,21],[31,24,20,22],[31,25,20,23,"key"],[32,4,21,2],[32,5,21,3],[32,6,21,4],[33,4,22,2],[33,8,22,6,"initialRouteIndex"],[33,25,22,23],[34,4,23,2],[34,12,23,10,"backBehavior"],[34,24,23,22],[35,6,24,4],[35,11,24,9],[35,18,24,16],[36,8,25,6],[36,13,25,11],[36,17,25,15,"i"],[36,18,25,16],[36,21,25,19,"index"],[36,26,25,24],[36,28,25,26,"i"],[36,29,25,27],[36,32,25,30],[36,33,25,31],[36,35,25,33,"i"],[36,36,25,34],[36,38,25,36],[36,40,25,38],[37,10,26,8,"history"],[37,17,26,15],[37,18,26,16,"unshift"],[37,25,26,23],[37,26,26,24],[38,12,27,10,"type"],[38,16,27,14],[38,18,27,16,"TYPE_ROUTE"],[38,28,27,26],[39,12,28,10,"key"],[39,15,28,13],[39,17,28,15,"routes"],[39,23,28,21],[39,24,28,22,"i"],[39,25,28,23],[39,28,28,26],[39,29,28,27],[39,30,28,28],[39,31,28,29,"key"],[40,10,29,8],[40,11,29,9],[40,12,29,10],[41,8,30,6],[42,8,31,6],[43,6,32,4],[43,11,32,9],[43,23,32,21],[44,8,33,6],[44,12,33,10,"index"],[44,17,33,15],[44,22,33,20],[44,23,33,21],[44,25,33,23],[45,10,34,8,"history"],[45,17,34,15],[45,18,34,16,"unshift"],[45,25,34,23],[45,26,34,24],[46,12,35,10,"type"],[46,16,35,14],[46,18,35,16,"TYPE_ROUTE"],[46,28,35,26],[47,12,36,10,"key"],[47,15,36,13],[47,17,36,15,"routes"],[47,23,36,21],[47,24,36,22],[47,25,36,23],[47,26,36,24],[47,27,36,25,"key"],[48,10,37,8],[48,11,37,9],[48,12,37,10],[49,8,38,6],[50,8,39,6],[51,6,40,4],[51,11,40,9],[51,25,40,23],[52,8,41,6,"initialRouteIndex"],[52,25,41,23],[52,28,41,26,"routes"],[52,34,41,32],[52,35,41,33,"findIndex"],[52,44,41,42],[52,45,41,43,"route"],[52,50,41,48],[52,54,41,52,"route"],[52,59,41,57],[52,60,41,58,"name"],[52,64,41,62],[52,69,41,67,"initialRouteName"],[52,85,41,83],[52,86,41,84],[53,8,42,6,"initialRouteIndex"],[53,25,42,23],[53,28,42,26,"initialRouteIndex"],[53,45,42,43],[53,50,42,48],[53,51,42,49],[53,52,42,50],[53,55,42,53],[53,56,42,54],[53,59,42,57,"initialRouteIndex"],[53,76,42,74],[54,8,43,6],[54,12,43,10,"index"],[54,17,43,15],[54,22,43,20,"initialRouteIndex"],[54,39,43,37],[54,41,43,39],[55,10,44,8,"history"],[55,17,44,15],[55,18,44,16,"unshift"],[55,25,44,23],[55,26,44,24],[56,12,45,10,"type"],[56,16,45,14],[56,18,45,16,"TYPE_ROUTE"],[56,28,45,26],[57,12,46,10,"key"],[57,15,46,13],[57,17,46,15,"routes"],[57,23,46,21],[57,24,46,22,"initialRouteIndex"],[57,41,46,39],[57,42,46,40],[57,43,46,41,"key"],[58,10,47,8],[58,11,47,9],[58,12,47,10],[59,8,48,6],[60,8,49,6],[61,6,50,4],[61,11,50,9],[61,20,50,18],[62,6,51,4],[62,11,51,9],[62,24,51,22],[63,8,53,6],[64,4,54,2],[65,4,55,2],[65,11,55,9,"history"],[65,18,55,16],[66,2,56,0],[66,3,56,1],[67,2,57,0],[67,6,57,6,"changeIndex"],[67,17,57,17],[67,20,57,20,"changeIndex"],[67,21,57,21,"state"],[67,26,57,26],[67,28,57,28,"index"],[67,33,57,33],[67,35,57,35,"backBehavior"],[67,47,57,47],[67,49,57,49,"initialRouteName"],[67,65,57,65],[67,70,57,70],[68,4,58,2],[68,8,58,6,"history"],[68,15,58,13],[68,18,58,16,"state"],[68,23,58,21],[68,24,58,22,"history"],[68,31,58,29],[69,4,59,2],[69,8,59,6,"backBehavior"],[69,20,59,18],[69,25,59,23],[69,34,59,32],[69,38,59,36,"backBehavior"],[69,50,59,48],[69,55,59,53],[69,68,59,66],[69,70,59,68],[70,6,60,4],[70,10,60,10,"currentRoute"],[70,22,60,22],[70,25,60,25,"state"],[70,30,60,30],[70,31,60,31,"routes"],[70,37,60,37],[70,38,60,38,"index"],[70,43,60,43],[70,44,60,44],[71,6,61,4],[71,10,61,8,"backBehavior"],[71,22,61,20],[71,27,61,25],[71,36,61,34],[71,38,61,36],[72,8,63,6,"history"],[72,15,63,13],[72,18,63,16,"history"],[72,25,63,23],[72,26,63,24,"filter"],[72,32,63,30],[72,33,63,31,"it"],[72,35,63,33],[72,39,63,37,"it"],[72,41,63,39],[72,42,63,40,"type"],[72,46,63,44],[72,51,63,49],[72,58,63,56],[72,61,63,59,"it"],[72,63,63,61],[72,64,63,62,"key"],[72,67,63,65],[72,72,63,70,"currentRoute"],[72,84,63,82],[72,85,63,83,"key"],[72,88,63,86],[72,91,63,89],[72,96,63,94],[72,97,63,95],[73,6,64,4],[73,7,64,5],[73,13,64,11],[73,17,64,15,"backBehavior"],[73,29,64,27],[73,34,64,32],[73,47,64,45],[73,49,64,47],[74,8,65,6],[74,12,65,12,"lastHistoryRouteItemIndex"],[74,37,65,37],[74,40,65,40,"history"],[74,47,65,47],[74,48,65,48,"findLastIndex"],[74,61,65,61],[74,62,65,62,"item"],[74,66,65,66],[74,70,65,70,"item"],[74,74,65,74],[74,75,65,75,"type"],[74,79,65,79],[74,84,65,84],[74,91,65,91],[74,92,65,92],[75,8,66,6],[75,12,66,10,"currentRoute"],[75,24,66,22],[75,25,66,23,"key"],[75,28,66,26],[75,33,66,31,"history"],[75,40,66,38],[75,41,66,39,"lastHistoryRouteItemIndex"],[75,66,66,64],[75,67,66,65],[75,69,66,67,"key"],[75,72,66,70],[75,74,66,72],[76,10,70,8,"history"],[76,17,70,15],[76,20,70,18],[76,21,70,19],[76,24,70,22,"history"],[76,31,70,29],[76,32,70,30,"slice"],[76,37,70,35],[76,38,70,36],[76,39,70,37],[76,41,70,39,"lastHistoryRouteItemIndex"],[76,66,70,64],[76,67,70,65],[76,69,70,67],[76,72,70,70,"history"],[76,79,70,77],[76,80,70,78,"slice"],[76,85,70,83],[76,86,70,84,"lastHistoryRouteItemIndex"],[76,111,70,109],[76,114,70,112],[76,115,70,113],[76,116,70,114],[76,117,70,115],[77,8,71,6],[78,6,72,4],[79,6,73,4,"history"],[79,13,73,11],[79,16,73,14,"history"],[79,23,73,21],[79,24,73,22,"concat"],[79,30,73,28],[79,31,73,29],[80,8,74,6,"type"],[80,12,74,10],[80,14,74,12,"TYPE_ROUTE"],[80,24,74,22],[81,8,75,6,"key"],[81,11,75,9],[81,13,75,11,"currentRoute"],[81,25,75,23],[81,26,75,24,"key"],[81,29,75,27],[82,8,76,6,"params"],[82,14,76,12],[82,16,76,14,"backBehavior"],[82,28,76,26],[82,33,76,31],[82,46,76,44],[82,49,76,47,"currentRoute"],[82,61,76,59],[82,62,76,60,"params"],[82,68,76,66],[82,71,76,69,"undefined"],[83,6,77,4],[83,7,77,5],[83,8,77,6],[84,4,78,2],[84,5,78,3],[84,11,78,9],[85,6,79,4,"history"],[85,13,79,11],[85,16,79,14,"getRouteHistory"],[85,31,79,29],[85,32,79,30,"state"],[85,37,79,35],[85,38,79,36,"routes"],[85,44,79,42],[85,46,79,44,"index"],[85,51,79,49],[85,53,79,51,"backBehavior"],[85,65,79,63],[85,67,79,65,"initialRouteName"],[85,83,79,81],[85,84,79,82],[86,4,80,2],[87,4,81,2],[87,11,81,9],[88,6,82,4],[88,9,82,7,"state"],[88,14,82,12],[89,6,83,4,"index"],[89,11,83,9],[90,6,84,4,"history"],[91,4,85,2],[91,5,85,3],[92,2,86,0],[92,3,86,1],[93,2,87,7],[93,11,87,16,"TabRouter"],[93,20,87,25,"TabRouter"],[93,21,87,25,"_ref"],[93,25,87,25],[93,27,90,3],[94,4,90,3],[94,8,88,2,"initialRouteName"],[94,24,88,18],[94,27,88,18,"_ref"],[94,31,88,18],[94,32,88,2,"initialRouteName"],[94,48,88,18],[95,6,88,18,"_ref$backBehavior"],[95,23,88,18],[95,26,88,18,"_ref"],[95,30,88,18],[95,31,89,2,"backBehavior"],[95,43,89,14],[96,6,89,2,"backBehavior"],[96,18,89,14],[96,21,89,14,"_ref$backBehavior"],[96,38,89,14],[96,52,89,17],[96,64,89,29],[96,67,89,29,"_ref$backBehavior"],[96,84,89,29],[97,4,91,2],[97,8,91,8,"router"],[97,14,91,14],[97,17,91,17],[98,6,92,4],[98,9,92,7,"BaseRouter"],[98,22,92,17],[98,23,92,17,"BaseRouter"],[98,33,92,17],[99,6,93,4,"type"],[99,10,93,8],[99,12,93,10],[99,17,93,15],[100,6,94,4,"getInitialState"],[100,21,94,19,"getInitialState"],[100,22,94,19,"_ref2"],[100,27,94,19],[100,29,97,7],[101,8,97,7],[101,12,95,6,"routeNames"],[101,22,95,16],[101,25,95,16,"_ref2"],[101,30,95,16],[101,31,95,6,"routeNames"],[101,41,95,16],[102,10,96,6,"routeParamList"],[102,24,96,20],[102,27,96,20,"_ref2"],[102,32,96,20],[102,33,96,6,"routeParamList"],[102,47,96,20],[103,8,98,6],[103,12,98,12,"index"],[103,17,98,17],[103,20,98,20,"initialRouteName"],[103,36,98,36],[103,41,98,41,"undefined"],[103,50,98,50],[103,54,98,54,"routeNames"],[103,64,98,64],[103,65,98,65,"includes"],[103,73,98,73],[103,74,98,74,"initialRouteName"],[103,90,98,90],[103,91,98,91],[103,94,98,94,"routeNames"],[103,104,98,104],[103,105,98,105,"indexOf"],[103,112,98,112],[103,113,98,113,"initialRouteName"],[103,129,98,129],[103,130,98,130],[103,133,98,133],[103,134,98,134],[104,8,99,6],[104,12,99,12,"routes"],[104,18,99,18],[104,21,99,21,"routeNames"],[104,31,99,31],[104,32,99,32,"map"],[104,35,99,35],[104,36,99,36,"name"],[104,40,99,40],[104,45,99,45],[105,10,100,8,"name"],[105,14,100,12],[106,10,101,8,"key"],[106,13,101,11],[106,15,101,13],[106,18,101,16,"name"],[106,22,101,20],[106,26,101,24],[106,30,101,24,"nanoid"],[106,46,101,30],[106,47,101,30,"nanoid"],[106,53,101,30],[106,55,101,31],[106,56,101,32],[106,58,101,34],[107,10,102,8,"params"],[107,16,102,14],[107,18,102,16,"routeParamList"],[107,32,102,30],[107,33,102,31,"name"],[107,37,102,35],[108,8,103,6],[108,9,103,7],[108,10,103,8],[108,11,103,9],[109,8,104,6],[109,12,104,12,"history"],[109,19,104,19],[109,22,104,22,"getRouteHistory"],[109,37,104,37],[109,38,104,38,"routes"],[109,44,104,44],[109,46,104,46,"index"],[109,51,104,51],[109,53,104,53,"backBehavior"],[109,65,104,65],[109,67,104,67,"initialRouteName"],[109,83,104,83],[109,84,104,84],[110,8,105,6],[110,15,105,13],[111,10,106,8,"stale"],[111,15,106,13],[111,17,106,15],[111,22,106,20],[112,10,107,8,"type"],[112,14,107,12],[112,16,107,14],[112,21,107,19],[113,10,108,8,"key"],[113,13,108,11],[113,15,108,13],[113,22,108,20],[113,26,108,20,"nanoid"],[113,42,108,26],[113,43,108,26,"nanoid"],[113,49,108,26],[113,51,108,27],[113,52,108,28],[113,54,108,30],[114,10,109,8,"index"],[114,15,109,13],[115,10,110,8,"routeNames"],[115,20,110,18],[116,10,111,8,"history"],[116,17,111,15],[117,10,112,8,"routes"],[117,16,112,14],[118,10,113,8,"preloadedRouteKeys"],[118,28,113,26],[118,30,113,28],[119,8,114,6],[119,9,114,7],[120,6,115,4],[120,7,115,5],[121,6,116,4,"getRehydratedState"],[121,24,116,22,"getRehydratedState"],[121,25,116,23,"partialState"],[121,37,116,35],[121,39,116,35,"_ref3"],[121,44,116,35],[121,46,119,7],[122,8,119,7],[122,12,117,6,"routeNames"],[122,22,117,16],[122,25,117,16,"_ref3"],[122,30,117,16],[122,31,117,6,"routeNames"],[122,41,117,16],[123,10,118,6,"routeParamList"],[123,24,118,20],[123,27,118,20,"_ref3"],[123,32,118,20],[123,33,118,6,"routeParamList"],[123,47,118,20],[124,8,120,6],[124,12,120,12,"state"],[124,17,120,17],[124,20,120,20,"partialState"],[124,32,120,32],[125,8,121,6],[125,12,121,10,"state"],[125,17,121,15],[125,18,121,16,"stale"],[125,23,121,21],[125,28,121,26],[125,33,121,31],[125,35,121,33],[126,10,122,8],[126,17,122,15,"state"],[126,22,122,20],[127,8,123,6],[128,8,124,6],[128,12,124,12,"routes"],[128,18,124,18],[128,21,124,21,"routeNames"],[128,31,124,31],[128,32,124,32,"map"],[128,35,124,35],[128,36,124,36,"name"],[128,40,124,40],[128,44,124,44],[129,10,125,8],[129,14,125,14,"route"],[129,19,125,19],[129,22,125,22,"state"],[129,27,125,27],[129,28,125,28,"routes"],[129,34,125,34],[129,35,125,35,"find"],[129,39,125,39],[129,40,125,40,"r"],[129,41,125,41],[129,45,125,45,"r"],[129,46,125,46],[129,47,125,47,"name"],[129,51,125,51],[129,56,125,56,"name"],[129,60,125,60],[129,61,125,61],[130,10,126,8],[130,17,126,15],[131,12,127,10],[131,15,127,13,"route"],[131,20,127,18],[132,12,128,10,"name"],[132,16,128,14],[133,12,129,10,"key"],[133,15,129,13],[133,17,129,15,"route"],[133,22,129,20],[133,26,129,24,"route"],[133,31,129,29],[133,32,129,30,"name"],[133,36,129,34],[133,41,129,39,"name"],[133,45,129,43],[133,49,129,47,"route"],[133,54,129,52],[133,55,129,53,"key"],[133,58,129,56],[133,61,129,59,"route"],[133,66,129,64],[133,67,129,65,"key"],[133,70,129,68],[133,73,129,71],[133,76,129,74,"name"],[133,80,129,78],[133,84,129,82],[133,88,129,82,"nanoid"],[133,104,129,88],[133,105,129,88,"nanoid"],[133,111,129,88],[133,113,129,89],[133,114,129,90],[133,116,129,92],[134,12,130,10,"params"],[134,18,130,16],[134,20,130,18,"routeParamList"],[134,34,130,32],[134,35,130,33,"name"],[134,39,130,37],[134,40,130,38],[134,45,130,43,"undefined"],[134,54,130,52],[134,57,130,55],[135,14,131,12],[135,17,131,15,"routeParamList"],[135,31,131,29],[135,32,131,30,"name"],[135,36,131,34],[135,37,131,35],[136,14,132,12],[136,18,132,16,"route"],[136,23,132,21],[136,26,132,24,"route"],[136,31,132,29],[136,32,132,30,"params"],[136,38,132,36],[136,41,132,39,"undefined"],[136,50,132,48],[137,12,133,10],[137,13,133,11],[137,16,133,14,"route"],[137,21,133,19],[137,24,133,22,"route"],[137,29,133,27],[137,30,133,28,"params"],[137,36,133,34],[137,39,133,37,"undefined"],[138,10,134,8],[138,11,134,9],[139,8,135,6],[139,9,135,7],[139,10,135,8],[140,8,136,6],[140,12,136,12,"index"],[140,17,136,17],[140,20,136,20,"Math"],[140,24,136,24],[140,25,136,25,"min"],[140,28,136,28],[140,29,136,29,"Math"],[140,33,136,33],[140,34,136,34,"max"],[140,37,136,37],[140,38,136,38,"routeNames"],[140,48,136,48],[140,49,136,49,"indexOf"],[140,56,136,56],[140,57,136,57,"state"],[140,62,136,62],[140,63,136,63,"routes"],[140,69,136,69],[140,70,136,70,"state"],[140,75,136,75],[140,77,136,77,"index"],[140,82,136,82],[140,86,136,86],[140,87,136,87],[140,88,136,88],[140,90,136,90,"name"],[140,94,136,94],[140,95,136,95],[140,97,136,97],[140,98,136,98],[140,99,136,99],[140,101,136,101,"routes"],[140,107,136,107],[140,108,136,108,"length"],[140,114,136,114],[140,117,136,117],[140,118,136,118],[140,119,136,119],[141,8,137,6],[141,12,137,12,"routeKeys"],[141,21,137,21],[141,24,137,24,"routes"],[141,30,137,30],[141,31,137,31,"map"],[141,34,137,34],[141,35,137,35,"route"],[141,40,137,40],[141,44,137,44,"route"],[141,49,137,49],[141,50,137,50,"key"],[141,53,137,53],[141,54,137,54],[142,8,138,6],[142,12,138,12,"history"],[142,19,138,19],[142,22,138,22,"state"],[142,27,138,27],[142,28,138,28,"history"],[142,35,138,35],[142,37,138,37,"filter"],[142,43,138,43],[142,44,138,44,"it"],[142,46,138,46],[142,50,138,50,"routeKeys"],[142,59,138,59],[142,60,138,60,"includes"],[142,68,138,68],[142,69,138,69,"it"],[142,71,138,71],[142,72,138,72,"key"],[142,75,138,75],[142,76,138,76],[142,77,138,77],[142,81,138,81],[142,83,138,83],[143,8,139,6],[143,15,139,13,"changeIndex"],[143,26,139,24],[143,27,139,25],[144,10,140,8,"stale"],[144,15,140,13],[144,17,140,15],[144,22,140,20],[145,10,141,8,"type"],[145,14,141,12],[145,16,141,14],[145,21,141,19],[146,10,142,8,"key"],[146,13,142,11],[146,15,142,13],[146,22,142,20],[146,26,142,20,"nanoid"],[146,42,142,26],[146,43,142,26,"nanoid"],[146,49,142,26],[146,51,142,27],[146,52,142,28],[146,54,142,30],[147,10,143,8,"index"],[147,15,143,13],[148,10,144,8,"routeNames"],[148,20,144,18],[149,10,145,8,"history"],[149,17,145,15],[150,10,146,8,"routes"],[150,16,146,14],[151,10,147,8,"preloadedRouteKeys"],[151,28,147,26],[151,30,147,28,"state"],[151,35,147,33],[151,36,147,34,"preloadedRouteKeys"],[151,54,147,52],[151,56,147,54,"filter"],[151,62,147,60],[151,63,147,61,"key"],[151,66,147,64],[151,70,147,68,"routeKeys"],[151,79,147,77],[151,80,147,78,"includes"],[151,88,147,86],[151,89,147,87,"key"],[151,92,147,90],[151,93,147,91],[151,94,147,92],[151,98,147,96],[152,8,148,6],[152,9,148,7],[152,11,148,9,"index"],[152,16,148,14],[152,18,148,16,"backBehavior"],[152,30,148,28],[152,32,148,30,"initialRouteName"],[152,48,148,46],[152,49,148,47],[153,6,149,4],[153,7,149,5],[154,6,150,4,"getStateForRouteNamesChange"],[154,33,150,31,"getStateForRouteNamesChange"],[154,34,150,32,"state"],[154,39,150,37],[154,41,150,37,"_ref4"],[154,46,150,37],[154,48,154,7],[155,8,154,7],[155,12,151,6,"routeNames"],[155,22,151,16],[155,25,151,16,"_ref4"],[155,30,151,16],[155,31,151,6,"routeNames"],[155,41,151,16],[156,10,152,6,"routeParamList"],[156,24,152,20],[156,27,152,20,"_ref4"],[156,32,152,20],[156,33,152,6,"routeParamList"],[156,47,152,20],[157,10,153,6,"routeKeyChanges"],[157,25,153,21],[157,28,153,21,"_ref4"],[157,33,153,21],[157,34,153,6,"routeKeyChanges"],[157,49,153,21],[158,8,155,6],[158,12,155,12,"routes"],[158,18,155,18],[158,21,155,21,"routeNames"],[158,31,155,31],[158,32,155,32,"map"],[158,35,155,35],[158,36,155,36,"name"],[158,40,155,40],[158,44,155,44,"state"],[158,49,155,49],[158,50,155,50,"routes"],[158,56,155,56],[158,57,155,57,"find"],[158,61,155,61],[158,62,155,62,"r"],[158,63,155,63],[158,67,155,67,"r"],[158,68,155,68],[158,69,155,69,"name"],[158,73,155,73],[158,78,155,78,"name"],[158,82,155,82],[158,86,155,86],[158,87,155,87,"routeKeyChanges"],[158,102,155,102],[158,103,155,103,"includes"],[158,111,155,111],[158,112,155,112,"r"],[158,113,155,113],[158,114,155,114,"name"],[158,118,155,118],[158,119,155,119],[158,120,155,120],[158,124,155,124],[159,10,156,8,"name"],[159,14,156,12],[160,10,157,8,"key"],[160,13,157,11],[160,15,157,13],[160,18,157,16,"name"],[160,22,157,20],[160,26,157,24],[160,30,157,24,"nanoid"],[160,46,157,30],[160,47,157,30,"nanoid"],[160,53,157,30],[160,55,157,31],[160,56,157,32],[160,58,157,34],[161,10,158,8,"params"],[161,16,158,14],[161,18,158,16,"routeParamList"],[161,32,158,30],[161,33,158,31,"name"],[161,37,158,35],[162,8,159,6],[162,9,159,7],[162,10,159,8],[163,8,160,6],[163,12,160,12,"index"],[163,17,160,17],[163,20,160,20,"Math"],[163,24,160,24],[163,25,160,25,"max"],[163,28,160,28],[163,29,160,29],[163,30,160,30],[163,32,160,32,"routeNames"],[163,42,160,42],[163,43,160,43,"indexOf"],[163,50,160,50],[163,51,160,51,"state"],[163,56,160,56],[163,57,160,57,"routes"],[163,63,160,63],[163,64,160,64,"state"],[163,69,160,69],[163,70,160,70,"index"],[163,75,160,75],[163,76,160,76],[163,77,160,77,"name"],[163,81,160,81],[163,82,160,82],[163,83,160,83],[164,8,161,6],[164,12,161,10,"history"],[164,19,161,17],[164,22,161,20,"state"],[164,27,161,25],[164,28,161,26,"history"],[164,35,161,33],[164,36,161,34,"filter"],[164,42,161,40],[164,43,163,6,"it"],[164,45,163,8],[164,49,163,12,"it"],[164,51,163,14],[164,52,163,15,"type"],[164,56,163,19],[164,61,163,24],[164,68,163,31],[164,72,163,35,"routes"],[164,78,163,41],[164,79,163,42,"find"],[164,83,163,46],[164,84,163,47,"r"],[164,85,163,48],[164,89,163,52,"r"],[164,90,163,53],[164,91,163,54,"key"],[164,94,163,57],[164,99,163,62,"it"],[164,101,163,64],[164,102,163,65,"key"],[164,105,163,68],[164,106,163,69],[164,107,163,70],[165,8,164,6],[165,12,164,10],[165,13,164,11,"history"],[165,20,164,18],[165,21,164,19,"length"],[165,27,164,25],[165,29,164,27],[166,10,165,8,"history"],[166,17,165,15],[166,20,165,18,"getRouteHistory"],[166,35,165,33],[166,36,165,34,"routes"],[166,42,165,40],[166,44,165,42,"index"],[166,49,165,47],[166,51,165,49,"backBehavior"],[166,63,165,61],[166,65,165,63,"initialRouteName"],[166,81,165,79],[166,82,165,80],[167,8,166,6],[168,8,167,6],[168,15,167,13],[169,10,168,8],[169,13,168,11,"state"],[169,18,168,16],[170,10,169,8,"history"],[170,17,169,15],[171,10,170,8,"routeNames"],[171,20,170,18],[172,10,171,8,"routes"],[172,16,171,14],[173,10,172,8,"index"],[174,8,173,6],[174,9,173,7],[175,6,174,4],[175,7,174,5],[176,6,175,4,"getStateForRouteFocus"],[176,27,175,25,"getStateForRouteFocus"],[176,28,175,26,"state"],[176,33,175,31],[176,35,175,33,"key"],[176,38,175,36],[176,40,175,38],[177,8,176,6],[177,12,176,12,"index"],[177,17,176,17],[177,20,176,20,"state"],[177,25,176,25],[177,26,176,26,"routes"],[177,32,176,32],[177,33,176,33,"findIndex"],[177,42,176,42],[177,43,176,43,"r"],[177,44,176,44],[177,48,176,48,"r"],[177,49,176,49],[177,50,176,50,"key"],[177,53,176,53],[177,58,176,58,"key"],[177,61,176,61],[177,62,176,62],[178,8,177,6],[178,12,177,10,"index"],[178,17,177,15],[178,22,177,20],[178,23,177,21],[178,24,177,22],[178,28,177,26,"index"],[178,33,177,31],[178,38,177,36,"state"],[178,43,177,41],[178,44,177,42,"index"],[178,49,177,47],[178,51,177,49],[179,10,178,8],[179,17,178,15,"state"],[179,22,178,20],[180,8,179,6],[181,8,180,6],[181,15,180,13,"changeIndex"],[181,26,180,24],[181,27,180,25,"state"],[181,32,180,30],[181,34,180,32,"index"],[181,39,180,37],[181,41,180,39,"backBehavior"],[181,53,180,51],[181,55,180,53,"initialRouteName"],[181,71,180,69],[181,72,180,70],[182,6,181,4],[182,7,181,5],[183,6,182,4,"getStateForAction"],[183,23,182,21,"getStateForAction"],[183,24,182,22,"state"],[183,29,182,27],[183,31,182,29,"action"],[183,37,182,35],[183,39,182,35,"_ref5"],[183,44,182,35],[183,46,185,7],[184,8,185,7],[184,12,183,6,"routeParamList"],[184,26,183,20],[184,29,183,20,"_ref5"],[184,34,183,20],[184,35,183,6,"routeParamList"],[184,49,183,20],[185,10,184,6,"routeGetIdList"],[185,24,184,20],[185,27,184,20,"_ref5"],[185,32,184,20],[185,33,184,6,"routeGetIdList"],[185,47,184,20],[186,8,186,6],[186,16,186,14,"action"],[186,22,186,20],[186,23,186,21,"type"],[186,27,186,25],[187,10,187,8],[187,15,187,13],[187,24,187,22],[188,10,188,8],[188,15,188,13],[188,25,188,23],[189,10,189,8],[189,15,189,13],[189,36,189,34],[190,12,190,10],[191,14,191,12],[191,18,191,18,"index"],[191,23,191,23],[191,26,191,26,"state"],[191,31,191,31],[191,32,191,32,"routes"],[191,38,191,38],[191,39,191,39,"findIndex"],[191,48,191,48],[191,49,191,49,"route"],[191,54,191,54],[191,58,191,58,"route"],[191,63,191,63],[191,64,191,64,"name"],[191,68,191,68],[191,73,191,73,"action"],[191,79,191,79],[191,80,191,80,"payload"],[191,87,191,87],[191,88,191,88,"name"],[191,92,191,92],[191,93,191,93],[192,14,192,12],[192,18,192,16,"index"],[192,23,192,21],[192,28,192,26],[192,29,192,27],[192,30,192,28],[192,32,192,30],[193,16,193,14],[193,23,193,21],[193,27,193,25],[194,14,194,12],[195,14,195,12],[195,18,195,18,"updatedState"],[195,30,195,30],[195,33,195,33,"changeIndex"],[195,44,195,44],[195,45,195,45],[196,16,196,14],[196,19,196,17,"state"],[196,24,196,22],[197,16,197,14,"routes"],[197,22,197,20],[197,24,197,22,"state"],[197,29,197,27],[197,30,197,28,"routes"],[197,36,197,34],[197,37,197,35,"map"],[197,40,197,38],[197,41,197,39,"route"],[197,46,197,44],[197,50,197,48],[198,18,198,16],[198,22,198,20,"route"],[198,27,198,25],[198,28,198,26,"name"],[198,32,198,30],[198,37,198,35,"action"],[198,43,198,41],[198,44,198,42,"payload"],[198,51,198,49],[198,52,198,50,"name"],[198,56,198,54],[198,58,198,56],[199,20,199,18],[199,27,199,25,"route"],[199,32,199,30],[200,18,200,16],[201,18,201,16],[201,22,201,22,"getId"],[201,27,201,27],[201,30,201,30,"routeGetIdList"],[201,44,201,44],[201,45,201,45,"route"],[201,50,201,50],[201,51,201,51,"name"],[201,55,201,55],[201,56,201,56],[202,18,202,16],[202,22,202,22,"currentId"],[202,31,202,31],[202,34,202,34,"getId"],[202,39,202,39],[202,42,202,42],[203,20,203,18,"params"],[203,26,203,24],[203,28,203,26,"route"],[203,33,203,31],[203,34,203,32,"params"],[204,18,204,16],[204,19,204,17],[204,20,204,18],[205,18,205,16],[205,22,205,22,"nextId"],[205,28,205,28],[205,31,205,31,"getId"],[205,36,205,36],[205,39,205,39],[206,20,206,18,"params"],[206,26,206,24],[206,28,206,26,"action"],[206,34,206,32],[206,35,206,33,"payload"],[206,42,206,40],[206,43,206,41,"params"],[207,18,207,16],[207,19,207,17],[207,20,207,18],[208,18,208,16],[208,22,208,22,"key"],[208,25,208,25],[208,28,208,28,"currentId"],[208,37,208,37],[208,42,208,42,"nextId"],[208,48,208,48],[208,51,208,51,"route"],[208,56,208,56],[208,57,208,57,"key"],[208,60,208,60],[208,63,208,63],[208,66,208,66,"route"],[208,71,208,71],[208,72,208,72,"name"],[208,76,208,76],[208,80,208,80],[208,84,208,80,"nanoid"],[208,100,208,86],[208,101,208,86,"nanoid"],[208,107,208,86],[208,109,208,87],[208,110,208,88],[208,112,208,90],[209,18,209,16],[209,22,209,20,"params"],[209,28,209,26],[210,18,210,16],[210,22,210,20],[210,23,210,21,"action"],[210,29,210,27],[210,30,210,28,"type"],[210,34,210,32],[210,39,210,37],[210,49,210,47],[210,53,210,51,"action"],[210,59,210,57],[210,60,210,58,"type"],[210,64,210,62],[210,69,210,67],[210,90,210,88],[210,95,210,93,"action"],[210,101,210,99],[210,102,210,100,"payload"],[210,109,210,107],[210,110,210,108,"merge"],[210,115,210,113],[210,119,210,117,"currentId"],[210,128,210,126],[210,133,210,131,"nextId"],[210,139,210,137],[210,141,210,139],[211,20,211,18,"params"],[211,26,211,24],[211,29,211,27,"action"],[211,35,211,33],[211,36,211,34,"payload"],[211,43,211,41],[211,44,211,42,"params"],[211,50,211,48],[211,55,211,53,"undefined"],[211,64,211,62],[211,68,211,66,"routeParamList"],[211,82,211,80],[211,83,211,81,"route"],[211,88,211,86],[211,89,211,87,"name"],[211,93,211,91],[211,94,211,92],[211,99,211,97,"undefined"],[211,108,211,106],[211,111,211,109],[212,22,212,20],[212,25,212,23,"routeParamList"],[212,39,212,37],[212,40,212,38,"route"],[212,45,212,43],[212,46,212,44,"name"],[212,50,212,48],[212,51,212,49],[213,22,213,20],[213,25,213,23,"route"],[213,30,213,28],[213,31,213,29,"params"],[213,37,213,35],[214,22,214,20],[214,25,214,23,"action"],[214,31,214,29],[214,32,214,30,"payload"],[214,39,214,37],[214,40,214,38,"params"],[215,20,215,18],[215,21,215,19],[215,24,215,22,"route"],[215,29,215,27],[215,30,215,28,"params"],[215,36,215,34],[216,18,216,16],[216,19,216,17],[216,25,216,23],[217,20,217,18,"params"],[217,26,217,24],[217,29,217,27,"routeParamList"],[217,43,217,41],[217,44,217,42,"route"],[217,49,217,47],[217,50,217,48,"name"],[217,54,217,52],[217,55,217,53],[217,60,217,58,"undefined"],[217,69,217,67],[217,72,217,70],[218,22,218,20],[218,25,218,23,"routeParamList"],[218,39,218,37],[218,40,218,38,"route"],[218,45,218,43],[218,46,218,44,"name"],[218,50,218,48],[218,51,218,49],[219,22,219,20],[219,25,219,23,"action"],[219,31,219,29],[219,32,219,30,"payload"],[219,39,219,37],[219,40,219,38,"params"],[220,20,220,18],[220,21,220,19],[220,24,220,22,"action"],[220,30,220,28],[220,31,220,29,"payload"],[220,38,220,36],[220,39,220,37,"params"],[220,45,220,43],[221,18,221,16],[222,18,222,16],[222,22,222,22,"path"],[222,26,222,26],[222,29,222,29,"action"],[222,35,222,35],[222,36,222,36,"type"],[222,40,222,40],[222,45,222,45],[222,55,222,55],[222,59,222,59,"action"],[222,65,222,65],[222,66,222,66,"payload"],[222,73,222,73],[222,74,222,74,"path"],[222,78,222,78],[222,82,222,82],[222,86,222,86],[222,89,222,89,"action"],[222,95,222,95],[222,96,222,96,"payload"],[222,103,222,103],[222,104,222,104,"path"],[222,108,222,108],[222,111,222,111,"route"],[222,116,222,116],[222,117,222,117,"path"],[222,121,222,121],[223,18,223,16],[223,25,223,23,"params"],[223,31,223,29],[223,36,223,34,"route"],[223,41,223,39],[223,42,223,40,"params"],[223,48,223,46],[223,52,223,50,"path"],[223,56,223,54],[223,61,223,59,"route"],[223,66,223,64],[223,67,223,65,"path"],[223,71,223,69],[223,74,223,72],[224,20,224,18],[224,23,224,21,"route"],[224,28,224,26],[225,20,225,18,"key"],[225,23,225,21],[226,20,226,18,"path"],[226,24,226,22],[227,20,227,18,"params"],[228,18,228,16],[228,19,228,17],[228,22,228,20,"route"],[228,27,228,25],[229,16,229,14],[229,17,229,15],[230,14,230,12],[230,15,230,13],[230,17,230,15,"index"],[230,22,230,20],[230,24,230,22,"backBehavior"],[230,36,230,34],[230,38,230,36,"initialRouteName"],[230,54,230,52],[230,55,230,53],[231,14,231,12],[231,21,231,19],[232,16,232,14],[232,19,232,17,"updatedState"],[232,31,232,29],[233,16,233,14,"preloadedRouteKeys"],[233,34,233,32],[233,36,233,34,"updatedState"],[233,48,233,46],[233,49,233,47,"preloadedRouteKeys"],[233,67,233,65],[233,68,233,66,"filter"],[233,74,233,72],[233,75,233,73,"key"],[233,78,233,76],[233,82,233,80,"key"],[233,85,233,83],[233,90,233,88,"state"],[233,95,233,93],[233,96,233,94,"routes"],[233,102,233,100],[233,103,233,101,"updatedState"],[233,115,233,113],[233,116,233,114,"index"],[233,121,233,119],[233,122,233,120],[233,123,233,121,"key"],[233,126,233,124],[234,14,234,12],[234,15,234,13],[235,12,235,10],[236,10,236,8],[236,15,236,13],[236,27,236,25],[237,10,237,8],[237,15,237,13],[237,31,237,29],[238,12,238,10],[239,14,239,12],[239,18,239,18,"nextState"],[239,27,239,27],[239,30,239,30,"BaseRouter"],[239,43,239,40],[239,44,239,40,"BaseRouter"],[239,54,239,40],[239,55,239,41,"getStateForAction"],[239,72,239,58],[239,73,239,59,"state"],[239,78,239,64],[239,80,239,66,"action"],[239,86,239,72],[239,87,239,73],[240,14,240,12],[240,18,240,16,"nextState"],[240,27,240,25],[240,32,240,30],[240,36,240,34],[240,38,240,36],[241,16,241,14],[241,20,241,20,"index"],[241,26,241,25],[241,29,241,28,"nextState"],[241,38,241,37],[241,39,241,38,"index"],[241,44,241,43],[242,16,242,14],[242,20,242,18,"index"],[242,26,242,23],[242,30,242,27],[242,34,242,31],[242,36,242,33],[243,18,243,16],[243,22,243,22,"focusedRoute"],[243,34,243,34],[243,37,243,37,"nextState"],[243,46,243,46],[243,47,243,47,"routes"],[243,53,243,53],[243,54,243,54,"index"],[243,60,243,59],[243,61,243,60],[244,18,244,16],[244,22,244,22,"historyItemIndex"],[244,38,244,38],[244,41,244,41,"state"],[244,46,244,46],[244,47,244,47,"history"],[244,54,244,54],[244,55,244,55,"findLastIndex"],[244,68,244,68],[244,69,244,69,"item"],[244,73,244,73],[244,77,244,77,"item"],[244,81,244,81],[244,82,244,82,"key"],[244,85,244,85],[244,90,244,90,"focusedRoute"],[244,102,244,102],[244,103,244,103,"key"],[244,106,244,106],[244,107,244,107],[245,18,245,16],[245,22,245,20,"updatedHistory"],[245,36,245,34],[245,39,245,37,"state"],[245,44,245,42],[245,45,245,43,"history"],[245,52,245,50],[246,18,246,16],[246,22,246,20,"historyItemIndex"],[246,38,246,36],[246,43,246,41],[246,44,246,42],[246,45,246,43],[246,47,246,45],[247,20,247,18,"updatedHistory"],[247,34,247,32],[247,37,247,35],[247,38,247,36],[247,41,247,39,"state"],[247,46,247,44],[247,47,247,45,"history"],[247,54,247,52],[247,55,247,53],[248,20,248,18,"updatedHistory"],[248,34,248,32],[248,35,248,33,"historyItemIndex"],[248,51,248,49],[248,52,248,50],[248,55,248,53],[249,22,249,20],[249,25,249,23,"updatedHistory"],[249,39,249,37],[249,40,249,38,"historyItemIndex"],[249,56,249,54],[249,57,249,55],[250,22,250,20,"params"],[250,28,250,26],[250,30,250,28,"focusedRoute"],[250,42,250,40],[250,43,250,41,"params"],[251,20,251,18],[251,21,251,19],[252,18,252,16],[253,18,253,16],[253,25,253,23],[254,20,254,18],[254,23,254,21,"nextState"],[254,32,254,30],[255,20,255,18,"history"],[255,27,255,25],[255,29,255,27,"updatedHistory"],[256,18,256,16],[256,19,256,17],[257,16,257,14],[258,14,258,12],[259,14,259,12],[259,21,259,19,"nextState"],[259,30,259,28],[260,12,260,10],[261,10,261,8],[261,15,261,13],[261,24,261,22],[262,12,262,10],[263,14,263,12],[263,18,263,16,"state"],[263,23,263,21],[263,24,263,22,"history"],[263,31,263,29],[263,32,263,30,"length"],[263,38,263,36],[263,43,263,41],[263,44,263,42],[263,46,263,44],[264,16,264,14],[264,23,264,21],[264,27,264,25],[265,14,265,12],[266,14,266,12],[266,18,266,18,"previousHistoryItem"],[266,37,266,37],[266,40,266,40,"state"],[266,45,266,45],[266,46,266,46,"history"],[266,53,266,53],[266,54,266,54,"state"],[266,59,266,59],[266,60,266,60,"history"],[266,67,266,67],[266,68,266,68,"length"],[266,74,266,74],[266,77,266,77],[266,78,266,78],[266,79,266,79],[267,14,267,12],[267,18,267,18,"previousKey"],[267,29,267,29],[267,32,267,32,"previousHistoryItem"],[267,51,267,51],[267,53,267,53,"key"],[267,56,267,56],[268,14,268,12],[268,18,268,18,"index"],[268,25,268,23],[268,28,268,26,"state"],[268,33,268,31],[268,34,268,32,"routes"],[268,40,268,38],[268,41,268,39,"findLastIndex"],[268,54,268,52],[268,55,268,53,"route"],[268,60,268,58],[268,64,268,62,"route"],[268,69,268,67],[268,70,268,68,"key"],[268,73,268,71],[268,78,268,76,"previousKey"],[268,89,268,87],[268,90,268,88],[269,14,269,12],[269,18,269,16,"index"],[269,25,269,21],[269,30,269,26],[269,31,269,27],[269,32,269,28],[269,34,269,30],[270,16,270,14],[270,23,270,21],[270,27,270,25],[271,14,271,12],[272,14,272,12],[272,18,272,16,"routes"],[272,24,272,22],[272,27,272,25,"state"],[272,32,272,30],[272,33,272,31,"routes"],[272,39,272,37],[273,14,273,12],[273,18,273,16,"backBehavior"],[273,30,273,28],[273,35,273,33],[273,48,273,46],[273,52,273,50,"routes"],[273,58,273,56],[273,59,273,57,"index"],[273,66,273,62],[273,67,273,63],[273,68,273,64,"params"],[273,74,273,70],[273,79,273,75,"previousHistoryItem"],[273,98,273,94],[273,99,273,95,"params"],[273,105,273,101],[273,107,273,103],[274,16,274,14,"routes"],[274,22,274,20],[274,25,274,23],[274,26,274,24],[274,29,274,27,"state"],[274,34,274,32],[274,35,274,33,"routes"],[274,41,274,39],[274,42,274,40],[275,16,275,14,"routes"],[275,22,275,20],[275,23,275,21,"index"],[275,30,275,26],[275,31,275,27],[275,34,275,30],[276,18,276,16],[276,21,276,19,"routes"],[276,27,276,25],[276,28,276,26,"index"],[276,35,276,31],[276,36,276,32],[277,18,277,16,"params"],[277,24,277,22],[277,26,277,24,"previousHistoryItem"],[277,45,277,43],[277,46,277,44,"params"],[278,16,278,14],[278,17,278,15],[279,14,279,12],[280,14,280,12],[280,21,280,19],[281,16,281,14],[281,19,281,17,"state"],[281,24,281,22],[282,16,282,14,"routes"],[282,22,282,20],[283,16,283,14,"preloadedRouteKeys"],[283,34,283,32],[283,36,283,34,"state"],[283,41,283,39],[283,42,283,40,"preloadedRouteKeys"],[283,60,283,58],[283,61,283,59,"filter"],[283,67,283,65],[283,68,283,66,"key"],[283,71,283,69],[283,75,283,73,"key"],[283,78,283,76],[283,83,283,81,"state"],[283,88,283,86],[283,89,283,87,"routes"],[283,95,283,93],[283,96,283,94,"index"],[283,103,283,99],[283,104,283,100],[283,105,283,101,"key"],[283,108,283,104],[283,109,283,105],[284,16,284,14,"history"],[284,23,284,21],[284,25,284,23,"state"],[284,30,284,28],[284,31,284,29,"history"],[284,38,284,36],[284,39,284,37,"slice"],[284,44,284,42],[284,45,284,43],[284,46,284,44],[284,48,284,46],[284,49,284,47],[284,50,284,48],[284,51,284,49],[285,16,285,14,"index"],[285,21,285,19],[285,23,285,14,"index"],[286,14,286,12],[286,15,286,13],[287,12,287,10],[288,10,288,8],[288,15,288,13],[288,24,288,22],[289,12,289,10],[290,14,290,12],[290,18,290,18,"routeIndex"],[290,28,290,28],[290,31,290,31,"state"],[290,36,290,36],[290,37,290,37,"routes"],[290,43,290,43],[290,44,290,44,"findIndex"],[290,53,290,53],[290,54,290,54,"route"],[290,59,290,59],[290,63,290,63,"route"],[290,68,290,68],[290,69,290,69,"name"],[290,73,290,73],[290,78,290,78,"action"],[290,84,290,84],[290,85,290,85,"payload"],[290,92,290,92],[290,93,290,93,"name"],[290,97,290,97],[290,98,290,98],[291,14,291,12],[291,18,291,16,"routeIndex"],[291,28,291,26],[291,33,291,31],[291,34,291,32],[291,35,291,33],[291,37,291,35],[292,16,292,14],[292,23,292,21],[292,27,292,25],[293,14,293,12],[294,14,294,12],[294,18,294,18,"route"],[294,23,294,23],[294,26,294,26,"state"],[294,31,294,31],[294,32,294,32,"routes"],[294,38,294,38],[294,39,294,39,"routeIndex"],[294,49,294,49],[294,50,294,50],[295,14,295,12],[295,18,295,18,"getId"],[295,23,295,23],[295,26,295,26,"routeGetIdList"],[295,40,295,40],[295,41,295,41,"route"],[295,46,295,46],[295,47,295,47,"name"],[295,51,295,51],[295,52,295,52],[296,14,296,12],[296,18,296,18,"currentId"],[296,27,296,27],[296,30,296,30,"getId"],[296,35,296,35],[296,38,296,38],[297,16,297,14,"params"],[297,22,297,20],[297,24,297,22,"route"],[297,29,297,27],[297,30,297,28,"params"],[298,14,298,12],[298,15,298,13],[298,16,298,14],[299,14,299,12],[299,18,299,18,"nextId"],[299,24,299,24],[299,27,299,27,"getId"],[299,32,299,32],[299,35,299,35],[300,16,300,14,"params"],[300,22,300,20],[300,24,300,22,"action"],[300,30,300,28],[300,31,300,29,"payload"],[300,38,300,36],[300,39,300,37,"params"],[301,14,301,12],[301,15,301,13],[301,16,301,14],[302,14,302,12],[302,18,302,18,"key"],[302,21,302,21],[302,24,302,24,"currentId"],[302,33,302,33],[302,38,302,38,"nextId"],[302,44,302,44],[302,47,302,47,"route"],[302,52,302,52],[302,53,302,53,"key"],[302,56,302,56],[302,59,302,59],[302,62,302,62,"route"],[302,67,302,67],[302,68,302,68,"name"],[302,72,302,72],[302,76,302,76],[302,80,302,76,"nanoid"],[302,96,302,82],[302,97,302,82,"nanoid"],[302,103,302,82],[302,105,302,83],[302,106,302,84],[302,108,302,86],[303,14,303,12],[303,18,303,18,"params"],[303,24,303,24],[303,27,303,27,"action"],[303,33,303,33],[303,34,303,34,"payload"],[303,41,303,41],[303,42,303,42,"params"],[303,48,303,48],[303,53,303,53,"undefined"],[303,62,303,62],[303,66,303,66,"routeParamList"],[303,80,303,80],[303,81,303,81,"route"],[303,86,303,86],[303,87,303,87,"name"],[303,91,303,91],[303,92,303,92],[303,97,303,97,"undefined"],[303,106,303,106],[303,109,303,109],[304,16,304,14],[304,19,304,17,"routeParamList"],[304,33,304,31],[304,34,304,32,"route"],[304,39,304,37],[304,40,304,38,"name"],[304,44,304,42],[304,45,304,43],[305,16,305,14],[305,19,305,17,"action"],[305,25,305,23],[305,26,305,24,"payload"],[305,33,305,31],[305,34,305,32,"params"],[306,14,306,12],[306,15,306,13],[306,18,306,16,"undefined"],[306,27,306,25],[307,14,307,12],[307,18,307,18,"newRoute"],[307,26,307,26],[307,29,307,29,"params"],[307,35,307,35],[307,40,307,40,"route"],[307,45,307,45],[307,46,307,46,"params"],[307,52,307,52],[307,55,307,55],[308,16,308,14],[308,19,308,17,"route"],[308,24,308,22],[309,16,309,14,"key"],[309,19,309,17],[310,16,310,14,"params"],[311,14,311,12],[311,15,311,13],[311,18,311,16,"route"],[311,23,311,21],[312,14,312,12],[312,21,312,19],[313,16,313,14],[313,19,313,17,"state"],[313,24,313,22],[314,16,314,14,"preloadedRouteKeys"],[314,34,314,32],[314,36,314,34,"state"],[314,41,314,39],[314,42,314,40,"preloadedRouteKeys"],[314,60,314,58],[314,61,314,59,"filter"],[314,67,314,65],[314,68,314,66,"key"],[314,71,314,69],[314,75,314,73,"key"],[314,78,314,76],[314,83,314,81,"route"],[314,88,314,86],[314,89,314,87,"key"],[314,92,314,90],[314,93,314,91],[314,94,314,92,"concat"],[314,100,314,98],[314,101,314,99,"newRoute"],[314,109,314,107],[314,110,314,108,"key"],[314,113,314,111],[314,114,314,112],[315,16,315,14,"routes"],[315,22,315,20],[315,24,315,22,"state"],[315,29,315,27],[315,30,315,28,"routes"],[315,36,315,34],[315,37,315,35,"map"],[315,40,315,38],[315,41,315,39],[315,42,315,40,"route"],[315,47,315,45],[315,49,315,47,"index"],[315,54,315,52],[315,59,315,57,"index"],[315,64,315,62],[315,69,315,67,"routeIndex"],[315,79,315,77],[315,82,315,80,"newRoute"],[315,90,315,88],[315,93,315,91,"route"],[315,98,315,96],[315,99,315,97],[316,16,316,14,"history"],[316,23,316,21],[316,25,316,23,"key"],[316,28,316,26],[316,33,316,31,"route"],[316,38,316,36],[316,39,316,37,"key"],[316,42,316,40],[316,45,316,43,"state"],[316,50,316,48],[316,51,316,49,"history"],[316,58,316,56],[316,61,316,59,"state"],[316,66,316,64],[316,67,316,65,"history"],[316,74,316,72],[316,75,316,73,"filter"],[316,81,316,79],[316,82,316,80,"record"],[316,88,316,86],[316,92,316,90,"record"],[316,98,316,96],[316,99,316,97,"key"],[316,102,316,100],[316,107,316,105,"route"],[316,112,316,110],[316,113,316,111,"key"],[316,116,316,114],[317,14,317,12],[317,15,317,13],[318,12,318,10],[319,10,319,8],[320,12,320,10],[320,19,320,17,"BaseRouter"],[320,32,320,27],[320,33,320,27,"BaseRouter"],[320,43,320,27],[320,44,320,28,"getStateForAction"],[320,61,320,45],[320,62,320,46,"state"],[320,67,320,51],[320,69,320,53,"action"],[320,75,320,59],[320,76,320,60],[321,8,321,6],[322,6,322,4],[322,7,322,5],[323,6,323,4,"actionCreators"],[323,20,323,18],[323,22,323,20,"TabActions"],[324,4,324,2],[324,5,324,3],[325,4,325,2],[325,11,325,9,"router"],[325,17,325,15],[326,2,326,0],[327,0,326,1],[327,3]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","history.filter$argument_0","history.findLastIndex$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","state.routes.find$argument_0","routes.map$argument_0","state.history.filter$argument_0","state.preloadedRouteKeys.filter$argument_0","router.getStateForRouteNamesChange","routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","updatedState.preloadedRouteKeys.filter$argument_0","state.history.findLastIndex$argument_0","state.routes.findLastIndex$argument_0"],"mappings":"AAA;ECM;GDQ;wBEE;2CCwB,wCD;CFe;oBIC;+BCM,+DD;8DEE,6BF;CJqB;OOC;ICO;oCCK;QDI;KDY;IGC;oCDQ;wCEC,oBF;OCU;mCEE,kBF;4CGC,gCH;6DIS,8BJ;KHE;IQC;oCNK,0BE,yDF;OMI;MFI,yCG,qBH,CE;KRW;IUC;2CCC,kBD;KVK;IYC;iDDS,2CC;uCCM;eDgC;yEEI,mDF;qEGW,qCH;qDIwB,kCJ;kELe,sCK;sDDO,2CC;kELwB,wBK;uCCC,yDD;gFNC,kCM;KZM;CPI"},"hasCjsExports":false},"type":"js/module"}]}