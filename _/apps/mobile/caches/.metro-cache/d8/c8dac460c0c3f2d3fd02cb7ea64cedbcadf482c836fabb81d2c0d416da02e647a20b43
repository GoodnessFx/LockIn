{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":40,"column":17},"end":{"line":40,"column":52}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"escape-string-regexp","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":41,"column":47},"end":{"line":41,"column":78}}],"key":"14QBo/6I2jfYu7Ct29OWBvp5ENM=","exportNames":["*"],"imports":1}},{"name":"./findFocusedRoute","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":42,"column":27},"end":{"line":42,"column":56}}],"key":"JPe8xQMI59bnv97OB8syZ4AgEvA=","exportNames":["*"],"imports":1}},{"name":"./getStateFromPath-forks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":43,"column":26},"end":{"line":43,"column":61}}],"key":"R0kZl7h5DI+/CZCR2+pJK8wn5iY=","exportNames":["*"],"imports":1}},{"name":"../constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":44,"column":20},"end":{"line":44,"column":43}}],"key":"zmjjtqoQxi2W71eIMIIaEi1mOpU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _objectWithoutProperties = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\").default;\n  var _excluded = [\"path\"];\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function () {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, \"default\", {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = this && this.__importStar || function () {\n    var ownKeys = function (o) {\n      ownKeys = Object.getOwnPropertyNames || function (o) {\n        var ar = [];\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n        return ar;\n      };\n      return ownKeys(o);\n    };\n    return function (mod) {\n      if (mod && mod.__esModule) return mod;\n      var result = {};\n      if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n      __setModuleDefault(result, mod);\n      return result;\n    };\n  }();\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getStateFromPath = getStateFromPath;\n  var native_1 = require(_dependencyMap[1], \"@react-navigation/native\");\n  var escape_string_regexp_1 = __importDefault(require(_dependencyMap[2], \"escape-string-regexp\"));\n  var findFocusedRoute_1 = require(_dependencyMap[3], \"./findFocusedRoute\");\n  var expo = __importStar(require(_dependencyMap[4], \"./getStateFromPath-forks\"));\n  var constants_1 = require(_dependencyMap[5], \"../constants\");\n  function getStateFromPath(path, options) {\n    var segments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var _getConfigResources = getConfigResources(options, segments),\n      initialRoutes = _getConfigResources.initialRoutes,\n      configs = _getConfigResources.configs,\n      configWithRegexes = _getConfigResources.configWithRegexes;\n    var screens = options?.screens;\n    var expoPath = expo.getUrlWithReactNavigationConcessions(path);\n    var remaining = expo.cleanPath(expoPath.nonstandardPathname);\n    var prefix = options?.path?.replace(/^\\//, '');\n    if (prefix) {\n      var normalizedPrefix = prefix.endsWith('/') ? prefix : `${prefix}/`;\n      if (!remaining.startsWith(normalizedPrefix)) {\n        return undefined;\n      }\n      remaining = remaining.replace(normalizedPrefix, '');\n    }\n    if (screens === undefined) {\n      var _routes = remaining.split('/').filter(Boolean).map(segment => {\n        var name = decodeURIComponent(segment);\n        return {\n          name\n        };\n      });\n      if (_routes.length) {\n        return createNestedStateObject(expoPath, _routes, initialRoutes, [], expoPath.url.hash);\n      }\n      return undefined;\n    }\n    if (remaining === '/') {\n      var match = expo.matchForEmptyPath(configWithRegexes);\n      if (match) {\n        return createNestedStateObject(expoPath, match.routeNames.map(name => ({\n          name\n        })), initialRoutes, configs, expoPath.url.hash);\n      }\n      return undefined;\n    }\n    var result;\n    var current;\n    var _matchAgainstConfigs = matchAgainstConfigs(remaining, configWithRegexes),\n      routes = _matchAgainstConfigs.routes,\n      remainingPath = _matchAgainstConfigs.remainingPath;\n    if (routes !== undefined) {\n      current = createNestedStateObject(expoPath, routes, initialRoutes, configs, expoPath.url.hash);\n      remaining = remainingPath;\n      result = current;\n    }\n    if (current == null || result == null) {\n      return undefined;\n    }\n    return result;\n  }\n  var cachedConfigResources = [undefined, prepareConfigResources()];\n  function getConfigResources(options, previousSegments) {\n    cachedConfigResources = [options, prepareConfigResources(options, previousSegments)];\n    return cachedConfigResources[1];\n  }\n  function prepareConfigResources(options, previousSegments) {\n    if (options) {\n      (0, native_1.validatePathConfig)(options);\n    }\n    var initialRoutes = getInitialRoutes(options);\n    var configs = getNormalizedConfigs(initialRoutes, options?.screens, previousSegments);\n    checkForDuplicatedConfigs(configs);\n    var configWithRegexes = getConfigsWithRegexes(configs);\n    return {\n      initialRoutes,\n      configs,\n      configWithRegexes\n    };\n  }\n  function getInitialRoutes(options) {\n    var initialRoutes = [];\n    if (options?.initialRouteName) {\n      initialRoutes.push({\n        initialRouteName: options.initialRouteName,\n        parentScreens: []\n      });\n    }\n    return initialRoutes;\n  }\n  function getNormalizedConfigs(initialRoutes) {\n    var screens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var previousSegments = arguments.length > 2 ? arguments[2] : undefined;\n    return [].concat(...Object.keys(screens).map(key => createNormalizedConfigs(key, screens, [], initialRoutes, []))).map(expo.appendIsInitial(initialRoutes)).sort(expo.getRouteConfigSorter(previousSegments));\n  }\n  function checkForDuplicatedConfigs(configs) {\n    configs.reduce((acc, config) => {\n      if (acc[config.pattern]) {\n        var a = acc[config.pattern].routeNames;\n        var b = config.routeNames;\n        var intersects = a.length > b.length ? b.every((it, i) => a[i] === it) : a.every((it, i) => b[i] === it);\n        if (!intersects) {\n          throw new Error(`Found conflicting screens with the same pattern. The pattern '${config.pattern}' resolves to both '${a.join(' > ')}' and '${b.join(' > ')}'. Patterns must be unique and cannot resolve to more than one screen.`);\n        }\n      }\n      return Object.assign(acc, {\n        [config.pattern]: config\n      });\n    }, {});\n  }\n  function getConfigsWithRegexes(configs) {\n    return configs.map(c => ({\n      ...c,\n      regex: expo.configRegExp(c)\n    }));\n  }\n  var joinPaths = function () {\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n    return [].concat(...paths.map(p => p.split('/'))).filter(Boolean).join('/');\n  };\n  var matchAgainstConfigs = (remaining, configs) => {\n    var routes;\n    var remainingPath = remaining;\n    var allParams = Object.create(null);\n    var _loop = function (config) {\n        if (!config.regex) {\n          return 0; // continue\n        }\n        var match = remainingPath.match(config.regex);\n        if (match) {\n          var matchResult = config.pattern?.split('/').reduce((acc, p, index) => {\n            if (!expo.isDynamicPart(p)) {\n              return acc;\n            }\n            acc.pos += 1;\n            var decodedParamSegment = expo.safelyDecodeURIComponent(match[(acc.pos + 1) * 2].replace(/\\/$/, ''));\n            Object.assign(acc.matchedParams, {\n              [p]: Object.assign(acc.matchedParams[p] || {}, {\n                [index]: decodedParamSegment\n              })\n            });\n            return acc;\n          }, {\n            pos: -1,\n            matchedParams: {}\n          });\n          var matchedParams = matchResult.matchedParams || {};\n          routes = config.routeNames.map(name => {\n            var routeConfig = configs.find(c => {\n              return c.screen === name && config.pattern.startsWith(c.pattern);\n            });\n            var normalizedPath = routeConfig?.path.split('/').filter(Boolean).join('/');\n            var numInitialSegments = routeConfig?.pattern.replace(new RegExp(`${(0, escape_string_regexp_1.default)(normalizedPath)}$`), '')?.split('/').length;\n            var params = normalizedPath?.split('/').reduce((acc, p, index) => {\n              if (!expo.isDynamicPart(p)) {\n                return acc;\n              }\n              var offset = numInitialSegments ? numInitialSegments - 1 : 0;\n              var value = expo.getParamValue(p, matchedParams[p]?.[index + offset]);\n              if (value) {\n                var key = expo.replacePart(p);\n                acc[key] = routeConfig?.parse?.[key] ? routeConfig.parse[key](value) : value;\n              }\n              return acc;\n            }, {});\n            if (params && Object.keys(params).length) {\n              Object.assign(allParams, params);\n              return {\n                name,\n                params\n              };\n            }\n            return {\n              name\n            };\n          });\n          remainingPath = remainingPath.replace(match[1], '');\n          return 1; // break\n        }\n      },\n      _ret;\n    for (var config of configs) {\n      _ret = _loop(config);\n      if (_ret === 0) continue;\n      if (_ret === 1) break;\n    }\n    expo.populateParams(routes, allParams);\n    return {\n      routes,\n      remainingPath\n    };\n  };\n  var createNormalizedConfigs = function (screen, routeConfig) {\n    var routeNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var initials = arguments.length > 3 ? arguments[3] : undefined;\n    var parentScreens = arguments.length > 4 ? arguments[4] : undefined;\n    var parentPattern = arguments.length > 5 ? arguments[5] : undefined;\n    var configs = [];\n    routeNames.push(screen);\n    parentScreens.push(screen);\n    var config = routeConfig[screen];\n    if (typeof config === 'string') {\n      var pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n      configs.push(createConfigItem(screen, routeNames, pattern, config));\n    } else if (typeof config === 'object') {\n      var _pattern;\n      if (typeof config.path === 'string') {\n        if (config.exact && config.path === undefined) {\n          throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n        }\n        _pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n        if (screen !== constants_1.INTERNAL_SLOT_NAME) {\n          configs.push(createConfigItem(screen, routeNames, _pattern, config.path, config.parse, config));\n        }\n      }\n      if (config.screens) {\n        if (config.initialRouteName) {\n          initials.push({\n            initialRouteName: config.initialRouteName,\n            parentScreens\n          });\n        }\n        Object.keys(config.screens).forEach(nestedConfig => {\n          var result = createNormalizedConfigs(nestedConfig, config.screens, routeNames, initials, [...parentScreens], _pattern ?? parentPattern);\n          configs.push(...result);\n        });\n      }\n    }\n    routeNames.pop();\n    return configs;\n  };\n  var createConfigItem = function (screen, routeNames, pattern, path) {\n    var parse = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n    var config = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    pattern = pattern.split('/').filter(Boolean).join('/');\n    var regex = pattern ? expo.routePatternToRegex(pattern) : undefined;\n    return {\n      screen,\n      regex,\n      pattern,\n      path,\n      routeNames: [...routeNames],\n      parse,\n      ...expo.createConfig(screen, pattern, routeNames, config)\n    };\n  };\n  var findParseConfigForRoute = (routeName, flatConfig) => {\n    for (var config of flatConfig) {\n      if (routeName === config.routeNames[config.routeNames.length - 1]) {\n        return config.parse;\n      }\n    }\n    return undefined;\n  };\n  var findInitialRoute = (routeName, parentScreens, initialRoutes) => {\n    for (var config of initialRoutes) {\n      if (parentScreens.length === config.parentScreens.length) {\n        var sameParents = true;\n        for (var i = 0; i < parentScreens.length; i++) {\n          if (parentScreens[i].localeCompare(config.parentScreens[i]) !== 0) {\n            sameParents = false;\n            break;\n          }\n        }\n        if (sameParents) {\n          return routeName !== config.initialRouteName ? config.initialRouteName : undefined;\n        }\n      }\n    }\n    return undefined;\n  };\n  var createStateObject = (initialRoute, route, isEmpty) => {\n    if (isEmpty) {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute,\n            params: route.params\n          }, route]\n        };\n      } else {\n        return {\n          routes: [route]\n        };\n      }\n    } else {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute,\n            params: route.params\n          }, {\n            ...route,\n            state: {\n              routes: []\n            }\n          }]\n        };\n      } else {\n        return {\n          routes: [{\n            ...route,\n            state: {\n              routes: []\n            }\n          }]\n        };\n      }\n    }\n  };\n  var createNestedStateObject = (_ref, routes, initialRoutes, flatConfig, hash) => {\n    var path = _ref.path,\n      expoURL = _objectWithoutProperties(_ref, _excluded);\n    var route = routes.shift();\n    var parentScreens = [];\n    var initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n    parentScreens.push(route.name);\n    var state = createStateObject(initialRoute, route, routes.length === 0);\n    if (routes.length > 0) {\n      var nestedState = state;\n      while (route = routes.shift()) {\n        initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n        var nestedStateIndex = nestedState.index || nestedState.routes.length - 1;\n        nestedState.routes[nestedStateIndex].state = createStateObject(initialRoute, route, routes.length === 0);\n        if (routes.length > 0) {\n          nestedState = nestedState.routes[nestedStateIndex].state;\n        }\n        parentScreens.push(route.name);\n      }\n    }\n    route = (0, findFocusedRoute_1.findFocusedRoute)(state);\n    route.path = expoURL.pathWithoutGroups;\n    var params = expo.parseQueryParams(path, route, flatConfig ? findParseConfigForRoute(route.name, flatConfig) : undefined, hash);\n    if (params) {\n      route.params = {\n        ...route.params,\n        ...params\n      };\n    }\n    return state;\n  };\n});","lineCount":398,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_objectWithoutProperties"],[4,30,1,13],[4,33,1,13,"require"],[4,40,1,13],[4,41,1,13,"_dependencyMap"],[4,55,1,13],[4,110,1,13,"default"],[4,117,1,13],[5,2,1,13],[5,6,1,13,"_excluded"],[5,15,1,13],[6,2,2,0],[6,6,2,4,"__createBinding"],[6,21,2,19],[6,24,2,23],[6,28,2,27],[6,32,2,31],[6,36,2,35],[6,37,2,36,"__createBinding"],[6,52,2,51],[6,57,2,57,"Object"],[6,63,2,63],[6,64,2,64,"create"],[6,70,2,70],[6,73,2,74],[6,83,2,83,"o"],[6,84,2,84],[6,86,2,86,"m"],[6,87,2,87],[6,89,2,89,"k"],[6,90,2,90],[6,92,2,92,"k2"],[6,94,2,94],[6,96,2,96],[7,4,3,4],[7,8,3,8,"k2"],[7,10,3,10],[7,15,3,15,"undefined"],[7,24,3,24],[7,26,3,26,"k2"],[7,28,3,28],[7,31,3,31,"k"],[7,32,3,32],[8,4,4,4],[8,8,4,8,"desc"],[8,12,4,12],[8,15,4,15,"Object"],[8,21,4,21],[8,22,4,22,"getOwnPropertyDescriptor"],[8,46,4,46],[8,47,4,47,"m"],[8,48,4,48],[8,50,4,50,"k"],[8,51,4,51],[8,52,4,52],[9,4,5,4],[9,8,5,8],[9,9,5,9,"desc"],[9,13,5,13],[9,18,5,18],[9,23,5,23],[9,27,5,27,"desc"],[9,31,5,31],[9,34,5,34],[9,35,5,35,"m"],[9,36,5,36],[9,37,5,37,"__esModule"],[9,47,5,47],[9,50,5,50,"desc"],[9,54,5,54],[9,55,5,55,"writable"],[9,63,5,63],[9,67,5,67,"desc"],[9,71,5,71],[9,72,5,72,"configurable"],[9,84,5,84],[9,85,5,85],[9,87,5,87],[10,6,6,6,"desc"],[10,10,6,10],[10,13,6,13],[11,8,6,15,"enumerable"],[11,18,6,25],[11,20,6,27],[11,24,6,31],[12,8,6,33,"get"],[12,11,6,36],[12,13,6,38],[12,22,6,38,"get"],[12,23,6,38],[12,25,6,49],[13,10,6,51],[13,17,6,58,"m"],[13,18,6,59],[13,19,6,60,"k"],[13,20,6,61],[13,21,6,62],[14,8,6,64],[15,6,6,66],[15,7,6,67],[16,4,7,4],[17,4,8,4,"Object"],[17,10,8,10],[17,11,8,11,"defineProperty"],[17,25,8,25],[17,26,8,26,"o"],[17,27,8,27],[17,29,8,29,"k2"],[17,31,8,31],[17,33,8,33,"desc"],[17,37,8,37],[17,38,8,38],[18,2,9,0],[18,3,9,1],[18,6,9,6],[18,16,9,15,"o"],[18,17,9,16],[18,19,9,18,"m"],[18,20,9,19],[18,22,9,21,"k"],[18,23,9,22],[18,25,9,24,"k2"],[18,27,9,26],[18,29,9,28],[19,4,10,4],[19,8,10,8,"k2"],[19,10,10,10],[19,15,10,15,"undefined"],[19,24,10,24],[19,26,10,26,"k2"],[19,28,10,28],[19,31,10,31,"k"],[19,32,10,32],[20,4,11,4,"o"],[20,5,11,5],[20,6,11,6,"k2"],[20,8,11,8],[20,9,11,9],[20,12,11,12,"m"],[20,13,11,13],[20,14,11,14,"k"],[20,15,11,15],[20,16,11,16],[21,2,12,0],[21,3,12,2],[21,4,12,3],[22,2,13,0],[22,6,13,4,"__setModuleDefault"],[22,24,13,22],[22,27,13,26],[22,31,13,30],[22,35,13,34],[22,39,13,38],[22,40,13,39,"__setModuleDefault"],[22,58,13,57],[22,63,13,63,"Object"],[22,69,13,69],[22,70,13,70,"create"],[22,76,13,76],[22,79,13,80],[22,89,13,89,"o"],[22,90,13,90],[22,92,13,92,"v"],[22,93,13,93],[22,95,13,95],[23,4,14,4,"Object"],[23,10,14,10],[23,11,14,11,"defineProperty"],[23,25,14,25],[23,26,14,26,"o"],[23,27,14,27],[23,29,14,29],[23,38,14,38],[23,40,14,40],[24,6,14,42,"enumerable"],[24,16,14,52],[24,18,14,54],[24,22,14,58],[25,6,14,60,"value"],[25,11,14,65],[25,13,14,67,"v"],[26,4,14,69],[26,5,14,70],[26,6,14,71],[27,2,15,0],[27,3,15,1],[27,6,15,5],[27,16,15,14,"o"],[27,17,15,15],[27,19,15,17,"v"],[27,20,15,18],[27,22,15,20],[28,4,16,4,"o"],[28,5,16,5],[28,6,16,6],[28,15,16,15],[28,16,16,16],[28,19,16,19,"v"],[28,20,16,20],[29,2,17,0],[29,3,17,1],[29,4,17,2],[30,2,18,0],[30,6,18,4,"__importStar"],[30,18,18,16],[30,21,18,20],[30,25,18,24],[30,29,18,28],[30,33,18,32],[30,34,18,33,"__importStar"],[30,46,18,45],[30,50,18,51],[30,62,18,63],[31,4,19,4],[31,8,19,8,"ownKeys"],[31,15,19,15],[31,18,19,18],[31,27,19,18,"ownKeys"],[31,28,19,27,"o"],[31,29,19,28],[31,31,19,30],[32,6,20,8,"ownKeys"],[32,13,20,15],[32,16,20,18,"Object"],[32,22,20,24],[32,23,20,25,"getOwnPropertyNames"],[32,42,20,44],[32,46,20,48],[32,56,20,58,"o"],[32,57,20,59],[32,59,20,61],[33,8,21,12],[33,12,21,16,"ar"],[33,14,21,18],[33,17,21,21],[33,19,21,23],[34,8,22,12],[34,13,22,17],[34,17,22,21,"k"],[34,18,22,22],[34,22,22,26,"o"],[34,23,22,27],[34,25,22,29],[34,29,22,33,"Object"],[34,35,22,39],[34,36,22,40,"prototype"],[34,45,22,49],[34,46,22,50,"hasOwnProperty"],[34,60,22,64],[34,61,22,65,"call"],[34,65,22,69],[34,66,22,70,"o"],[34,67,22,71],[34,69,22,73,"k"],[34,70,22,74],[34,71,22,75],[34,73,22,77,"ar"],[34,75,22,79],[34,76,22,80,"ar"],[34,78,22,82],[34,79,22,83,"length"],[34,85,22,89],[34,86,22,90],[34,89,22,93,"k"],[34,90,22,94],[35,8,23,12],[35,15,23,19,"ar"],[35,17,23,21],[36,6,24,8],[36,7,24,9],[37,6,25,8],[37,13,25,15,"ownKeys"],[37,20,25,22],[37,21,25,23,"o"],[37,22,25,24],[37,23,25,25],[38,4,26,4],[38,5,26,5],[39,4,27,4],[39,11,27,11],[39,21,27,21,"mod"],[39,24,27,24],[39,26,27,26],[40,6,28,8],[40,10,28,12,"mod"],[40,13,28,15],[40,17,28,19,"mod"],[40,20,28,22],[40,21,28,23,"__esModule"],[40,31,28,33],[40,33,28,35],[40,40,28,42,"mod"],[40,43,28,45],[41,6,29,8],[41,10,29,12,"result"],[41,16,29,18],[41,19,29,21],[41,20,29,22],[41,21,29,23],[42,6,30,8],[42,10,30,12,"mod"],[42,13,30,15],[42,17,30,19],[42,21,30,23],[42,23,30,25],[42,28,30,30],[42,32,30,34,"k"],[42,33,30,35],[42,36,30,38,"ownKeys"],[42,43,30,45],[42,44,30,46,"mod"],[42,47,30,49],[42,48,30,50],[42,50,30,52,"i"],[42,51,30,53],[42,54,30,56],[42,55,30,57],[42,57,30,59,"i"],[42,58,30,60],[42,61,30,63,"k"],[42,62,30,64],[42,63,30,65,"length"],[42,69,30,71],[42,71,30,73,"i"],[42,72,30,74],[42,74,30,76],[42,76,30,78],[42,80,30,82,"k"],[42,81,30,83],[42,82,30,84,"i"],[42,83,30,85],[42,84,30,86],[42,89,30,91],[42,98,30,100],[42,100,30,102,"__createBinding"],[42,115,30,117],[42,116,30,118,"result"],[42,122,30,124],[42,124,30,126,"mod"],[42,127,30,129],[42,129,30,131,"k"],[42,130,30,132],[42,131,30,133,"i"],[42,132,30,134],[42,133,30,135],[42,134,30,136],[43,6,31,8,"__setModuleDefault"],[43,24,31,26],[43,25,31,27,"result"],[43,31,31,33],[43,33,31,35,"mod"],[43,36,31,38],[43,37,31,39],[44,6,32,8],[44,13,32,15,"result"],[44,19,32,21],[45,4,33,4],[45,5,33,5],[46,2,34,0],[46,3,34,1],[46,4,34,3],[46,5,34,4],[47,2,35,0],[47,6,35,4,"__importDefault"],[47,21,35,19],[47,24,35,23],[47,28,35,27],[47,32,35,31],[47,36,35,35],[47,37,35,36,"__importDefault"],[47,52,35,51],[47,56,35,56],[47,66,35,66,"mod"],[47,69,35,69],[47,71,35,71],[48,4,36,4],[48,11,36,12,"mod"],[48,14,36,15],[48,18,36,19,"mod"],[48,21,36,22],[48,22,36,23,"__esModule"],[48,32,36,33],[48,35,36,37,"mod"],[48,38,36,40],[48,41,36,43],[49,6,36,45],[49,15,36,54],[49,17,36,56,"mod"],[50,4,36,60],[50,5,36,61],[51,2,37,0],[51,3,37,1],[52,2,38,0,"Object"],[52,8,38,6],[52,9,38,7,"defineProperty"],[52,23,38,21],[52,24,38,22,"exports"],[52,31,38,29],[52,33,38,31],[52,45,38,43],[52,47,38,45],[53,4,38,47,"value"],[53,9,38,52],[53,11,38,54],[54,2,38,59],[54,3,38,60],[54,4,38,61],[55,2,39,0,"exports"],[55,9,39,7],[55,10,39,8,"getStateFromPath"],[55,26,39,24],[55,29,39,27,"getStateFromPath"],[55,45,39,43],[56,2,40,0],[56,6,40,6,"native_1"],[56,14,40,14],[56,17,40,17,"require"],[56,24,40,24],[56,25,40,24,"_dependencyMap"],[56,39,40,24],[56,70,40,51],[56,71,40,52],[57,2,41,0],[57,6,41,6,"escape_string_regexp_1"],[57,28,41,28],[57,31,41,31,"__importDefault"],[57,46,41,46],[57,47,41,47,"require"],[57,54,41,54],[57,55,41,54,"_dependencyMap"],[57,69,41,54],[57,96,41,77],[57,97,41,78],[57,98,41,79],[58,2,42,0],[58,6,42,6,"findFocusedRoute_1"],[58,24,42,24],[58,27,42,27,"require"],[58,34,42,34],[58,35,42,34,"_dependencyMap"],[58,49,42,34],[58,74,42,55],[58,75,42,56],[59,2,43,0],[59,6,43,6,"expo"],[59,10,43,10],[59,13,43,13,"__importStar"],[59,25,43,25],[59,26,43,26,"require"],[59,33,43,33],[59,34,43,33,"_dependencyMap"],[59,48,43,33],[59,79,43,60],[59,80,43,61],[59,81,43,62],[60,2,44,0],[60,6,44,6,"constants_1"],[60,17,44,17],[60,20,44,20,"require"],[60,27,44,27],[60,28,44,27,"_dependencyMap"],[60,42,44,27],[60,61,44,42],[60,62,44,43],[61,2,66,0],[61,11,66,9,"getStateFromPath"],[61,27,66,25,"getStateFromPath"],[61,28,66,26,"path"],[61,32,66,30],[61,34,66,32,"options"],[61,41,66,39],[61,43,70,2],[62,4,70,2],[62,8,68,0,"segments"],[62,16,68,8],[62,19,68,8,"arguments"],[62,28,68,8],[62,29,68,8,"length"],[62,35,68,8],[62,43,68,8,"arguments"],[62,52,68,8],[62,60,68,8,"undefined"],[62,69,68,8],[62,72,68,8,"arguments"],[62,81,68,8],[62,87,68,11],[62,89,68,13],[63,4,71,4],[63,8,71,4,"_getConfigResources"],[63,27,71,4],[63,30,71,58,"getConfigResources"],[63,48,71,76],[63,49,71,77,"options"],[63,56,71,84],[63,58,73,4,"segments"],[63,66,75,4],[63,67,75,5],[64,6,71,12,"initialRoutes"],[64,19,71,25],[64,22,71,25,"_getConfigResources"],[64,41,71,25],[64,42,71,12,"initialRoutes"],[64,55,71,25],[65,6,71,27,"configs"],[65,13,71,34],[65,16,71,34,"_getConfigResources"],[65,35,71,34],[65,36,71,27,"configs"],[65,43,71,34],[66,6,71,36,"configWithRegexes"],[66,23,71,53],[66,26,71,53,"_getConfigResources"],[66,45,71,53],[66,46,71,36,"configWithRegexes"],[66,63,71,53],[67,4,76,4],[67,8,76,10,"screens"],[67,15,76,17],[67,18,76,20,"options"],[67,25,76,27],[67,27,76,29,"screens"],[67,34,76,36],[68,4,78,4],[68,8,78,10,"expoPath"],[68,16,78,18],[68,19,78,21,"expo"],[68,23,78,25],[68,24,78,26,"getUrlWithReactNavigationConcessions"],[68,60,78,62],[68,61,78,63,"path"],[68,65,78,67],[68,66,78,68],[69,4,81,4],[69,8,81,8,"remaining"],[69,17,81,17],[69,20,81,20,"expo"],[69,24,81,24],[69,25,81,25,"cleanPath"],[69,34,81,34],[69,35,81,35,"expoPath"],[69,43,81,43],[69,44,81,44,"nonstandardPathname"],[69,63,81,63],[69,64,81,64],[70,4,89,4],[70,8,89,10,"prefix"],[70,14,89,16],[70,17,89,19,"options"],[70,24,89,26],[70,26,89,28,"path"],[70,30,89,32],[70,32,89,34,"replace"],[70,39,89,41],[70,40,89,42],[70,45,89,47],[70,47,89,49],[70,49,89,51],[70,50,89,52],[71,4,90,4],[71,8,90,8,"prefix"],[71,14,90,14],[71,16,90,16],[72,6,92,8],[72,10,92,14,"normalizedPrefix"],[72,26,92,30],[72,29,92,33,"prefix"],[72,35,92,39],[72,36,92,40,"endsWith"],[72,44,92,48],[72,45,92,49],[72,48,92,52],[72,49,92,53],[72,52,92,56,"prefix"],[72,58,92,62],[72,61,92,65],[72,64,92,68,"prefix"],[72,70,92,74],[72,73,92,77],[73,6,94,8],[73,10,94,12],[73,11,94,13,"remaining"],[73,20,94,22],[73,21,94,23,"startsWith"],[73,31,94,33],[73,32,94,34,"normalizedPrefix"],[73,48,94,50],[73,49,94,51],[73,51,94,53],[74,8,95,12],[74,15,95,19,"undefined"],[74,24,95,28],[75,6,96,8],[76,6,98,8,"remaining"],[76,15,98,17],[76,18,98,20,"remaining"],[76,27,98,29],[76,28,98,30,"replace"],[76,35,98,37],[76,36,98,38,"normalizedPrefix"],[76,52,98,54],[76,54,98,56],[76,56,98,58],[76,57,98,59],[77,4,99,4],[78,4,100,4],[78,8,100,8,"screens"],[78,15,100,15],[78,20,100,20,"undefined"],[78,29,100,29],[78,31,100,31],[79,6,102,8],[79,10,102,14,"routes"],[79,17,102,20],[79,20,102,23,"remaining"],[79,29,102,32],[79,30,103,13,"split"],[79,35,103,18],[79,36,103,19],[79,39,103,22],[79,40,103,23],[79,41,104,13,"filter"],[79,47,104,19],[79,48,104,20,"Boolean"],[79,55,104,27],[79,56,104,28],[79,57,105,13,"map"],[79,60,105,16],[79,61,105,18,"segment"],[79,68,105,25],[79,72,105,30],[80,8,106,12],[80,12,106,18,"name"],[80,16,106,22],[80,19,106,25,"decodeURIComponent"],[80,37,106,43],[80,38,106,44,"segment"],[80,45,106,51],[80,46,106,52],[81,8,107,12],[81,15,107,19],[82,10,107,21,"name"],[83,8,107,26],[83,9,107,27],[84,6,108,8],[84,7,108,9],[84,8,108,10],[85,6,109,8],[85,10,109,12,"routes"],[85,17,109,18],[85,18,109,19,"length"],[85,24,109,25],[85,26,109,27],[86,8,110,12],[86,15,110,19,"createNestedStateObject"],[86,38,110,42],[86,39,110,43,"expoPath"],[86,47,110,51],[86,49,110,53,"routes"],[86,56,110,59],[86,58,110,61,"initialRoutes"],[86,71,110,74],[86,73,110,76],[86,75,110,78],[86,77,110,80,"expoPath"],[86,85,110,88],[86,86,110,89,"url"],[86,89,110,92],[86,90,110,93,"hash"],[86,94,110,97],[86,95,110,98],[87,6,111,8],[88,6,112,8],[88,13,112,15,"undefined"],[88,22,112,24],[89,4,113,4],[90,4,114,4],[90,8,114,8,"remaining"],[90,17,114,17],[90,22,114,22],[90,25,114,25],[90,27,114,27],[91,6,118,8],[91,10,118,14,"match"],[91,15,118,19],[91,18,118,22,"expo"],[91,22,118,26],[91,23,118,27,"matchForEmptyPath"],[91,40,118,44],[91,41,118,45,"configWithRegexes"],[91,58,118,62],[91,59,118,63],[92,6,128,8],[92,10,128,12,"match"],[92,15,128,17],[92,17,128,19],[93,8,129,12],[93,15,129,19,"createNestedStateObject"],[93,38,129,42],[93,39,129,43,"expoPath"],[93,47,129,51],[93,49,129,53,"match"],[93,54,129,58],[93,55,129,59,"routeNames"],[93,65,129,69],[93,66,129,70,"map"],[93,69,129,73],[93,70,129,75,"name"],[93,74,129,79],[93,79,129,85],[94,10,129,87,"name"],[95,8,129,92],[95,9,129,93],[95,10,129,94],[95,11,129,95],[95,13,129,97,"initialRoutes"],[95,26,129,110],[95,28,129,112,"configs"],[95,35,129,119],[95,37,129,121,"expoPath"],[95,45,129,129],[95,46,129,130,"url"],[95,49,129,133],[95,50,129,134,"hash"],[95,54,129,138],[95,55,129,139],[96,6,130,8],[97,6,131,8],[97,13,131,15,"undefined"],[97,22,131,24],[98,4,132,4],[99,4,133,4],[99,8,133,8,"result"],[99,14,133,14],[100,4,134,4],[100,8,134,8,"current"],[100,15,134,15],[101,4,137,4],[101,8,137,4,"_matchAgainstConfigs"],[101,28,137,4],[101,31,137,38,"matchAgainstConfigs"],[101,50,137,57],[101,51,137,58,"remaining"],[101,60,137,67],[101,62,137,69,"configWithRegexes"],[101,79,137,86],[101,80,137,87],[102,6,137,12,"routes"],[102,12,137,18],[102,15,137,18,"_matchAgainstConfigs"],[102,35,137,18],[102,36,137,12,"routes"],[102,42,137,18],[103,6,137,20,"remainingPath"],[103,19,137,33],[103,22,137,33,"_matchAgainstConfigs"],[103,42,137,33],[103,43,137,20,"remainingPath"],[103,56,137,33],[104,4,138,4],[104,8,138,8,"routes"],[104,14,138,14],[104,19,138,19,"undefined"],[104,28,138,28],[104,30,138,30],[105,6,140,8,"current"],[105,13,140,15],[105,16,140,18,"createNestedStateObject"],[105,39,140,41],[105,40,140,42,"expoPath"],[105,48,140,50],[105,50,140,52,"routes"],[105,56,140,58],[105,58,140,60,"initialRoutes"],[105,71,140,73],[105,73,140,75,"configs"],[105,80,140,82],[105,82,140,84,"expoPath"],[105,90,140,92],[105,91,140,93,"url"],[105,94,140,96],[105,95,140,97,"hash"],[105,99,140,101],[105,100,140,102],[106,6,141,8,"remaining"],[106,15,141,17],[106,18,141,20,"remainingPath"],[106,31,141,33],[107,6,142,8,"result"],[107,12,142,14],[107,15,142,17,"current"],[107,22,142,24],[108,4,143,4],[109,4,144,4],[109,8,144,8,"current"],[109,15,144,15],[109,19,144,19],[109,23,144,23],[109,27,144,27,"result"],[109,33,144,33],[109,37,144,37],[109,41,144,41],[109,43,144,43],[110,6,145,8],[110,13,145,15,"undefined"],[110,22,145,24],[111,4,146,4],[112,4,147,4],[112,11,147,11,"result"],[112,17,147,17],[113,2,148,0],[114,2,152,0],[114,6,152,4,"cachedConfigResources"],[114,27,152,25],[114,30,152,28],[114,31,153,4,"undefined"],[114,40,153,13],[114,42,154,4,"prepareConfigResources"],[114,64,154,26],[114,65,154,27],[114,66,154,28],[114,67,155,1],[115,2,156,0],[115,11,156,9,"getConfigResources"],[115,29,156,27,"getConfigResources"],[115,30,156,28,"options"],[115,37,156,35],[115,39,158,0,"previousSegments"],[115,55,158,16],[115,57,160,2],[116,4,163,4,"cachedConfigResources"],[116,25,163,25],[116,28,163,28],[116,29,163,29,"options"],[116,36,163,36],[116,38,163,38,"prepareConfigResources"],[116,60,163,60],[116,61,163,61,"options"],[116,68,163,68],[116,70,163,70,"previousSegments"],[116,86,163,86],[116,87,163,87],[116,88,163,88],[117,4,166,4],[117,11,166,11,"cachedConfigResources"],[117,32,166,32],[117,33,166,33],[117,34,166,34],[117,35,166,35],[118,2,167,0],[119,2,168,0],[119,11,168,9,"prepareConfigResources"],[119,33,168,31,"prepareConfigResources"],[119,34,168,32,"options"],[119,41,168,39],[119,43,168,41,"previousSegments"],[119,59,168,57],[119,61,168,59],[120,4,169,4],[120,8,169,8,"options"],[120,15,169,15],[120,17,169,17],[121,6,170,8],[121,7,170,9],[121,8,170,10],[121,10,170,12,"native_1"],[121,18,170,20],[121,19,170,21,"validatePathConfig"],[121,37,170,39],[121,39,170,41,"options"],[121,46,170,48],[121,47,170,49],[122,4,171,4],[123,4,172,4],[123,8,172,10,"initialRoutes"],[123,21,172,23],[123,24,172,26,"getInitialRoutes"],[123,40,172,42],[123,41,172,43,"options"],[123,48,172,50],[123,49,172,51],[124,4,173,4],[124,8,173,10,"configs"],[124,15,173,17],[124,18,173,20,"getNormalizedConfigs"],[124,38,173,40],[124,39,173,41,"initialRoutes"],[124,52,173,54],[124,54,173,56,"options"],[124,61,173,63],[124,63,173,65,"screens"],[124,70,173,72],[124,72,173,74,"previousSegments"],[124,88,173,90],[124,89,173,91],[125,4,174,4,"checkForDuplicatedConfigs"],[125,29,174,29],[125,30,174,30,"configs"],[125,37,174,37],[125,38,174,38],[126,4,175,4],[126,8,175,10,"configWithRegexes"],[126,25,175,27],[126,28,175,30,"getConfigsWithRegexes"],[126,49,175,51],[126,50,175,52,"configs"],[126,57,175,59],[126,58,175,60],[127,4,176,4],[127,11,176,11],[128,6,177,8,"initialRoutes"],[128,19,177,21],[129,6,178,8,"configs"],[129,13,178,15],[130,6,179,8,"configWithRegexes"],[131,4,180,4],[131,5,180,5],[132,2,181,0],[133,2,182,0],[133,11,182,9,"getInitialRoutes"],[133,27,182,25,"getInitialRoutes"],[133,28,182,26,"options"],[133,35,182,33],[133,37,182,35],[134,4,183,4],[134,8,183,10,"initialRoutes"],[134,21,183,23],[134,24,183,26],[134,26,183,28],[135,4,184,4],[135,8,184,8,"options"],[135,15,184,15],[135,17,184,17,"initialRouteName"],[135,33,184,33],[135,35,184,35],[136,6,185,8,"initialRoutes"],[136,19,185,21],[136,20,185,22,"push"],[136,24,185,26],[136,25,185,27],[137,8,186,12,"initialRouteName"],[137,24,186,28],[137,26,186,30,"options"],[137,33,186,37],[137,34,186,38,"initialRouteName"],[137,50,186,54],[138,8,187,12,"parentScreens"],[138,21,187,25],[138,23,187,27],[139,6,188,8],[139,7,188,9],[139,8,188,10],[140,4,189,4],[141,4,190,4],[141,11,190,11,"initialRoutes"],[141,24,190,24],[142,2,191,0],[143,2,192,0],[143,11,192,9,"getNormalizedConfigs"],[143,31,192,29,"getNormalizedConfigs"],[143,32,192,30,"initialRoutes"],[143,45,192,43],[143,47,196,2],[144,4,196,2],[144,8,192,45,"screens"],[144,15,192,52],[144,18,192,52,"arguments"],[144,27,192,52],[144,28,192,52,"length"],[144,34,192,52],[144,42,192,52,"arguments"],[144,51,192,52],[144,59,192,52,"undefined"],[144,68,192,52],[144,71,192,52,"arguments"],[144,80,192,52],[144,86,192,55],[144,87,192,56],[144,88,192,57],[145,4,192,57],[145,8,194,0,"previousSegments"],[145,24,194,16],[145,27,194,16,"arguments"],[145,36,194,16],[145,37,194,16,"length"],[145,43,194,16],[145,50,194,16,"arguments"],[145,59,194,16],[145,65,194,16,"undefined"],[145,74,194,16],[146,4,198,4],[146,11,198,11],[146,13,198,13],[146,14,199,9,"concat"],[146,20,199,15],[146,21,199,16],[146,24,199,19,"Object"],[146,30,199,25],[146,31,199,26,"keys"],[146,35,199,30],[146,36,199,31,"screens"],[146,43,199,38],[146,44,199,39],[146,45,199,40,"map"],[146,48,199,43],[146,49,199,45,"key"],[146,52,199,48],[146,56,199,53,"createNormalizedConfigs"],[146,79,199,76],[146,80,199,77,"key"],[146,83,199,80],[146,85,199,82,"screens"],[146,92,199,89],[146,94,199,91],[146,96,199,93],[146,98,199,95,"initialRoutes"],[146,111,199,108],[146,113,199,110],[146,115,199,112],[146,116,199,113],[146,117,199,114],[146,118,199,115],[146,119,200,9,"map"],[146,122,200,12],[146,123,200,13,"expo"],[146,127,200,17],[146,128,200,18,"appendIsInitial"],[146,143,200,33],[146,144,200,34,"initialRoutes"],[146,157,200,47],[146,158,200,48],[146,159,200,49],[146,160,201,9,"sort"],[146,164,201,13],[146,165,201,14,"expo"],[146,169,201,18],[146,170,201,19,"getRouteConfigSorter"],[146,190,201,39],[146,191,201,40,"previousSegments"],[146,207,201,56],[146,208,201,57],[146,209,201,58],[147,2,247,0],[148,2,248,0],[148,11,248,9,"checkForDuplicatedConfigs"],[148,36,248,34,"checkForDuplicatedConfigs"],[148,37,248,35,"configs"],[148,44,248,42],[148,46,248,44],[149,4,250,4,"configs"],[149,11,250,11],[149,12,250,12,"reduce"],[149,18,250,18],[149,19,250,19],[149,20,250,20,"acc"],[149,23,250,23],[149,25,250,25,"config"],[149,31,250,31],[149,36,250,36],[150,6,251,8],[150,10,251,12,"acc"],[150,13,251,15],[150,14,251,16,"config"],[150,20,251,22],[150,21,251,23,"pattern"],[150,28,251,30],[150,29,251,31],[150,31,251,33],[151,8,252,12],[151,12,252,18,"a"],[151,13,252,19],[151,16,252,22,"acc"],[151,19,252,25],[151,20,252,26,"config"],[151,26,252,32],[151,27,252,33,"pattern"],[151,34,252,40],[151,35,252,41],[151,36,252,42,"routeNames"],[151,46,252,52],[152,8,253,12],[152,12,253,18,"b"],[152,13,253,19],[152,16,253,22,"config"],[152,22,253,28],[152,23,253,29,"routeNames"],[152,33,253,39],[153,8,256,12],[153,12,256,18,"intersects"],[153,22,256,28],[153,25,256,31,"a"],[153,26,256,32],[153,27,256,33,"length"],[153,33,256,39],[153,36,256,42,"b"],[153,37,256,43],[153,38,256,44,"length"],[153,44,256,50],[153,47,256,53,"b"],[153,48,256,54],[153,49,256,55,"every"],[153,54,256,60],[153,55,256,61],[153,56,256,62,"it"],[153,58,256,64],[153,60,256,66,"i"],[153,61,256,67],[153,66,256,72,"a"],[153,67,256,73],[153,68,256,74,"i"],[153,69,256,75],[153,70,256,76],[153,75,256,81,"it"],[153,77,256,83],[153,78,256,84],[153,81,256,87,"a"],[153,82,256,88],[153,83,256,89,"every"],[153,88,256,94],[153,89,256,95],[153,90,256,96,"it"],[153,92,256,98],[153,94,256,100,"i"],[153,95,256,101],[153,100,256,106,"b"],[153,101,256,107],[153,102,256,108,"i"],[153,103,256,109],[153,104,256,110],[153,109,256,115,"it"],[153,111,256,117],[153,112,256,118],[154,8,257,12],[154,12,257,16],[154,13,257,17,"intersects"],[154,23,257,27],[154,25,257,29],[155,10,258,16],[155,16,258,22],[155,20,258,26,"Error"],[155,25,258,31],[155,26,258,32],[155,91,258,97,"config"],[155,97,258,103],[155,98,258,104,"pattern"],[155,105,258,111],[155,128,258,134,"a"],[155,129,258,135],[155,130,258,136,"join"],[155,134,258,140],[155,135,258,141],[155,140,258,146],[155,141,258,147],[155,151,258,157,"b"],[155,152,258,158],[155,153,258,159,"join"],[155,157,258,163],[155,158,258,164],[155,163,258,169],[155,164,258,170],[155,236,258,242],[155,237,258,243],[156,8,259,12],[157,6,260,8],[158,6,261,8],[158,13,261,15,"Object"],[158,19,261,21],[158,20,261,22,"assign"],[158,26,261,28],[158,27,261,29,"acc"],[158,30,261,32],[158,32,261,34],[159,8,262,12],[159,9,262,13,"config"],[159,15,262,19],[159,16,262,20,"pattern"],[159,23,262,27],[159,26,262,30,"config"],[160,6,263,8],[160,7,263,9],[160,8,263,10],[161,4,264,4],[161,5,264,5],[161,7,264,7],[161,8,264,8],[161,9,264,9],[161,10,264,10],[162,2,265,0],[163,2,266,0],[163,11,266,9,"getConfigsWithRegexes"],[163,32,266,30,"getConfigsWithRegexes"],[163,33,266,31,"configs"],[163,40,266,38],[163,42,266,40],[164,4,267,4],[164,11,267,11,"configs"],[164,18,267,18],[164,19,267,19,"map"],[164,22,267,22],[164,23,267,24,"c"],[164,24,267,25],[164,29,267,31],[165,6,268,8],[165,9,268,11,"c"],[165,10,268,12],[166,6,272,8,"regex"],[166,11,272,13],[166,13,272,15,"expo"],[166,17,272,19],[166,18,272,20,"configRegExp"],[166,30,272,32],[166,31,272,33,"c"],[166,32,272,34],[167,4,274,4],[167,5,274,5],[167,6,274,6],[167,7,274,7],[168,2,275,0],[169,2,276,0],[169,6,276,6,"joinPaths"],[169,15,276,15],[169,18,276,18],[169,27,276,18,"joinPaths"],[169,28,276,18],[170,4,276,18],[170,13,276,18,"_len"],[170,17,276,18],[170,20,276,18,"arguments"],[170,29,276,18],[170,30,276,18,"length"],[170,36,276,18],[170,38,276,22,"paths"],[170,43,276,27],[170,50,276,27,"Array"],[170,55,276,27],[170,56,276,27,"_len"],[170,60,276,27],[170,63,276,27,"_key"],[170,67,276,27],[170,73,276,27,"_key"],[170,77,276,27],[170,80,276,27,"_len"],[170,84,276,27],[170,86,276,27,"_key"],[170,90,276,27],[171,6,276,22,"paths"],[171,11,276,27],[171,12,276,27,"_key"],[171,16,276,27],[171,20,276,27,"arguments"],[171,29,276,27],[171,30,276,27,"_key"],[171,34,276,27],[172,4,276,27],[173,4,276,27],[173,11,276,32],[173,13,276,34],[173,14,277,5,"concat"],[173,20,277,11],[173,21,277,12],[173,24,277,15,"paths"],[173,29,277,20],[173,30,277,21,"map"],[173,33,277,24],[173,34,277,26,"p"],[173,35,277,27],[173,39,277,32,"p"],[173,40,277,33],[173,41,277,34,"split"],[173,46,277,39],[173,47,277,40],[173,50,277,43],[173,51,277,44],[173,52,277,45],[173,53,277,46],[173,54,278,5,"filter"],[173,60,278,11],[173,61,278,12,"Boolean"],[173,68,278,19],[173,69,278,20],[173,70,279,5,"join"],[173,74,279,9],[173,75,279,10],[173,78,279,13],[173,79,279,14],[174,2,279,14],[175,2,280,0],[175,6,280,6,"matchAgainstConfigs"],[175,25,280,25],[175,28,280,28,"matchAgainstConfigs"],[175,29,280,29,"remaining"],[175,38,280,38],[175,40,280,40,"configs"],[175,47,280,47],[175,52,280,52],[176,4,281,4],[176,8,281,8,"routes"],[176,14,281,14],[177,4,282,4],[177,8,282,8,"remainingPath"],[177,21,282,21],[177,24,282,24,"remaining"],[177,33,282,33],[178,4,284,4],[178,8,284,10,"allParams"],[178,17,284,19],[178,20,284,22,"Object"],[178,26,284,28],[178,27,284,29,"create"],[178,33,284,35],[178,34,284,36],[178,38,284,40],[178,39,284,41],[179,4,284,42],[179,8,284,42,"_loop"],[179,13,284,42],[179,25,284,42,"_loop"],[179,26,284,42,"config"],[179,32,284,42],[179,34,287,34],[180,8,288,8],[180,12,288,12],[180,13,288,13,"config"],[180,19,288,19],[180,20,288,20,"regex"],[180,25,288,25],[180,27,288,27],[181,10,288,27],[182,8,290,8],[183,8,291,8],[183,12,291,14,"match"],[183,17,291,19],[183,20,291,22,"remainingPath"],[183,33,291,35],[183,34,291,36,"match"],[183,39,291,41],[183,40,291,42,"config"],[183,46,291,48],[183,47,291,49,"regex"],[183,52,291,54],[183,53,291,55],[184,8,293,8],[184,12,293,12,"match"],[184,17,293,17],[184,19,293,19],[185,10,294,12],[185,14,294,18,"matchResult"],[185,25,294,29],[185,28,294,32,"config"],[185,34,294,38],[185,35,294,39,"pattern"],[185,42,294,46],[185,44,294,48,"split"],[185,49,294,53],[185,50,294,54],[185,53,294,57],[185,54,294,58],[185,55,294,59,"reduce"],[185,61,294,65],[185,62,294,66],[185,63,294,67,"acc"],[185,66,294,70],[185,68,294,72,"p"],[185,69,294,73],[185,71,294,75,"index"],[185,76,294,80],[185,81,294,85],[186,12,295,16],[186,16,295,20],[186,17,295,21,"expo"],[186,21,295,25],[186,22,295,26,"isDynamicPart"],[186,35,295,39],[186,36,295,40,"p"],[186,37,295,41],[186,38,295,42],[186,40,295,44],[187,14,296,20],[187,21,296,27,"acc"],[187,24,296,30],[188,12,297,16],[189,12,298,16,"acc"],[189,15,298,19],[189,16,298,20,"pos"],[189,19,298,23],[189,23,298,27],[189,24,298,28],[190,12,300,16],[190,16,300,22,"decodedParamSegment"],[190,35,300,41],[190,38,300,44,"expo"],[190,42,300,48],[190,43,300,49,"safelyDecodeURIComponent"],[190,67,300,73],[190,68,303,16,"match"],[190,73,303,21],[190,74,303,22],[190,75,303,23,"acc"],[190,78,303,26],[190,79,303,27,"pos"],[190,82,303,30],[190,85,303,33],[190,86,303,34],[190,90,303,38],[190,91,303,39],[190,92,303,40],[190,93,305,21,"replace"],[190,100,305,28],[190,101,305,29],[190,106,305,34],[190,108,305,36],[190,110,305,38],[190,111,305,39],[190,112,305,40],[191,12,307,16,"Object"],[191,18,307,22],[191,19,307,23,"assign"],[191,25,307,29],[191,26,307,30,"acc"],[191,29,307,33],[191,30,307,34,"matchedParams"],[191,43,307,47],[191,45,307,49],[192,14,308,20],[192,15,308,21,"p"],[192,16,308,22],[192,19,308,25,"Object"],[192,25,308,31],[192,26,308,32,"assign"],[192,32,308,38],[192,33,308,39,"acc"],[192,36,308,42],[192,37,308,43,"matchedParams"],[192,50,308,56],[192,51,308,57,"p"],[192,52,308,58],[192,53,308,59],[192,57,308,63],[192,58,308,64],[192,59,308,65],[192,61,308,67],[193,16,309,24],[193,17,309,25,"index"],[193,22,309,30],[193,25,309,33,"decodedParamSegment"],[194,14,310,20],[194,15,310,21],[195,12,311,16],[195,13,311,17],[195,14,311,18],[196,12,312,16],[196,19,312,23,"acc"],[196,22,312,26],[197,10,313,12],[197,11,313,13],[197,13,313,15],[198,12,313,17,"pos"],[198,15,313,20],[198,17,313,22],[198,18,313,23],[198,19,313,24],[199,12,313,26,"matchedParams"],[199,25,313,39],[199,27,313,41],[199,28,313,42],[200,10,313,44],[200,11,313,45],[200,12,313,46],[201,10,314,12],[201,14,314,18,"matchedParams"],[201,27,314,31],[201,30,314,34,"matchResult"],[201,41,314,45],[201,42,314,46,"matchedParams"],[201,55,314,59],[201,59,314,63],[201,60,314,64],[201,61,314,65],[202,10,315,12,"routes"],[202,16,315,18],[202,19,315,21,"config"],[202,25,315,27],[202,26,315,28,"routeNames"],[202,36,315,38],[202,37,315,39,"map"],[202,40,315,42],[202,41,315,44,"name"],[202,45,315,48],[202,49,315,53],[203,12,316,16],[203,16,316,22,"routeConfig"],[203,27,316,33],[203,30,316,36,"configs"],[203,37,316,43],[203,38,316,44,"find"],[203,42,316,48],[203,43,316,50,"c"],[203,44,316,51],[203,48,316,56],[204,14,318,20],[204,21,318,27,"c"],[204,22,318,28],[204,23,318,29,"screen"],[204,29,318,35],[204,34,318,40,"name"],[204,38,318,44],[204,42,318,48,"config"],[204,48,318,54],[204,49,318,55,"pattern"],[204,56,318,62],[204,57,318,63,"startsWith"],[204,67,318,73],[204,68,318,74,"c"],[204,69,318,75],[204,70,318,76,"pattern"],[204,77,318,83],[204,78,318,84],[205,12,319,16],[205,13,319,17],[205,14,319,18],[206,12,321,16],[206,16,321,22,"normalizedPath"],[206,30,321,36],[206,33,321,39,"routeConfig"],[206,44,321,50],[206,46,321,52,"path"],[206,50,321,56],[206,51,321,57,"split"],[206,56,321,62],[206,57,321,63],[206,60,321,66],[206,61,321,67],[206,62,321,68,"filter"],[206,68,321,74],[206,69,321,75,"Boolean"],[206,76,321,82],[206,77,321,83],[206,78,321,84,"join"],[206,82,321,88],[206,83,321,89],[206,86,321,92],[206,87,321,93],[207,12,323,16],[207,16,323,22,"numInitialSegments"],[207,34,323,40],[207,37,323,43,"routeConfig"],[207,48,323,54],[207,50,323,56,"pattern"],[207,57,323,63],[207,58,325,21,"replace"],[207,65,325,28],[207,66,325,29],[207,70,325,33,"RegExp"],[207,76,325,39],[207,77,325,40],[207,80,325,43],[207,81,325,44],[207,82,325,45],[207,84,325,47,"escape_string_regexp_1"],[207,106,325,69],[207,107,325,70,"default"],[207,114,325,77],[207,116,325,79,"normalizedPath"],[207,130,325,93],[207,131,325,94],[207,134,325,97],[207,135,325,98],[207,137,325,100],[207,139,325,102],[207,140,325,103],[207,142,326,22,"split"],[207,147,326,27],[207,148,326,28],[207,151,326,31],[207,152,326,32],[207,153,326,33,"length"],[207,159,326,39],[208,12,327,16],[208,16,327,22,"params"],[208,22,327,28],[208,25,327,31,"normalizedPath"],[208,39,327,45],[208,41,328,22,"split"],[208,46,328,27],[208,47,328,28],[208,50,328,31],[208,51,328,32],[208,52,329,21,"reduce"],[208,58,329,27],[208,59,329,28],[208,60,329,29,"acc"],[208,63,329,32],[208,65,329,34,"p"],[208,66,329,35],[208,68,329,37,"index"],[208,73,329,42],[208,78,329,47],[209,14,330,20],[209,18,330,24],[209,19,330,25,"expo"],[209,23,330,29],[209,24,330,30,"isDynamicPart"],[209,37,330,43],[209,38,330,44,"p"],[209,39,330,45],[209,40,330,46],[209,42,330,48],[210,16,331,24],[210,23,331,31,"acc"],[210,26,331,34],[211,14,332,20],[212,14,335,20],[212,18,335,26,"offset"],[212,24,335,32],[212,27,335,35,"numInitialSegments"],[212,45,335,53],[212,48,335,56,"numInitialSegments"],[212,66,335,74],[212,69,335,77],[212,70,335,78],[212,73,335,81],[212,74,335,82],[213,14,338,20],[213,18,338,26,"value"],[213,23,338,31],[213,26,338,34,"expo"],[213,30,338,38],[213,31,338,39,"getParamValue"],[213,44,338,52],[213,45,338,53,"p"],[213,46,338,54],[213,48,338,56,"matchedParams"],[213,61,338,69],[213,62,338,70,"p"],[213,63,338,71],[213,64,338,72],[213,67,338,75,"index"],[213,72,338,80],[213,75,338,83,"offset"],[213,81,338,89],[213,82,338,90],[213,83,338,91],[214,14,340,20],[214,18,340,24,"value"],[214,23,340,29],[214,25,340,31],[215,16,343,24],[215,20,343,30,"key"],[215,23,343,33],[215,26,343,36,"expo"],[215,30,343,40],[215,31,343,41,"replacePart"],[215,42,343,52],[215,43,343,53,"p"],[215,44,343,54],[215,45,343,55],[216,16,345,24,"acc"],[216,19,345,27],[216,20,345,28,"key"],[216,23,345,31],[216,24,345,32],[216,27,345,35,"routeConfig"],[216,38,345,46],[216,40,345,48,"parse"],[216,45,345,53],[216,48,345,56,"key"],[216,51,345,59],[216,52,345,60],[216,55,345,63,"routeConfig"],[216,66,345,74],[216,67,345,75,"parse"],[216,72,345,80],[216,73,345,81,"key"],[216,76,345,84],[216,77,345,85],[216,78,345,86,"value"],[216,83,345,91],[216,84,345,92],[216,87,345,95,"value"],[216,92,345,100],[217,14,346,20],[218,14,347,20],[218,21,347,27,"acc"],[218,24,347,30],[219,12,348,16],[219,13,348,17],[219,15,348,19],[219,16,348,20],[219,17,348,21],[219,18,348,22],[220,12,349,16],[220,16,349,20,"params"],[220,22,349,26],[220,26,349,30,"Object"],[220,32,349,36],[220,33,349,37,"keys"],[220,37,349,41],[220,38,349,42,"params"],[220,44,349,48],[220,45,349,49],[220,46,349,50,"length"],[220,52,349,56],[220,54,349,58],[221,14,350,20,"Object"],[221,20,350,26],[221,21,350,27,"assign"],[221,27,350,33],[221,28,350,34,"allParams"],[221,37,350,43],[221,39,350,45,"params"],[221,45,350,51],[221,46,350,52],[222,14,351,20],[222,21,351,27],[223,16,351,29,"name"],[223,20,351,33],[224,16,351,35,"params"],[225,14,351,42],[225,15,351,43],[226,12,352,16],[227,12,353,16],[227,19,353,23],[228,14,353,25,"name"],[229,12,353,30],[229,13,353,31],[230,10,354,12],[230,11,354,13],[230,12,354,14],[231,10,355,12,"remainingPath"],[231,23,355,25],[231,26,355,28,"remainingPath"],[231,39,355,41],[231,40,355,42,"replace"],[231,47,355,49],[231,48,355,50,"match"],[231,53,355,55],[231,54,355,56],[231,55,355,57],[231,56,355,58],[231,58,355,60],[231,60,355,62],[231,61,355,63],[232,10,355,64],[233,8,357,8],[234,6,358,4],[234,7,358,5],[235,6,358,5,"_ret"],[235,10,358,5],[236,4,287,4],[236,9,287,9],[236,13,287,15,"config"],[236,19,287,21],[236,23,287,25,"configs"],[236,30,287,32],[237,6,287,32,"_ret"],[237,10,287,32],[237,13,287,32,"_loop"],[237,18,287,32],[237,19,287,32,"config"],[237,25,287,32],[238,6,287,32],[238,10,287,32,"_ret"],[238,14,287,32],[238,22,289,12],[239,6,289,21],[239,10,289,21,"_ret"],[239,14,289,21],[239,22,356,12],[240,4,356,18],[241,4,360,4,"expo"],[241,8,360,8],[241,9,360,9,"populateParams"],[241,23,360,23],[241,24,360,24,"routes"],[241,30,360,30],[241,32,360,32,"allParams"],[241,41,360,41],[241,42,360,42],[242,4,362,4],[242,11,362,11],[243,6,362,13,"routes"],[243,12,362,19],[244,6,362,21,"remainingPath"],[245,4,362,35],[245,5,362,36],[246,2,363,0],[246,3,363,1],[247,2,364,0],[247,6,364,6,"createNormalizedConfigs"],[247,29,364,29],[247,32,364,32],[247,41,364,32,"createNormalizedConfigs"],[247,42,364,33,"screen"],[247,48,364,39],[247,50,364,41,"routeConfig"],[247,61,364,52],[247,63,364,114],[248,4,364,114],[248,8,364,54,"routeNames"],[248,18,364,64],[248,21,364,64,"arguments"],[248,30,364,64],[248,31,364,64,"length"],[248,37,364,64],[248,45,364,64,"arguments"],[248,54,364,64],[248,62,364,64,"undefined"],[248,71,364,64],[248,74,364,64,"arguments"],[248,83,364,64],[248,89,364,67],[248,91,364,69],[249,4,364,69],[249,8,364,71,"initials"],[249,16,364,79],[249,19,364,79,"arguments"],[249,28,364,79],[249,29,364,79,"length"],[249,35,364,79],[249,42,364,79,"arguments"],[249,51,364,79],[249,57,364,79,"undefined"],[249,66,364,79],[250,4,364,79],[250,8,364,81,"parentScreens"],[250,21,364,94],[250,24,364,94,"arguments"],[250,33,364,94],[250,34,364,94,"length"],[250,40,364,94],[250,47,364,94,"arguments"],[250,56,364,94],[250,62,364,94,"undefined"],[250,71,364,94],[251,4,364,94],[251,8,364,96,"parentPattern"],[251,21,364,109],[251,24,364,109,"arguments"],[251,33,364,109],[251,34,364,109,"length"],[251,40,364,109],[251,47,364,109,"arguments"],[251,56,364,109],[251,62,364,109,"undefined"],[251,71,364,109],[252,4,365,4],[252,8,365,10,"configs"],[252,15,365,17],[252,18,365,20],[252,20,365,22],[253,4,366,4,"routeNames"],[253,14,366,14],[253,15,366,15,"push"],[253,19,366,19],[253,20,366,20,"screen"],[253,26,366,26],[253,27,366,27],[254,4,367,4,"parentScreens"],[254,17,367,17],[254,18,367,18,"push"],[254,22,367,22],[254,23,367,23,"screen"],[254,29,367,29],[254,30,367,30],[255,4,369,4],[255,8,369,10,"config"],[255,14,369,16],[255,17,369,19,"routeConfig"],[255,28,369,30],[255,29,369,31,"screen"],[255,35,369,37],[255,36,369,38],[256,4,370,4],[256,8,370,8],[256,15,370,15,"config"],[256,21,370,21],[256,26,370,26],[256,34,370,34],[256,36,370,36],[257,6,372,8],[257,10,372,14,"pattern"],[257,17,372,21],[257,20,372,24,"parentPattern"],[257,33,372,37],[257,36,372,40,"joinPaths"],[257,45,372,49],[257,46,372,50,"parentPattern"],[257,59,372,63],[257,61,372,65,"config"],[257,67,372,71],[257,68,372,72],[257,71,372,75,"config"],[257,77,372,81],[258,6,373,8,"configs"],[258,13,373,15],[258,14,373,16,"push"],[258,18,373,20],[258,19,373,21,"createConfigItem"],[258,35,373,37],[258,36,373,38,"screen"],[258,42,373,44],[258,44,373,46,"routeNames"],[258,54,373,56],[258,56,373,58,"pattern"],[258,63,373,65],[258,65,373,67,"config"],[258,71,373,73],[258,72,373,74],[258,73,373,75],[259,4,374,4],[259,5,374,5],[259,11,375,9],[259,15,375,13],[259,22,375,20,"config"],[259,28,375,26],[259,33,375,31],[259,41,375,39],[259,43,375,41],[260,6,376,8],[260,10,376,12,"pattern"],[260,18,376,19],[261,6,380,8],[261,10,380,12],[261,17,380,19,"config"],[261,23,380,25],[261,24,380,26,"path"],[261,28,380,30],[261,33,380,35],[261,41,380,43],[261,43,380,45],[262,8,381,12],[262,12,381,16,"config"],[262,18,381,22],[262,19,381,23,"exact"],[262,24,381,28],[262,28,381,32,"config"],[262,34,381,38],[262,35,381,39,"path"],[262,39,381,43],[262,44,381,48,"undefined"],[262,53,381,57],[262,55,381,59],[263,10,382,16],[263,16,382,22],[263,20,382,26,"Error"],[263,25,382,31],[263,26,382,32],[263,176,382,182],[263,177,382,183],[264,8,383,12],[265,8,384,12,"pattern"],[265,16,384,19],[265,19,385,16,"config"],[265,25,385,22],[265,26,385,23,"exact"],[265,31,385,28],[265,36,385,33],[265,40,385,37],[265,43,386,22,"joinPaths"],[265,52,386,31],[265,53,386,32,"parentPattern"],[265,66,386,45],[265,70,386,49],[265,72,386,51],[265,74,386,53,"config"],[265,80,386,59],[265,81,386,60,"path"],[265,85,386,64],[265,89,386,68],[265,91,386,70],[265,92,386,71],[265,95,387,22,"config"],[265,101,387,28],[265,102,387,29,"path"],[265,106,387,33],[265,110,387,37],[265,112,387,39],[266,8,388,12],[266,12,388,16,"screen"],[266,18,388,22],[266,23,388,27,"constants_1"],[266,34,388,38],[266,35,388,39,"INTERNAL_SLOT_NAME"],[266,53,388,57],[266,55,388,59],[267,10,389,16,"configs"],[267,17,389,23],[267,18,389,24,"push"],[267,22,389,28],[267,23,389,29,"createConfigItem"],[267,39,389,45],[267,40,389,46,"screen"],[267,46,389,52],[267,48,389,54,"routeNames"],[267,58,389,64],[267,60,389,66,"pattern"],[267,68,389,73],[267,70,389,75,"config"],[267,76,389,81],[267,77,389,82,"path"],[267,81,389,86],[267,83,389,88,"config"],[267,89,389,94],[267,90,389,95,"parse"],[267,95,389,100],[267,97,389,102,"config"],[267,103,389,108],[267,104,389,109],[267,105,389,110],[268,8,390,12],[269,6,391,8],[270,6,392,8],[270,10,392,12,"config"],[270,16,392,18],[270,17,392,19,"screens"],[270,24,392,26],[270,26,392,28],[271,8,394,12],[271,12,394,16,"config"],[271,18,394,22],[271,19,394,23,"initialRouteName"],[271,35,394,39],[271,37,394,41],[272,10,395,16,"initials"],[272,18,395,24],[272,19,395,25,"push"],[272,23,395,29],[272,24,395,30],[273,12,396,20,"initialRouteName"],[273,28,396,36],[273,30,396,38,"config"],[273,36,396,44],[273,37,396,45,"initialRouteName"],[273,53,396,61],[274,12,397,20,"parentScreens"],[275,10,398,16],[275,11,398,17],[275,12,398,18],[276,8,399,12],[277,8,400,12,"Object"],[277,14,400,18],[277,15,400,19,"keys"],[277,19,400,23],[277,20,400,24,"config"],[277,26,400,30],[277,27,400,31,"screens"],[277,34,400,38],[277,35,400,39],[277,36,400,40,"forEach"],[277,43,400,47],[277,44,400,49,"nestedConfig"],[277,56,400,61],[277,60,400,66],[278,10,401,16],[278,14,401,22,"result"],[278,20,401,28],[278,23,401,31,"createNormalizedConfigs"],[278,46,401,54],[278,47,401,55,"nestedConfig"],[278,59,401,67],[278,61,401,69,"config"],[278,67,401,75],[278,68,401,76,"screens"],[278,75,401,83],[278,77,401,85,"routeNames"],[278,87,401,95],[278,89,401,97,"initials"],[278,97,401,105],[278,99,401,107],[278,100,401,108],[278,103,401,111,"parentScreens"],[278,116,401,124],[278,117,401,125],[278,119,401,127,"pattern"],[278,127,401,134],[278,131,401,138,"parentPattern"],[278,144,401,151],[278,145,401,152],[279,10,402,16,"configs"],[279,17,402,23],[279,18,402,24,"push"],[279,22,402,28],[279,23,402,29],[279,26,402,32,"result"],[279,32,402,38],[279,33,402,39],[280,8,403,12],[280,9,403,13],[280,10,403,14],[281,6,404,8],[282,4,405,4],[283,4,406,4,"routeNames"],[283,14,406,14],[283,15,406,15,"pop"],[283,18,406,18],[283,19,406,19],[283,20,406,20],[284,4,407,4],[284,11,407,11,"configs"],[284,18,407,18],[285,2,408,0],[285,3,408,1],[286,2,409,0],[286,6,409,6,"createConfigItem"],[286,22,409,22],[286,25,409,25],[286,34,409,25,"createConfigItem"],[286,35,409,26,"screen"],[286,41,409,32],[286,43,409,34,"routeNames"],[286,53,409,44],[286,55,409,46,"pattern"],[286,62,409,53],[286,64,409,55,"path"],[286,68,409,59],[286,70,409,96],[287,4,409,96],[287,8,409,61,"parse"],[287,13,409,66],[287,16,409,66,"arguments"],[287,25,409,66],[287,26,409,66,"length"],[287,32,409,66],[287,40,409,66,"arguments"],[287,49,409,66],[287,57,409,66,"undefined"],[287,66,409,66],[287,69,409,66,"arguments"],[287,78,409,66],[287,84,409,69,"undefined"],[287,93,409,78],[288,4,409,78],[288,8,409,80,"config"],[288,14,409,86],[288,17,409,86,"arguments"],[288,26,409,86],[288,27,409,86,"length"],[288,33,409,86],[288,41,409,86,"arguments"],[288,50,409,86],[288,58,409,86,"undefined"],[288,67,409,86],[288,70,409,86,"arguments"],[288,79,409,86],[288,85,409,89],[288,86,409,90],[288,87,409,91],[289,4,411,4,"pattern"],[289,11,411,11],[289,14,411,14,"pattern"],[289,21,411,21],[289,22,411,22,"split"],[289,27,411,27],[289,28,411,28],[289,31,411,31],[289,32,411,32],[289,33,411,33,"filter"],[289,39,411,39],[289,40,411,40,"Boolean"],[289,47,411,47],[289,48,411,48],[289,49,411,49,"join"],[289,53,411,53],[289,54,411,54],[289,57,411,57],[289,58,411,58],[290,4,413,4],[290,8,413,10,"regex"],[290,13,413,15],[290,16,413,18,"pattern"],[290,23,413,25],[290,26,413,28,"expo"],[290,30,413,32],[290,31,413,33,"routePatternToRegex"],[290,50,413,52],[290,51,413,53,"pattern"],[290,58,413,60],[290,59,413,61],[290,62,413,64,"undefined"],[290,71,413,73],[291,4,428,4],[291,11,428,11],[292,6,429,8,"screen"],[292,12,429,14],[293,6,430,8,"regex"],[293,11,430,13],[294,6,431,8,"pattern"],[294,13,431,15],[295,6,432,8,"path"],[295,10,432,12],[296,6,434,8,"routeNames"],[296,16,434,18],[296,18,434,20],[296,19,434,21],[296,22,434,24,"routeNames"],[296,32,434,34],[296,33,434,35],[297,6,435,8,"parse"],[297,11,435,13],[298,6,437,8],[298,9,437,11,"expo"],[298,13,437,15],[298,14,437,16,"createConfig"],[298,26,437,28],[298,27,437,29,"screen"],[298,33,437,35],[298,35,437,37,"pattern"],[298,42,437,44],[298,44,437,46,"routeNames"],[298,54,437,56],[298,56,437,58,"config"],[298,62,437,64],[299,4,439,4],[299,5,439,5],[300,2,440,0],[300,3,440,1],[301,2,441,0],[301,6,441,6,"findParseConfigForRoute"],[301,29,441,29],[301,32,441,32,"findParseConfigForRoute"],[301,33,441,33,"routeName"],[301,42,441,42],[301,44,441,44,"flatConfig"],[301,54,441,54],[301,59,441,59],[302,4,442,4],[302,9,442,9],[302,13,442,15,"config"],[302,19,442,21],[302,23,442,25,"flatConfig"],[302,33,442,35],[302,35,442,37],[303,6,443,8],[303,10,443,12,"routeName"],[303,19,443,21],[303,24,443,26,"config"],[303,30,443,32],[303,31,443,33,"routeNames"],[303,41,443,43],[303,42,443,44,"config"],[303,48,443,50],[303,49,443,51,"routeNames"],[303,59,443,61],[303,60,443,62,"length"],[303,66,443,68],[303,69,443,71],[303,70,443,72],[303,71,443,73],[303,73,443,75],[304,8,444,12],[304,15,444,19,"config"],[304,21,444,25],[304,22,444,26,"parse"],[304,27,444,31],[305,6,445,8],[306,4,446,4],[307,4,447,4],[307,11,447,11,"undefined"],[307,20,447,20],[308,2,448,0],[308,3,448,1],[309,2,450,0],[309,6,450,6,"findInitialRoute"],[309,22,450,22],[309,25,450,25,"findInitialRoute"],[309,26,450,26,"routeName"],[309,35,450,35],[309,37,450,37,"parentScreens"],[309,50,450,50],[309,52,450,52,"initialRoutes"],[309,65,450,65],[309,70,450,70],[310,4,451,4],[310,9,451,9],[310,13,451,15,"config"],[310,19,451,21],[310,23,451,25,"initialRoutes"],[310,36,451,38],[310,38,451,40],[311,6,452,8],[311,10,452,12,"parentScreens"],[311,23,452,25],[311,24,452,26,"length"],[311,30,452,32],[311,35,452,37,"config"],[311,41,452,43],[311,42,452,44,"parentScreens"],[311,55,452,57],[311,56,452,58,"length"],[311,62,452,64],[311,64,452,66],[312,8,453,12],[312,12,453,16,"sameParents"],[312,23,453,27],[312,26,453,30],[312,30,453,34],[313,8,454,12],[313,13,454,17],[313,17,454,21,"i"],[313,18,454,22],[313,21,454,25],[313,22,454,26],[313,24,454,28,"i"],[313,25,454,29],[313,28,454,32,"parentScreens"],[313,41,454,45],[313,42,454,46,"length"],[313,48,454,52],[313,50,454,54,"i"],[313,51,454,55],[313,53,454,57],[313,55,454,59],[314,10,455,16],[314,14,455,20,"parentScreens"],[314,27,455,33],[314,28,455,34,"i"],[314,29,455,35],[314,30,455,36],[314,31,455,37,"localeCompare"],[314,44,455,50],[314,45,455,51,"config"],[314,51,455,57],[314,52,455,58,"parentScreens"],[314,65,455,71],[314,66,455,72,"i"],[314,67,455,73],[314,68,455,74],[314,69,455,75],[314,74,455,80],[314,75,455,81],[314,77,455,83],[315,12,456,20,"sameParents"],[315,23,456,31],[315,26,456,34],[315,31,456,39],[316,12,457,20],[317,10,458,16],[318,8,459,12],[319,8,460,12],[319,12,460,16,"sameParents"],[319,23,460,27],[319,25,460,29],[320,10,461,16],[320,17,461,23,"routeName"],[320,26,461,32],[320,31,461,37,"config"],[320,37,461,43],[320,38,461,44,"initialRouteName"],[320,54,461,60],[320,57,461,63,"config"],[320,63,461,69],[320,64,461,70,"initialRouteName"],[320,80,461,86],[320,83,461,89,"undefined"],[320,92,461,98],[321,8,462,12],[322,6,463,8],[323,4,464,4],[324,4,465,4],[324,11,465,11,"undefined"],[324,20,465,20],[325,2,466,0],[325,3,466,1],[326,2,469,0],[326,6,469,6,"createStateObject"],[326,23,469,23],[326,26,469,26,"createStateObject"],[326,27,469,27,"initialRoute"],[326,39,469,39],[326,41,469,41,"route"],[326,46,469,46],[326,48,469,48,"isEmpty"],[326,55,469,55],[326,60,469,60],[327,4,470,4],[327,8,470,8,"isEmpty"],[327,15,470,15],[327,17,470,17],[328,6,471,8],[328,10,471,12,"initialRoute"],[328,22,471,24],[328,24,471,26],[329,8,472,12],[329,15,472,19],[330,10,473,16,"index"],[330,15,473,21],[330,17,473,23],[330,18,473,24],[331,10,474,16,"routes"],[331,16,474,22],[331,18,474,24],[331,19,474,25],[332,12,474,27,"name"],[332,16,474,31],[332,18,474,33,"initialRoute"],[332,30,474,45],[333,12,474,47,"params"],[333,18,474,53],[333,20,474,55,"route"],[333,25,474,60],[333,26,474,61,"params"],[334,10,474,68],[334,11,474,69],[334,13,474,71,"route"],[334,18,474,76],[335,8,475,12],[335,9,475,13],[336,6,476,8],[336,7,476,9],[336,13,477,13],[337,8,478,12],[337,15,478,19],[338,10,479,16,"routes"],[338,16,479,22],[338,18,479,24],[338,19,479,25,"route"],[338,24,479,30],[339,8,480,12],[339,9,480,13],[340,6,481,8],[341,4,482,4],[341,5,482,5],[341,11,483,9],[342,6,484,8],[342,10,484,12,"initialRoute"],[342,22,484,24],[342,24,484,26],[343,8,485,12],[343,15,485,19],[344,10,486,16,"index"],[344,15,486,21],[344,17,486,23],[344,18,486,24],[345,10,487,16,"routes"],[345,16,487,22],[345,18,487,24],[345,19,488,20],[346,12,488,22,"name"],[346,16,488,26],[346,18,488,28,"initialRoute"],[346,30,488,40],[347,12,488,42,"params"],[347,18,488,48],[347,20,488,50,"route"],[347,25,488,55],[347,26,488,56,"params"],[348,10,488,63],[348,11,488,64],[348,13,489,20],[349,12,489,22],[349,15,489,25,"route"],[349,20,489,30],[350,12,489,32,"state"],[350,17,489,37],[350,19,489,39],[351,14,489,41,"routes"],[351,20,489,47],[351,22,489,49],[352,12,489,52],[353,10,489,54],[353,11,489,55],[354,8,491,12],[354,9,491,13],[355,6,492,8],[355,7,492,9],[355,13,493,13],[356,8,494,12],[356,15,494,19],[357,10,495,16,"routes"],[357,16,495,22],[357,18,495,24],[357,19,495,25],[358,12,495,27],[358,15,495,30,"route"],[358,20,495,35],[359,12,495,37,"state"],[359,17,495,42],[359,19,495,44],[360,14,495,46,"routes"],[360,20,495,52],[360,22,495,54],[361,12,495,57],[362,10,495,59],[362,11,495,60],[363,8,496,12],[363,9,496,13],[364,6,497,8],[365,4,498,4],[366,2,499,0],[366,3,499,1],[367,2,500,0],[367,6,500,6,"createNestedStateObject"],[367,29,500,29],[367,32,500,32,"createNestedStateObject"],[367,33,500,32,"_ref"],[367,37,500,32],[367,39,500,55,"routes"],[367,45,500,61],[367,47,500,63,"initialRoutes"],[367,60,500,76],[367,62,500,78,"flatConfig"],[367,72,500,88],[367,74,500,90,"hash"],[367,78,500,94],[367,83,500,99],[368,4,500,99],[368,8,500,35,"path"],[368,12,500,39],[368,15,500,39,"_ref"],[368,19,500,39],[368,20,500,35,"path"],[368,24,500,39],[369,6,500,44,"expoURL"],[369,13,500,51],[369,16,500,51,"_objectWithoutProperties"],[369,40,500,51],[369,41,500,51,"_ref"],[369,45,500,51],[369,47,500,51,"_excluded"],[369,56,500,51],[370,4,501,4],[370,8,501,8,"route"],[370,13,501,13],[370,16,501,16,"routes"],[370,22,501,22],[370,23,501,23,"shift"],[370,28,501,28],[370,29,501,29],[370,30,501,30],[371,4,502,4],[371,8,502,10,"parentScreens"],[371,21,502,23],[371,24,502,26],[371,26,502,28],[372,4,503,4],[372,8,503,8,"initialRoute"],[372,20,503,20],[372,23,503,23,"findInitialRoute"],[372,39,503,39],[372,40,503,40,"route"],[372,45,503,45],[372,46,503,46,"name"],[372,50,503,50],[372,52,503,52,"parentScreens"],[372,65,503,65],[372,67,503,67,"initialRoutes"],[372,80,503,80],[372,81,503,81],[373,4,504,4,"parentScreens"],[373,17,504,17],[373,18,504,18,"push"],[373,22,504,22],[373,23,504,23,"route"],[373,28,504,28],[373,29,504,29,"name"],[373,33,504,33],[373,34,504,34],[374,4,505,4],[374,8,505,10,"state"],[374,13,505,15],[374,16,505,18,"createStateObject"],[374,33,505,35],[374,34,505,36,"initialRoute"],[374,46,505,48],[374,48,505,50,"route"],[374,53,505,55],[374,55,505,57,"routes"],[374,61,505,63],[374,62,505,64,"length"],[374,68,505,70],[374,73,505,75],[374,74,505,76],[374,75,505,77],[375,4,506,4],[375,8,506,8,"routes"],[375,14,506,14],[375,15,506,15,"length"],[375,21,506,21],[375,24,506,24],[375,25,506,25],[375,27,506,27],[376,6,507,8],[376,10,507,12,"nestedState"],[376,21,507,23],[376,24,507,26,"state"],[376,29,507,31],[377,6,508,8],[377,13,508,16,"route"],[377,18,508,21],[377,21,508,24,"routes"],[377,27,508,30],[377,28,508,31,"shift"],[377,33,508,36],[377,34,508,37],[377,35,508,38],[377,37,508,41],[378,8,509,12,"initialRoute"],[378,20,509,24],[378,23,509,27,"findInitialRoute"],[378,39,509,43],[378,40,509,44,"route"],[378,45,509,49],[378,46,509,50,"name"],[378,50,509,54],[378,52,509,56,"parentScreens"],[378,65,509,69],[378,67,509,71,"initialRoutes"],[378,80,509,84],[378,81,509,85],[379,8,510,12],[379,12,510,18,"nestedStateIndex"],[379,28,510,34],[379,31,510,37,"nestedState"],[379,42,510,48],[379,43,510,49,"index"],[379,48,510,54],[379,52,510,58,"nestedState"],[379,63,510,69],[379,64,510,70,"routes"],[379,70,510,76],[379,71,510,77,"length"],[379,77,510,83],[379,80,510,86],[379,81,510,87],[380,8,511,12,"nestedState"],[380,19,511,23],[380,20,511,24,"routes"],[380,26,511,30],[380,27,511,31,"nestedStateIndex"],[380,43,511,47],[380,44,511,48],[380,45,511,49,"state"],[380,50,511,54],[380,53,511,57,"createStateObject"],[380,70,511,74],[380,71,511,75,"initialRoute"],[380,83,511,87],[380,85,511,89,"route"],[380,90,511,94],[380,92,511,96,"routes"],[380,98,511,102],[380,99,511,103,"length"],[380,105,511,109],[380,110,511,114],[380,111,511,115],[380,112,511,116],[381,8,512,12],[381,12,512,16,"routes"],[381,18,512,22],[381,19,512,23,"length"],[381,25,512,29],[381,28,512,32],[381,29,512,33],[381,31,512,35],[382,10,513,16,"nestedState"],[382,21,513,27],[382,24,513,30,"nestedState"],[382,35,513,41],[382,36,513,42,"routes"],[382,42,513,48],[382,43,513,49,"nestedStateIndex"],[382,59,513,65],[382,60,513,66],[382,61,513,67,"state"],[382,66,513,72],[383,8,514,12],[384,8,515,12,"parentScreens"],[384,21,515,25],[384,22,515,26,"push"],[384,26,515,30],[384,27,515,31,"route"],[384,32,515,36],[384,33,515,37,"name"],[384,37,515,41],[384,38,515,42],[385,6,516,8],[386,4,517,4],[387,4,518,4,"route"],[387,9,518,9],[387,12,518,12],[387,13,518,13],[387,14,518,14],[387,16,518,16,"findFocusedRoute_1"],[387,34,518,34],[387,35,518,35,"findFocusedRoute"],[387,51,518,51],[387,53,518,53,"state"],[387,58,518,58],[387,59,518,59],[388,4,520,4,"route"],[388,9,520,9],[388,10,520,10,"path"],[388,14,520,14],[388,17,520,17,"expoURL"],[388,24,520,24],[388,25,520,25,"pathWithoutGroups"],[388,42,520,42],[389,4,525,4],[389,8,525,10,"params"],[389,14,525,16],[389,17,525,19,"expo"],[389,21,525,23],[389,22,525,24,"parseQueryParams"],[389,38,525,40],[389,39,525,41,"path"],[389,43,525,45],[389,45,525,47,"route"],[389,50,525,52],[389,52,525,54,"flatConfig"],[389,62,525,64],[389,65,525,67,"findParseConfigForRoute"],[389,88,525,90],[389,89,525,91,"route"],[389,94,525,96],[389,95,525,97,"name"],[389,99,525,101],[389,101,525,103,"flatConfig"],[389,111,525,113],[389,112,525,114],[389,115,525,117,"undefined"],[389,124,525,126],[389,126,525,128,"hash"],[389,130,525,132],[389,131,525,133],[390,4,529,4],[390,8,529,8,"params"],[390,14,529,14],[390,16,529,16],[391,6,530,8,"route"],[391,11,530,13],[391,12,530,14,"params"],[391,18,530,20],[391,21,530,23],[392,8,530,25],[392,11,530,28,"route"],[392,16,530,33],[392,17,530,34,"params"],[392,23,530,40],[393,8,530,42],[393,11,530,45,"params"],[394,6,530,52],[394,7,530,53],[395,4,531,4],[396,4,533,4],[396,11,533,11,"state"],[396,16,533,16],[397,2,534,0],[397,3,534,1],[398,0,534,2],[398,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","ownKeys","getStateFromPath","remaining.split.filter.map$argument_0","match.routeNames.map$argument_0","getConfigResources","prepareConfigResources","getInitialRoutes","getNormalizedConfigs","Object.keys.map$argument_0","checkForDuplicatedConfigs","configs.reduce$argument_0","b.every$argument_0","a.every$argument_0","getConfigsWithRegexes","configs.map$argument_0","joinPaths","paths.map$argument_0","matchAgainstConfigs","config.pattern.split.reduce$argument_0","config.routeNames.map$argument_0","configs.find$argument_0","normalizedPath.split.reduce$argument_0","createNormalizedConfigs","Object.keys.forEach$argument_0","createConfigItem","findParseConfigForRoute","findInitialRoute","createStateObject","createNestedStateObject"],"mappings":"AAA;0ECC;sCCI,2BD;CDG,KC;CDG;gFCC;CDE,IC;CDE;mDCC;kBEC;gDFC;SEI;KFE;CDQ;wDCC;CDE;AI6B;iBCuC;SDG;0EEqB,oBF;CJmB;AOQ;CPW;AQC;CRa;ASC;CTS;AUC;4CCO,qED;CVgD;AYC;mBCE;6DCM,sBD,YE,sBF;KDQ;CZC;AgBC;uBCC;MDO;ChBC;kBkBC;yBCC,mBD;clBE;4BoBC;kECc;aDmB;2CEE;iDCC;iBDG;4BEU;iBFmB;aFM;CpBS;gCyBC;gDCoC;aDG;CzBK;yB2BC;C3B+B;gC4BC;C5BO;yB6BE;C7BgB;0B8BG;C9B8B;gC+BC;C/BkC"},"hasCjsExports":true},"type":"js/module"}]}