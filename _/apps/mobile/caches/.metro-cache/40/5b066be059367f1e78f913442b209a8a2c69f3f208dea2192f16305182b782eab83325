{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"escape-string-regexp","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0},"end":{"line":3,"column":42}}],"key":"Opxn8Ttfh7QNGeF0y+BQ6rRbDGo=","exportNames":["*"],"imports":1}},{"name":"query-string","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0},"end":{"line":4,"column":44}}],"key":"Tk6zkk+/XfK89igjx1MNWAcG1Q8=","exportNames":["*"],"imports":1}},{"name":"./arrayStartsWith.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0},"end":{"line":5,"column":55}}],"key":"mJQeK2ZRLq8v0j9J6l50oLtYU2c=","exportNames":["*"],"imports":1}},{"name":"./findFocusedRoute.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0},"end":{"line":6,"column":57}}],"key":"/OEwo8APHIJtscmrfuh7WccCayM=","exportNames":["*"],"imports":1}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0},"end":{"line":7,"column":55}}],"key":"ZBgxhB8YmJlp1KxhfM5ocx9xUB0=","exportNames":["*"],"imports":1}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0},"end":{"line":8,"column":49}}],"key":"0Xv+Jf6vWjo3/vKyf7CxgrGRylo=","exportNames":["*"],"imports":1}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0},"end":{"line":9,"column":61}}],"key":"zoUaUuxQP5qPvRrno+lraXgTGfI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  exports.getStateFromPath = getStateFromPath;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _escapeStringRegexp = require(_dependencyMap[1], \"escape-string-regexp\");\n  var escape = _interopDefault(_escapeStringRegexp);\n  var _queryString = require(_dependencyMap[2], \"query-string\");\n  var queryString = _interopNamespace(_queryString);\n  var _arrayStartsWithJs = require(_dependencyMap[3], \"./arrayStartsWith.js\");\n  var _findFocusedRouteJs = require(_dependencyMap[4], \"./findFocusedRoute.js\");\n  var _getPatternPartsJs = require(_dependencyMap[5], \"./getPatternParts.js\");\n  var _isArrayEqualJs = require(_dependencyMap[6], \"./isArrayEqual.js\");\n  var _validatePathConfigJs = require(_dependencyMap[7], \"./validatePathConfig.js\");\n  function getStateFromPath(path, options) {\n    var _getConfigResources = getConfigResources(options),\n      initialRoutes = _getConfigResources.initialRoutes,\n      configs = _getConfigResources.configs;\n    var screens = options?.screens;\n    var remaining = path.replace(/\\/+/g, '/').replace(/^\\//, '').replace(/\\?.*$/, '');\n    remaining = remaining.endsWith('/') ? remaining : `${remaining}/`;\n    var prefix = options?.path?.replace(/^\\//, '');\n    if (prefix) {\n      var normalizedPrefix = prefix.endsWith('/') ? prefix : `${prefix}/`;\n      if (!remaining.startsWith(normalizedPrefix)) {\n        return undefined;\n      }\n      remaining = remaining.replace(normalizedPrefix, '');\n    }\n    if (screens === undefined) {\n      var _routes = remaining.split('/').filter(Boolean).map(segment => {\n        var name = decodeURIComponent(segment);\n        return {\n          name\n        };\n      });\n      if (_routes.length) {\n        return createNestedStateObject(path, _routes, initialRoutes);\n      }\n      return undefined;\n    }\n    if (remaining === '/') {\n      var match = configs.find(config => config.segments.join('/') === '');\n      if (match) {\n        return createNestedStateObject(path, match.routeNames.map(name => ({\n          name\n        })), initialRoutes, configs);\n      }\n      return undefined;\n    }\n    var result;\n    var current;\n    var _matchAgainstConfigs = matchAgainstConfigs(remaining, configs),\n      routes = _matchAgainstConfigs.routes,\n      remainingPath = _matchAgainstConfigs.remainingPath;\n    if (routes !== undefined) {\n      current = createNestedStateObject(path, routes, initialRoutes, configs);\n      remaining = remainingPath;\n      result = current;\n    }\n    if (current == null || result == null) {\n      return undefined;\n    }\n    return result;\n  }\n  var cachedConfigResources = new WeakMap();\n  function getConfigResources(options) {\n    if (!options) return prepareConfigResources();\n    var cached = cachedConfigResources.get(options);\n    if (cached) return cached;\n    var resources = prepareConfigResources(options);\n    cachedConfigResources.set(options, resources);\n    return resources;\n  }\n  function prepareConfigResources(options) {\n    if (options) {\n      (0, _validatePathConfigJs.validatePathConfig)(options);\n    }\n    var initialRoutes = getInitialRoutes(options);\n    var configs = getSortedNormalizedConfigs(initialRoutes, options?.screens);\n    checkForDuplicatedConfigs(configs);\n    var configWithRegexes = getConfigsWithRegexes(configs);\n    return {\n      initialRoutes,\n      configs,\n      configWithRegexes\n    };\n  }\n  function getInitialRoutes(options) {\n    var initialRoutes = [];\n    if (options?.initialRouteName) {\n      initialRoutes.push({\n        initialRouteName: options.initialRouteName,\n        parentScreens: []\n      });\n    }\n    return initialRoutes;\n  }\n  function getSortedNormalizedConfigs(initialRoutes) {\n    var screens = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return [].concat(...Object.keys(screens).map(key => createNormalizedConfigs(key, screens, initialRoutes, [], [], []))).sort((a, b) => {\n      if ((0, _isArrayEqualJs.isArrayEqual)(a.segments, b.segments)) {\n        return b.routeNames.join('>').localeCompare(a.routeNames.join('>'));\n      }\n      if ((0, _arrayStartsWithJs.arrayStartsWith)(a.segments, b.segments)) {\n        return -1;\n      }\n      if ((0, _arrayStartsWithJs.arrayStartsWith)(b.segments, a.segments)) {\n        return 1;\n      }\n      for (var i = 0; i < Math.max(a.segments.length, b.segments.length); i++) {\n        if (a.segments[i] == null) {\n          return 1;\n        }\n        if (b.segments[i] == null) {\n          return -1;\n        }\n        var aWildCard = a.segments[i] === '*';\n        var bWildCard = b.segments[i] === '*';\n        var aParam = a.segments[i].startsWith(':');\n        var bParam = b.segments[i].startsWith(':');\n        var aRegex = aParam && a.segments[i].includes('(');\n        var bRegex = bParam && b.segments[i].includes('(');\n        if (aWildCard && bWildCard || aRegex && bRegex) {\n          continue;\n        }\n        if (aWildCard && !bWildCard) {\n          return 1;\n        }\n        if (bWildCard && !aWildCard) {\n          return -1;\n        }\n        if (aParam && !bParam) {\n          return 1;\n        }\n        if (bParam && !aParam) {\n          return -1;\n        }\n        if (aRegex && !bRegex) {\n          return -1;\n        }\n        if (bRegex && !aRegex) {\n          return 1;\n        }\n      }\n      return a.segments.length - b.segments.length;\n    });\n  }\n  function checkForDuplicatedConfigs(configs) {\n    configs.reduce((acc, config) => {\n      var pattern = config.segments.join('/');\n      if (acc[pattern]) {\n        var a = acc[pattern].routeNames;\n        var b = config.routeNames;\n        var intersects = a.length > b.length ? b.every((it, i) => a[i] === it) : a.every((it, i) => b[i] === it);\n        if (!intersects) {\n          throw new Error(`Found conflicting screens with the same pattern. The pattern '${pattern}' resolves to both '${a.join(' > ')}' and '${b.join(' > ')}'. Patterns must be unique and cannot resolve to more than one screen.`);\n        }\n      }\n      return Object.assign(acc, {\n        [pattern]: config\n      });\n    }, {});\n  }\n  function getConfigsWithRegexes(configs) {\n    return configs.map(c => ({\n      ...c,\n      regex: c.regex ? new RegExp(c.regex.source + '$') : undefined\n    }));\n  }\n  var matchAgainstConfigs = (remaining, configs) => {\n    var routes;\n    var remainingPath = remaining;\n    var _loop = function (config) {\n        if (!config.regex) {\n          return 0; // continue\n        }\n        var match = remainingPath.match(config.regex);\n        if (match) {\n          routes = config.routeNames.map(routeName => {\n            var routeConfig = configs.find(c => {\n              return c.screen === routeName && (0, _arrayStartsWithJs.arrayStartsWith)(config.segments, c.segments);\n            });\n            var params = routeConfig && match.groups ? Object.fromEntries(Object.entries(match.groups).map(_ref => {\n              var _ref2 = (0, _slicedToArray.default)(_ref, 2),\n                key = _ref2[0],\n                value = _ref2[1];\n              var index = Number(key.replace('param_', ''));\n              var param = routeConfig.params.find(it => it.index === index);\n              if (param?.screen === routeName && param?.name) {\n                return [param.name, value];\n              }\n              return null;\n            }).filter(it => it != null).map(_ref3 => {\n              var _ref4 = (0, _slicedToArray.default)(_ref3, 2),\n                key = _ref4[0],\n                value = _ref4[1];\n              if (value == null) {\n                return [key, undefined];\n              }\n              var decoded = decodeURIComponent(value);\n              var parsed = routeConfig.parse?.[key] ? routeConfig.parse[key](decoded) : decoded;\n              return [key, parsed];\n            })) : undefined;\n            if (params && Object.keys(params).length) {\n              return {\n                name: routeName,\n                params\n              };\n            }\n            return {\n              name: routeName\n            };\n          });\n          remainingPath = remainingPath.replace(match[0], '');\n          return 1; // break\n        }\n      },\n      _ret;\n    for (var config of configs) {\n      _ret = _loop(config);\n      if (_ret === 0) continue;\n      if (_ret === 1) break;\n    }\n    return {\n      routes,\n      remainingPath\n    };\n  };\n  var createNormalizedConfigs = (screen, routeConfig, initials, paths, parentScreens, routeNames) => {\n    var configs = [];\n    routeNames.push(screen);\n    parentScreens.push(screen);\n    var config = routeConfig[screen];\n    if (typeof config === 'string') {\n      paths.push({\n        screen,\n        path: config\n      });\n      configs.push(createConfigItem(screen, [...routeNames], [...paths]));\n    } else if (typeof config === 'object') {\n      if (typeof config.path === 'string') {\n        if (config.exact && config.path == null) {\n          throw new Error(`Screen '${screen}' doesn't specify a 'path'. A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. \\`path: ''\\`.`);\n        }\n        var aliasConfigs = [];\n        if (config.alias) {\n          for (var alias of config.alias) {\n            if (typeof alias === 'string') {\n              aliasConfigs.push(createConfigItem(screen, [...routeNames], [...paths, {\n                screen,\n                path: alias\n              }], config.parse));\n            } else if (typeof alias === 'object') {\n              aliasConfigs.push(createConfigItem(screen, [...routeNames], alias.exact ? [{\n                screen,\n                path: alias.path\n              }] : [...paths, {\n                screen,\n                path: alias.path\n              }], alias.parse));\n            }\n          }\n        }\n        if (config.exact) {\n          paths.length = 0;\n        }\n        paths.push({\n          screen,\n          path: config.path\n        });\n        configs.push(createConfigItem(screen, [...routeNames], [...paths], config.parse));\n        configs.push(...aliasConfigs);\n      }\n      if (typeof config !== 'string' && typeof config.path !== 'string' && config.alias?.length) {\n        throw new Error(`Screen '${screen}' doesn't specify a 'path'. A 'path' needs to be specified in order to use 'alias'.`);\n      }\n      if (config.screens) {\n        if (config.initialRouteName) {\n          initials.push({\n            initialRouteName: config.initialRouteName,\n            parentScreens\n          });\n        }\n        Object.keys(config.screens).forEach(nestedConfig => {\n          var result = createNormalizedConfigs(nestedConfig, config.screens, initials, [...paths], [...parentScreens], routeNames);\n          configs.push(...result);\n        });\n      }\n    }\n    routeNames.pop();\n    return configs;\n  };\n  var createConfigItem = (screen, routeNames, paths, parse) => {\n    var parts = [];\n    var _loop2 = function (_screen) {\n      parts.push(...(0, _getPatternPartsJs.getPatternParts)(path).map(part => ({\n        ...part,\n        screen: _screen\n      })));\n    };\n    for (var _ref5 of paths) {\n      var _screen = _ref5.screen;\n      var path = _ref5.path;\n      _loop2(_screen);\n    }\n    var regex = parts.length ? new RegExp(`^(${parts.map((it, i) => {\n      if (it.param) {\n        var reg = it.regex || '[^/]+';\n        return `(((?<param_${i}>${reg})\\\\/)${it.optional ? '?' : ''})`;\n      }\n      return `${it.segment === '*' ? '.*' : (0, escape.default)(it.segment)}\\\\/`;\n    }).join('')})$`) : undefined;\n    var segments = parts.map(it => it.segment);\n    var params = parts.map((it, i) => it.param ? {\n      index: i,\n      screen: it.screen,\n      name: it.param\n    } : null).filter(it => it != null);\n    return {\n      screen,\n      regex,\n      segments,\n      params,\n      routeNames,\n      parse\n    };\n  };\n  var findParseConfigForRoute = (routeName, flatConfig) => {\n    for (var config of flatConfig) {\n      if (routeName === config.routeNames[config.routeNames.length - 1]) {\n        return config.parse;\n      }\n    }\n    return undefined;\n  };\n  var findInitialRoute = (routeName, parentScreens, initialRoutes) => {\n    for (var config of initialRoutes) {\n      if (parentScreens.length === config.parentScreens.length) {\n        var sameParents = true;\n        for (var i = 0; i < parentScreens.length; i++) {\n          if (parentScreens[i].localeCompare(config.parentScreens[i]) !== 0) {\n            sameParents = false;\n            break;\n          }\n        }\n        if (sameParents) {\n          return routeName !== config.initialRouteName ? config.initialRouteName : undefined;\n        }\n      }\n    }\n    return undefined;\n  };\n  var createStateObject = (initialRoute, route, isEmpty) => {\n    if (isEmpty) {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute\n          }, route]\n        };\n      } else {\n        return {\n          routes: [route]\n        };\n      }\n    } else {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute\n          }, {\n            ...route,\n            state: {\n              routes: []\n            }\n          }]\n        };\n      } else {\n        return {\n          routes: [{\n            ...route,\n            state: {\n              routes: []\n            }\n          }]\n        };\n      }\n    }\n  };\n  var createNestedStateObject = (path, routes, initialRoutes, flatConfig) => {\n    var route = routes.shift();\n    var parentScreens = [];\n    var initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n    parentScreens.push(route.name);\n    var state = createStateObject(initialRoute, route, routes.length === 0);\n    if (routes.length > 0) {\n      var nestedState = state;\n      while (route = routes.shift()) {\n        initialRoute = findInitialRoute(route.name, parentScreens, initialRoutes);\n        var nestedStateIndex = nestedState.index || nestedState.routes.length - 1;\n        nestedState.routes[nestedStateIndex].state = createStateObject(initialRoute, route, routes.length === 0);\n        if (routes.length > 0) {\n          nestedState = nestedState.routes[nestedStateIndex].state;\n        }\n        parentScreens.push(route.name);\n      }\n    }\n    route = (0, _findFocusedRouteJs.findFocusedRoute)(state);\n    route.path = path.replace(/\\/$/, '');\n    var params = parseQueryParams(path, flatConfig ? findParseConfigForRoute(route.name, flatConfig) : undefined);\n    if (params) {\n      route.params = {\n        ...route.params,\n        ...params\n      };\n    }\n    return state;\n  };\n  var parseQueryParams = (path, parseConfig) => {\n    var query = path.split('?')[1];\n    var params = queryString.parse(query);\n    if (parseConfig) {\n      Object.keys(params).forEach(name => {\n        if (Object.hasOwnProperty.call(parseConfig, name) && typeof params[name] === 'string') {\n          params[name] = parseConfig[name](params[name]);\n        }\n      });\n    }\n    return Object.keys(params).length ? params : undefined;\n  };\n});","lineCount":458,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,1,13],[12,11,1,13,"_interopNamespace"],[12,29,1,13,"e"],[12,30,1,13],[13,4,1,13],[13,8,1,13,"e"],[13,9,1,13],[13,13,1,13,"e"],[13,14,1,13],[13,15,1,13,"__esModule"],[13,25,1,13],[13,34,1,13,"e"],[13,35,1,13],[14,4,1,13],[14,8,1,13,"n"],[14,9,1,13],[15,4,1,13],[15,8,1,13,"e"],[15,9,1,13],[15,11,1,13,"Object"],[15,17,1,13],[15,18,1,13,"keys"],[15,22,1,13],[15,23,1,13,"e"],[15,24,1,13],[15,26,1,13,"forEach"],[15,33,1,13],[15,44,1,13,"k"],[15,45,1,13],[16,6,1,13],[16,10,1,13,"d"],[16,11,1,13],[16,14,1,13,"Object"],[16,20,1,13],[16,21,1,13,"getOwnPropertyDescriptor"],[16,45,1,13],[16,46,1,13,"e"],[16,47,1,13],[16,49,1,13,"k"],[16,50,1,13],[17,6,1,13,"Object"],[17,12,1,13],[17,13,1,13,"defineProperty"],[17,27,1,13],[17,28,1,13,"n"],[17,29,1,13],[17,31,1,13,"k"],[17,32,1,13],[17,34,1,13,"d"],[17,35,1,13],[17,36,1,13,"get"],[17,39,1,13],[17,42,1,13,"d"],[17,43,1,13],[18,8,1,13,"enumerable"],[18,18,1,13],[19,8,1,13,"get"],[19,11,1,13],[19,22,1,13,"get"],[19,23,1,13],[20,10,1,13],[20,17,1,13,"e"],[20,18,1,13],[20,19,1,13,"k"],[20,20,1,13],[21,8,1,13],[22,6,1,13],[23,4,1,13],[24,4,1,13,"n"],[24,5,1,13],[24,6,1,13,"default"],[24,13,1,13],[24,16,1,13,"e"],[24,17,1,13],[25,4,1,13],[25,11,1,13,"n"],[25,12,1,13],[26,2,1,13],[27,2,31,0,"exports"],[27,9,31,0],[27,10,31,0,"getStateFromPath"],[27,26,31,0],[27,29,31,0,"getStateFromPath"],[27,45,31,0],[28,2,100,1],[28,6,100,1,"_babelRuntimeHelpersSlicedToArray"],[28,39,100,1],[28,42,100,1,"require"],[28,49,100,1],[28,50,100,1,"_dependencyMap"],[28,64,100,1],[29,2,100,1],[29,6,100,1,"_slicedToArray"],[29,20,100,1],[29,23,100,1,"_interopDefault"],[29,38,100,1],[29,39,100,1,"_babelRuntimeHelpersSlicedToArray"],[29,72,100,1],[30,2,3,0],[30,6,3,0,"_escapeStringRegexp"],[30,25,3,0],[30,28,3,0,"require"],[30,35,3,0],[30,36,3,0,"_dependencyMap"],[30,50,3,0],[31,2,3,0],[31,6,3,0,"escape"],[31,12,3,0],[31,15,3,0,"_interopDefault"],[31,30,3,0],[31,31,3,0,"_escapeStringRegexp"],[31,50,3,0],[32,2,4,0],[32,6,4,0,"_queryString"],[32,18,4,0],[32,21,4,0,"require"],[32,28,4,0],[32,29,4,0,"_dependencyMap"],[32,43,4,0],[33,2,4,0],[33,6,4,0,"queryString"],[33,17,4,0],[33,20,4,0,"_interopNamespace"],[33,37,4,0],[33,38,4,0,"_queryString"],[33,50,4,0],[34,2,5,0],[34,6,5,0,"_arrayStartsWithJs"],[34,24,5,0],[34,27,5,0,"require"],[34,34,5,0],[34,35,5,0,"_dependencyMap"],[34,49,5,0],[35,2,6,0],[35,6,6,0,"_findFocusedRouteJs"],[35,25,6,0],[35,28,6,0,"require"],[35,35,6,0],[35,36,6,0,"_dependencyMap"],[35,50,6,0],[36,2,7,0],[36,6,7,0,"_getPatternPartsJs"],[36,24,7,0],[36,27,7,0,"require"],[36,34,7,0],[36,35,7,0,"_dependencyMap"],[36,49,7,0],[37,2,8,0],[37,6,8,0,"_isArrayEqualJs"],[37,21,8,0],[37,24,8,0,"require"],[37,31,8,0],[37,32,8,0,"_dependencyMap"],[37,46,8,0],[38,2,9,0],[38,6,9,0,"_validatePathConfigJs"],[38,27,9,0],[38,30,9,0,"require"],[38,37,9,0],[38,38,9,0,"_dependencyMap"],[38,52,9,0],[39,2,31,7],[39,11,31,16,"getStateFromPath"],[39,27,31,32,"getStateFromPath"],[39,28,31,33,"path"],[39,32,31,37],[39,34,31,39,"options"],[39,41,31,46],[39,43,31,48],[40,4,32,2],[40,8,32,2,"_getConfigResources"],[40,27,32,2],[40,30,35,6,"getConfigResources"],[40,48,35,24],[40,49,35,25,"options"],[40,56,35,32],[40,57,35,33],[41,6,33,4,"initialRoutes"],[41,19,33,17],[41,22,33,17,"_getConfigResources"],[41,41,33,17],[41,42,33,4,"initialRoutes"],[41,55,33,17],[42,6,34,4,"configs"],[42,13,34,11],[42,16,34,11,"_getConfigResources"],[42,35,34,11],[42,36,34,4,"configs"],[42,43,34,11],[43,4,36,2],[43,8,36,8,"screens"],[43,15,36,15],[43,18,36,18,"options"],[43,25,36,25],[43,27,36,27,"screens"],[43,34,36,34],[44,4,37,2],[44,8,37,6,"remaining"],[44,17,37,15],[44,20,37,18,"path"],[44,24,37,22],[44,25,37,23,"replace"],[44,32,37,30],[44,33,37,31],[44,39,37,37],[44,41,37,39],[44,44,37,42],[44,45,37,43],[44,46,38,3,"replace"],[44,53,38,10],[44,54,38,11],[44,59,38,16],[44,61,38,18],[44,63,38,20],[44,64,38,21],[44,65,39,3,"replace"],[44,72,39,10],[44,73,39,11],[44,80,39,18],[44,82,39,20],[44,84,39,22],[44,85,39,23],[45,4,42,2,"remaining"],[45,13,42,11],[45,16,42,14,"remaining"],[45,25,42,23],[45,26,42,24,"endsWith"],[45,34,42,32],[45,35,42,33],[45,38,42,36],[45,39,42,37],[45,42,42,40,"remaining"],[45,51,42,49],[45,54,42,52],[45,57,42,55,"remaining"],[45,66,42,64],[45,69,42,67],[46,4,43,2],[46,8,43,8,"prefix"],[46,14,43,14],[46,17,43,17,"options"],[46,24,43,24],[46,26,43,26,"path"],[46,30,43,30],[46,32,43,32,"replace"],[46,39,43,39],[46,40,43,40],[46,45,43,45],[46,47,43,47],[46,49,43,49],[46,50,43,50],[47,4,45,2],[47,8,45,6,"prefix"],[47,14,45,12],[47,16,45,14],[48,6,47,4],[48,10,47,10,"normalizedPrefix"],[48,26,47,26],[48,29,47,29,"prefix"],[48,35,47,35],[48,36,47,36,"endsWith"],[48,44,47,44],[48,45,47,45],[48,48,47,48],[48,49,47,49],[48,52,47,52,"prefix"],[48,58,47,58],[48,61,47,61],[48,64,47,64,"prefix"],[48,70,47,70],[48,73,47,73],[49,6,50,4],[49,10,50,8],[49,11,50,9,"remaining"],[49,20,50,18],[49,21,50,19,"startsWith"],[49,31,50,29],[49,32,50,30,"normalizedPrefix"],[49,48,50,46],[49,49,50,47],[49,51,50,49],[50,8,51,6],[50,15,51,13,"undefined"],[50,24,51,22],[51,6,52,4],[52,6,55,4,"remaining"],[52,15,55,13],[52,18,55,16,"remaining"],[52,27,55,25],[52,28,55,26,"replace"],[52,35,55,33],[52,36,55,34,"normalizedPrefix"],[52,52,55,50],[52,54,55,52],[52,56,55,54],[52,57,55,55],[53,4,56,2],[54,4,57,2],[54,8,57,6,"screens"],[54,15,57,13],[54,20,57,18,"undefined"],[54,29,57,27],[54,31,57,29],[55,6,59,4],[55,10,59,10,"routes"],[55,17,59,16],[55,20,59,19,"remaining"],[55,29,59,28],[55,30,59,29,"split"],[55,35,59,34],[55,36,59,35],[55,39,59,38],[55,40,59,39],[55,41,59,40,"filter"],[55,47,59,46],[55,48,59,47,"Boolean"],[55,55,59,54],[55,56,59,55],[55,57,59,56,"map"],[55,60,59,59],[55,61,59,60,"segment"],[55,68,59,67],[55,72,59,71],[56,8,60,6],[56,12,60,12,"name"],[56,16,60,16],[56,19,60,19,"decodeURIComponent"],[56,37,60,37],[56,38,60,38,"segment"],[56,45,60,45],[56,46,60,46],[57,8,61,6],[57,15,61,13],[58,10,62,8,"name"],[59,8,63,6],[59,9,63,7],[60,6,64,4],[60,7,64,5],[60,8,64,6],[61,6,65,4],[61,10,65,8,"routes"],[61,17,65,14],[61,18,65,15,"length"],[61,24,65,21],[61,26,65,23],[62,8,66,6],[62,15,66,13,"createNestedStateObject"],[62,38,66,36],[62,39,66,37,"path"],[62,43,66,41],[62,45,66,43,"routes"],[62,52,66,49],[62,54,66,51,"initialRoutes"],[62,67,66,64],[62,68,66,65],[63,6,67,4],[64,6,68,4],[64,13,68,11,"undefined"],[64,22,68,20],[65,4,69,2],[66,4,70,2],[66,8,70,6,"remaining"],[66,17,70,15],[66,22,70,20],[66,25,70,23],[66,27,70,25],[67,6,73,4],[67,10,73,10,"match"],[67,15,73,15],[67,18,73,18,"configs"],[67,25,73,25],[67,26,73,26,"find"],[67,30,73,30],[67,31,73,31,"config"],[67,37,73,37],[67,41,73,41,"config"],[67,47,73,47],[67,48,73,48,"segments"],[67,56,73,56],[67,57,73,57,"join"],[67,61,73,61],[67,62,73,62],[67,65,73,65],[67,66,73,66],[67,71,73,71],[67,73,73,73],[67,74,73,74],[68,6,74,4],[68,10,74,8,"match"],[68,15,74,13],[68,17,74,15],[69,8,75,6],[69,15,75,13,"createNestedStateObject"],[69,38,75,36],[69,39,75,37,"path"],[69,43,75,41],[69,45,75,43,"match"],[69,50,75,48],[69,51,75,49,"routeNames"],[69,61,75,59],[69,62,75,60,"map"],[69,65,75,63],[69,66,75,64,"name"],[69,70,75,68],[69,75,75,73],[70,10,76,8,"name"],[71,8,77,6],[71,9,77,7],[71,10,77,8],[71,11,77,9],[71,13,77,11,"initialRoutes"],[71,26,77,24],[71,28,77,26,"configs"],[71,35,77,33],[71,36,77,34],[72,6,78,4],[73,6,79,4],[73,13,79,11,"undefined"],[73,22,79,20],[74,4,80,2],[75,4,81,2],[75,8,81,6,"result"],[75,14,81,12],[76,4,82,2],[76,8,82,6,"current"],[76,15,82,13],[77,4,86,2],[77,8,86,2,"_matchAgainstConfigs"],[77,28,86,2],[77,31,89,6,"matchAgainstConfigs"],[77,50,89,25],[77,51,89,26,"remaining"],[77,60,89,35],[77,62,89,37,"configs"],[77,69,89,44],[77,70,89,45],[78,6,87,4,"routes"],[78,12,87,10],[78,15,87,10,"_matchAgainstConfigs"],[78,35,87,10],[78,36,87,4,"routes"],[78,42,87,10],[79,6,88,4,"remainingPath"],[79,19,88,17],[79,22,88,17,"_matchAgainstConfigs"],[79,42,88,17],[79,43,88,4,"remainingPath"],[79,56,88,17],[80,4,90,2],[80,8,90,6,"routes"],[80,14,90,12],[80,19,90,17,"undefined"],[80,28,90,26],[80,30,90,28],[81,6,92,4,"current"],[81,13,92,11],[81,16,92,14,"createNestedStateObject"],[81,39,92,37],[81,40,92,38,"path"],[81,44,92,42],[81,46,92,44,"routes"],[81,52,92,50],[81,54,92,52,"initialRoutes"],[81,67,92,65],[81,69,92,67,"configs"],[81,76,92,74],[81,77,92,75],[82,6,93,4,"remaining"],[82,15,93,13],[82,18,93,16,"remainingPath"],[82,31,93,29],[83,6,94,4,"result"],[83,12,94,10],[83,15,94,13,"current"],[83,22,94,20],[84,4,95,2],[85,4,96,2],[85,8,96,6,"current"],[85,15,96,13],[85,19,96,17],[85,23,96,21],[85,27,96,25,"result"],[85,33,96,31],[85,37,96,35],[85,41,96,39],[85,43,96,41],[86,6,97,4],[86,13,97,11,"undefined"],[86,22,97,20],[87,4,98,2],[88,4,99,2],[88,11,99,9,"result"],[88,17,99,15],[89,2,100,0],[90,2,105,0],[90,6,105,6,"cachedConfigResources"],[90,27,105,27],[90,30,105,30],[90,34,105,34,"WeakMap"],[90,41,105,41],[90,42,105,42],[90,43,105,43],[91,2,106,0],[91,11,106,9,"getConfigResources"],[91,29,106,27,"getConfigResources"],[91,30,106,28,"options"],[91,37,106,35],[91,39,106,37],[92,4,107,2],[92,8,107,6],[92,9,107,7,"options"],[92,16,107,14],[92,18,107,16],[92,25,107,23,"prepareConfigResources"],[92,47,107,45],[92,48,107,46],[92,49,107,47],[93,4,108,2],[93,8,108,8,"cached"],[93,14,108,14],[93,17,108,17,"cachedConfigResources"],[93,38,108,38],[93,39,108,39,"get"],[93,42,108,42],[93,43,108,43,"options"],[93,50,108,50],[93,51,108,51],[94,4,109,2],[94,8,109,6,"cached"],[94,14,109,12],[94,16,109,14],[94,23,109,21,"cached"],[94,29,109,27],[95,4,110,2],[95,8,110,8,"resources"],[95,17,110,17],[95,20,110,20,"prepareConfigResources"],[95,42,110,42],[95,43,110,43,"options"],[95,50,110,50],[95,51,110,51],[96,4,111,2,"cachedConfigResources"],[96,25,111,23],[96,26,111,24,"set"],[96,29,111,27],[96,30,111,28,"options"],[96,37,111,35],[96,39,111,37,"resources"],[96,48,111,46],[96,49,111,47],[97,4,112,2],[97,11,112,9,"resources"],[97,20,112,18],[98,2,113,0],[99,2,114,0],[99,11,114,9,"prepareConfigResources"],[99,33,114,31,"prepareConfigResources"],[99,34,114,32,"options"],[99,41,114,39],[99,43,114,41],[100,4,115,2],[100,8,115,6,"options"],[100,15,115,13],[100,17,115,15],[101,6,116,4],[101,10,116,4,"validatePathConfig"],[101,31,116,22],[101,32,116,22,"validatePathConfig"],[101,50,116,22],[101,52,116,23,"options"],[101,59,116,30],[101,60,116,31],[102,4,117,2],[103,4,118,2],[103,8,118,8,"initialRoutes"],[103,21,118,21],[103,24,118,24,"getInitialRoutes"],[103,40,118,40],[103,41,118,41,"options"],[103,48,118,48],[103,49,118,49],[104,4,119,2],[104,8,119,8,"configs"],[104,15,119,15],[104,18,119,18,"getSortedNormalizedConfigs"],[104,44,119,44],[104,45,119,45,"initialRoutes"],[104,58,119,58],[104,60,119,60,"options"],[104,67,119,67],[104,69,119,69,"screens"],[104,76,119,76],[104,77,119,77],[105,4,120,2,"checkForDuplicatedConfigs"],[105,29,120,27],[105,30,120,28,"configs"],[105,37,120,35],[105,38,120,36],[106,4,121,2],[106,8,121,8,"configWithRegexes"],[106,25,121,25],[106,28,121,28,"getConfigsWithRegexes"],[106,49,121,49],[106,50,121,50,"configs"],[106,57,121,57],[106,58,121,58],[107,4,122,2],[107,11,122,9],[108,6,123,4,"initialRoutes"],[108,19,123,17],[109,6,124,4,"configs"],[109,13,124,11],[110,6,125,4,"configWithRegexes"],[111,4,126,2],[111,5,126,3],[112,2,127,0],[113,2,128,0],[113,11,128,9,"getInitialRoutes"],[113,27,128,25,"getInitialRoutes"],[113,28,128,26,"options"],[113,35,128,33],[113,37,128,35],[114,4,129,2],[114,8,129,8,"initialRoutes"],[114,21,129,21],[114,24,129,24],[114,26,129,26],[115,4,130,2],[115,8,130,6,"options"],[115,15,130,13],[115,17,130,15,"initialRouteName"],[115,33,130,31],[115,35,130,33],[116,6,131,4,"initialRoutes"],[116,19,131,17],[116,20,131,18,"push"],[116,24,131,22],[116,25,131,23],[117,8,132,6,"initialRouteName"],[117,24,132,22],[117,26,132,24,"options"],[117,33,132,31],[117,34,132,32,"initialRouteName"],[117,50,132,48],[118,8,133,6,"parentScreens"],[118,21,133,19],[118,23,133,21],[119,6,134,4],[119,7,134,5],[119,8,134,6],[120,4,135,2],[121,4,136,2],[121,11,136,9,"initialRoutes"],[121,24,136,22],[122,2,137,0],[123,2,138,0],[123,11,138,9,"getSortedNormalizedConfigs"],[123,37,138,35,"getSortedNormalizedConfigs"],[123,38,138,36,"initialRoutes"],[123,51,138,49],[123,53,138,65],[124,4,138,65],[124,8,138,51,"screens"],[124,15,138,58],[124,18,138,58,"arguments"],[124,27,138,58],[124,28,138,58,"length"],[124,34,138,58],[124,42,138,58,"arguments"],[124,51,138,58],[124,59,138,58,"undefined"],[124,68,138,58],[124,71,138,58,"arguments"],[124,80,138,58],[124,86,138,61],[124,87,138,62],[124,88,138,63],[125,4,140,2],[125,11,140,9],[125,13,140,11],[125,14,140,12,"concat"],[125,20,140,18],[125,21,140,19],[125,24,140,22,"Object"],[125,30,140,28],[125,31,140,29,"keys"],[125,35,140,33],[125,36,140,34,"screens"],[125,43,140,41],[125,44,140,42],[125,45,140,43,"map"],[125,48,140,46],[125,49,140,47,"key"],[125,52,140,50],[125,56,140,54,"createNormalizedConfigs"],[125,79,140,77],[125,80,140,78,"key"],[125,83,140,81],[125,85,140,83,"screens"],[125,92,140,90],[125,94,140,92,"initialRoutes"],[125,107,140,105],[125,109,140,107],[125,111,140,109],[125,113,140,111],[125,115,140,113],[125,117,140,115],[125,119,140,117],[125,120,140,118],[125,121,140,119],[125,122,140,120],[125,123,140,121,"sort"],[125,127,140,125],[125,128,140,126],[125,129,140,127,"a"],[125,130,140,128],[125,132,140,130,"b"],[125,133,140,131],[125,138,140,136],[126,6,150,4],[126,10,150,8],[126,14,150,8,"isArrayEqual"],[126,29,150,20],[126,30,150,20,"isArrayEqual"],[126,42,150,20],[126,44,150,21,"a"],[126,45,150,22],[126,46,150,23,"segments"],[126,54,150,31],[126,56,150,33,"b"],[126,57,150,34],[126,58,150,35,"segments"],[126,66,150,43],[126,67,150,44],[126,69,150,46],[127,8,151,6],[127,15,151,13,"b"],[127,16,151,14],[127,17,151,15,"routeNames"],[127,27,151,25],[127,28,151,26,"join"],[127,32,151,30],[127,33,151,31],[127,36,151,34],[127,37,151,35],[127,38,151,36,"localeCompare"],[127,51,151,49],[127,52,151,50,"a"],[127,53,151,51],[127,54,151,52,"routeNames"],[127,64,151,62],[127,65,151,63,"join"],[127,69,151,67],[127,70,151,68],[127,73,151,71],[127,74,151,72],[127,75,151,73],[128,6,152,4],[129,6,156,4],[129,10,156,8],[129,14,156,8,"arrayStartsWith"],[129,32,156,23],[129,33,156,23,"arrayStartsWith"],[129,48,156,23],[129,50,156,24,"a"],[129,51,156,25],[129,52,156,26,"segments"],[129,60,156,34],[129,62,156,36,"b"],[129,63,156,37],[129,64,156,38,"segments"],[129,72,156,46],[129,73,156,47],[129,75,156,49],[130,8,157,6],[130,15,157,13],[130,16,157,14],[130,17,157,15],[131,6,158,4],[132,6,159,4],[132,10,159,8],[132,14,159,8,"arrayStartsWith"],[132,32,159,23],[132,33,159,23,"arrayStartsWith"],[132,48,159,23],[132,50,159,24,"b"],[132,51,159,25],[132,52,159,26,"segments"],[132,60,159,34],[132,62,159,36,"a"],[132,63,159,37],[132,64,159,38,"segments"],[132,72,159,46],[132,73,159,47],[132,75,159,49],[133,8,160,6],[133,15,160,13],[133,16,160,14],[134,6,161,4],[135,6,162,4],[135,11,162,9],[135,15,162,13,"i"],[135,16,162,14],[135,19,162,17],[135,20,162,18],[135,22,162,20,"i"],[135,23,162,21],[135,26,162,24,"Math"],[135,30,162,28],[135,31,162,29,"max"],[135,34,162,32],[135,35,162,33,"a"],[135,36,162,34],[135,37,162,35,"segments"],[135,45,162,43],[135,46,162,44,"length"],[135,52,162,50],[135,54,162,52,"b"],[135,55,162,53],[135,56,162,54,"segments"],[135,64,162,62],[135,65,162,63,"length"],[135,71,162,69],[135,72,162,70],[135,74,162,72,"i"],[135,75,162,73],[135,77,162,75],[135,79,162,77],[136,8,164,6],[136,12,164,10,"a"],[136,13,164,11],[136,14,164,12,"segments"],[136,22,164,20],[136,23,164,21,"i"],[136,24,164,22],[136,25,164,23],[136,29,164,27],[136,33,164,31],[136,35,164,33],[137,10,165,8],[137,17,165,15],[137,18,165,16],[138,8,166,6],[139,8,169,6],[139,12,169,10,"b"],[139,13,169,11],[139,14,169,12,"segments"],[139,22,169,20],[139,23,169,21,"i"],[139,24,169,22],[139,25,169,23],[139,29,169,27],[139,33,169,31],[139,35,169,33],[140,10,170,8],[140,17,170,15],[140,18,170,16],[140,19,170,17],[141,8,171,6],[142,8,172,6],[142,12,172,12,"aWildCard"],[142,21,172,21],[142,24,172,24,"a"],[142,25,172,25],[142,26,172,26,"segments"],[142,34,172,34],[142,35,172,35,"i"],[142,36,172,36],[142,37,172,37],[142,42,172,42],[142,45,172,45],[143,8,173,6],[143,12,173,12,"bWildCard"],[143,21,173,21],[143,24,173,24,"b"],[143,25,173,25],[143,26,173,26,"segments"],[143,34,173,34],[143,35,173,35,"i"],[143,36,173,36],[143,37,173,37],[143,42,173,42],[143,45,173,45],[144,8,174,6],[144,12,174,12,"aParam"],[144,18,174,18],[144,21,174,21,"a"],[144,22,174,22],[144,23,174,23,"segments"],[144,31,174,31],[144,32,174,32,"i"],[144,33,174,33],[144,34,174,34],[144,35,174,35,"startsWith"],[144,45,174,45],[144,46,174,46],[144,49,174,49],[144,50,174,50],[145,8,175,6],[145,12,175,12,"bParam"],[145,18,175,18],[145,21,175,21,"b"],[145,22,175,22],[145,23,175,23,"segments"],[145,31,175,31],[145,32,175,32,"i"],[145,33,175,33],[145,34,175,34],[145,35,175,35,"startsWith"],[145,45,175,45],[145,46,175,46],[145,49,175,49],[145,50,175,50],[146,8,176,6],[146,12,176,12,"aRegex"],[146,18,176,18],[146,21,176,21,"aParam"],[146,27,176,27],[146,31,176,31,"a"],[146,32,176,32],[146,33,176,33,"segments"],[146,41,176,41],[146,42,176,42,"i"],[146,43,176,43],[146,44,176,44],[146,45,176,45,"includes"],[146,53,176,53],[146,54,176,54],[146,57,176,57],[146,58,176,58],[147,8,177,6],[147,12,177,12,"bRegex"],[147,18,177,18],[147,21,177,21,"bParam"],[147,27,177,27],[147,31,177,31,"b"],[147,32,177,32],[147,33,177,33,"segments"],[147,41,177,41],[147,42,177,42,"i"],[147,43,177,43],[147,44,177,44],[147,45,177,45,"includes"],[147,53,177,53],[147,54,177,54],[147,57,177,57],[147,58,177,58],[148,8,180,6],[148,12,180,10,"aWildCard"],[148,21,180,19],[148,25,180,23,"bWildCard"],[148,34,180,32],[148,38,180,36,"aRegex"],[148,44,180,42],[148,48,180,46,"bRegex"],[148,54,180,52],[148,56,180,54],[149,10,181,8],[150,8,182,6],[151,8,185,6],[151,12,185,10,"aWildCard"],[151,21,185,19],[151,25,185,23],[151,26,185,24,"bWildCard"],[151,35,185,33],[151,37,185,35],[152,10,186,8],[152,17,186,15],[152,18,186,16],[153,8,187,6],[154,8,190,6],[154,12,190,10,"bWildCard"],[154,21,190,19],[154,25,190,23],[154,26,190,24,"aWildCard"],[154,35,190,33],[154,37,190,35],[155,10,191,8],[155,17,191,15],[155,18,191,16],[155,19,191,17],[156,8,192,6],[157,8,195,6],[157,12,195,10,"aParam"],[157,18,195,16],[157,22,195,20],[157,23,195,21,"bParam"],[157,29,195,27],[157,31,195,29],[158,10,196,8],[158,17,196,15],[158,18,196,16],[159,8,197,6],[160,8,200,6],[160,12,200,10,"bParam"],[160,18,200,16],[160,22,200,20],[160,23,200,21,"aParam"],[160,29,200,27],[160,31,200,29],[161,10,201,8],[161,17,201,15],[161,18,201,16],[161,19,201,17],[162,8,202,6],[163,8,205,6],[163,12,205,10,"aRegex"],[163,18,205,16],[163,22,205,20],[163,23,205,21,"bRegex"],[163,29,205,27],[163,31,205,29],[164,10,206,8],[164,17,206,15],[164,18,206,16],[164,19,206,17],[165,8,207,6],[166,8,210,6],[166,12,210,10,"bRegex"],[166,18,210,16],[166,22,210,20],[166,23,210,21,"aRegex"],[166,29,210,27],[166,31,210,29],[167,10,211,8],[167,17,211,15],[167,18,211,16],[168,8,212,6],[169,6,213,4],[170,6,214,4],[170,13,214,11,"a"],[170,14,214,12],[170,15,214,13,"segments"],[170,23,214,21],[170,24,214,22,"length"],[170,30,214,28],[170,33,214,31,"b"],[170,34,214,32],[170,35,214,33,"segments"],[170,43,214,41],[170,44,214,42,"length"],[170,50,214,48],[171,4,215,2],[171,5,215,3],[171,6,215,4],[172,2,216,0],[173,2,217,0],[173,11,217,9,"checkForDuplicatedConfigs"],[173,36,217,34,"checkForDuplicatedConfigs"],[173,37,217,35,"configs"],[173,44,217,42],[173,46,217,44],[174,4,219,2,"configs"],[174,11,219,9],[174,12,219,10,"reduce"],[174,18,219,16],[174,19,219,17],[174,20,219,18,"acc"],[174,23,219,21],[174,25,219,23,"config"],[174,31,219,29],[174,36,219,34],[175,6,220,4],[175,10,220,10,"pattern"],[175,17,220,17],[175,20,220,20,"config"],[175,26,220,26],[175,27,220,27,"segments"],[175,35,220,35],[175,36,220,36,"join"],[175,40,220,40],[175,41,220,41],[175,44,220,44],[175,45,220,45],[176,6,221,4],[176,10,221,8,"acc"],[176,13,221,11],[176,14,221,12,"pattern"],[176,21,221,19],[176,22,221,20],[176,24,221,22],[177,8,222,6],[177,12,222,12,"a"],[177,13,222,13],[177,16,222,16,"acc"],[177,19,222,19],[177,20,222,20,"pattern"],[177,27,222,27],[177,28,222,28],[177,29,222,29,"routeNames"],[177,39,222,39],[178,8,223,6],[178,12,223,12,"b"],[178,13,223,13],[178,16,223,16,"config"],[178,22,223,22],[178,23,223,23,"routeNames"],[178,33,223,33],[179,8,227,6],[179,12,227,12,"intersects"],[179,22,227,22],[179,25,227,25,"a"],[179,26,227,26],[179,27,227,27,"length"],[179,33,227,33],[179,36,227,36,"b"],[179,37,227,37],[179,38,227,38,"length"],[179,44,227,44],[179,47,227,47,"b"],[179,48,227,48],[179,49,227,49,"every"],[179,54,227,54],[179,55,227,55],[179,56,227,56,"it"],[179,58,227,58],[179,60,227,60,"i"],[179,61,227,61],[179,66,227,66,"a"],[179,67,227,67],[179,68,227,68,"i"],[179,69,227,69],[179,70,227,70],[179,75,227,75,"it"],[179,77,227,77],[179,78,227,78],[179,81,227,81,"a"],[179,82,227,82],[179,83,227,83,"every"],[179,88,227,88],[179,89,227,89],[179,90,227,90,"it"],[179,92,227,92],[179,94,227,94,"i"],[179,95,227,95],[179,100,227,100,"b"],[179,101,227,101],[179,102,227,102,"i"],[179,103,227,103],[179,104,227,104],[179,109,227,109,"it"],[179,111,227,111],[179,112,227,112],[180,8,228,6],[180,12,228,10],[180,13,228,11,"intersects"],[180,23,228,21],[180,25,228,23],[181,10,229,8],[181,16,229,14],[181,20,229,18,"Error"],[181,25,229,23],[181,26,229,24],[181,91,229,89,"pattern"],[181,98,229,96],[181,121,229,119,"a"],[181,122,229,120],[181,123,229,121,"join"],[181,127,229,125],[181,128,229,126],[181,133,229,131],[181,134,229,132],[181,144,229,142,"b"],[181,145,229,143],[181,146,229,144,"join"],[181,150,229,148],[181,151,229,149],[181,156,229,154],[181,157,229,155],[181,229,229,227],[181,230,229,228],[182,8,230,6],[183,6,231,4],[184,6,232,4],[184,13,232,11,"Object"],[184,19,232,17],[184,20,232,18,"assign"],[184,26,232,24],[184,27,232,25,"acc"],[184,30,232,28],[184,32,232,30],[185,8,233,6],[185,9,233,7,"pattern"],[185,16,233,14],[185,19,233,17,"config"],[186,6,234,4],[186,7,234,5],[186,8,234,6],[187,4,235,2],[187,5,235,3],[187,7,235,5],[187,8,235,6],[187,9,235,7],[187,10,235,8],[188,2,236,0],[189,2,237,0],[189,11,237,9,"getConfigsWithRegexes"],[189,32,237,30,"getConfigsWithRegexes"],[189,33,237,31,"configs"],[189,40,237,38],[189,42,237,40],[190,4,238,2],[190,11,238,9,"configs"],[190,18,238,16],[190,19,238,17,"map"],[190,22,238,20],[190,23,238,21,"c"],[190,24,238,22],[190,29,238,27],[191,6,239,4],[191,9,239,7,"c"],[191,10,239,8],[192,6,241,4,"regex"],[192,11,241,9],[192,13,241,11,"c"],[192,14,241,12],[192,15,241,13,"regex"],[192,20,241,18],[192,23,241,21],[192,27,241,25,"RegExp"],[192,33,241,31],[192,34,241,32,"c"],[192,35,241,33],[192,36,241,34,"regex"],[192,41,241,39],[192,42,241,40,"source"],[192,48,241,46],[192,51,241,49],[192,54,241,52],[192,55,241,53],[192,58,241,56,"undefined"],[193,4,242,2],[193,5,242,3],[193,6,242,4],[193,7,242,5],[194,2,243,0],[195,2,244,0],[195,6,244,6,"matchAgainstConfigs"],[195,25,244,25],[195,28,244,28,"matchAgainstConfigs"],[195,29,244,29,"remaining"],[195,38,244,38],[195,40,244,40,"configs"],[195,47,244,47],[195,52,244,52],[196,4,245,2],[196,8,245,6,"routes"],[196,14,245,12],[197,4,246,2],[197,8,246,6,"remainingPath"],[197,21,246,19],[197,24,246,22,"remaining"],[197,33,246,31],[198,4,246,32],[198,8,246,32,"_loop"],[198,13,246,32],[198,25,246,32,"_loop"],[198,26,246,32,"config"],[198,32,246,32],[198,34,249,32],[199,8,250,4],[199,12,250,8],[199,13,250,9,"config"],[199,19,250,15],[199,20,250,16,"regex"],[199,25,250,21],[199,27,250,23],[200,10,250,23],[201,8,252,4],[202,8,253,4],[202,12,253,10,"match"],[202,17,253,15],[202,20,253,18,"remainingPath"],[202,33,253,31],[202,34,253,32,"match"],[202,39,253,37],[202,40,253,38,"config"],[202,46,253,44],[202,47,253,45,"regex"],[202,52,253,50],[202,53,253,51],[203,8,256,4],[203,12,256,8,"match"],[203,17,256,13],[203,19,256,15],[204,10,257,6,"routes"],[204,16,257,12],[204,19,257,15,"config"],[204,25,257,21],[204,26,257,22,"routeNames"],[204,36,257,32],[204,37,257,33,"map"],[204,40,257,36],[204,41,257,37,"routeName"],[204,50,257,46],[204,54,257,50],[205,12,258,8],[205,16,258,14,"routeConfig"],[205,27,258,25],[205,30,258,28,"configs"],[205,37,258,35],[205,38,258,36,"find"],[205,42,258,40],[205,43,258,41,"c"],[205,44,258,42],[205,48,258,46],[206,14,260,10],[206,21,260,17,"c"],[206,22,260,18],[206,23,260,19,"screen"],[206,29,260,25],[206,34,260,30,"routeName"],[206,43,260,39],[206,47,260,43],[206,51,260,43,"arrayStartsWith"],[206,69,260,58],[206,70,260,58,"arrayStartsWith"],[206,85,260,58],[206,87,260,59,"config"],[206,93,260,65],[206,94,260,66,"segments"],[206,102,260,74],[206,104,260,76,"c"],[206,105,260,77],[206,106,260,78,"segments"],[206,114,260,86],[206,115,260,87],[207,12,261,8],[207,13,261,9],[207,14,261,10],[208,12,262,8],[208,16,262,14,"params"],[208,22,262,20],[208,25,262,23,"routeConfig"],[208,36,262,34],[208,40,262,38,"match"],[208,45,262,43],[208,46,262,44,"groups"],[208,52,262,50],[208,55,262,53,"Object"],[208,61,262,59],[208,62,262,60,"fromEntries"],[208,73,262,71],[208,74,262,72,"Object"],[208,80,262,78],[208,81,262,79,"entries"],[208,88,262,86],[208,89,262,87,"match"],[208,94,262,92],[208,95,262,93,"groups"],[208,101,262,99],[208,102,262,100],[208,103,262,101,"map"],[208,106,262,104],[208,107,262,105,"_ref"],[208,111,262,105],[208,115,262,123],[209,14,262,123],[209,18,262,123,"_ref2"],[209,23,262,123],[209,30,262,123,"_slicedToArray"],[209,44,262,123],[209,45,262,123,"default"],[209,52,262,123],[209,54,262,123,"_ref"],[209,58,262,123],[210,16,262,107,"key"],[210,19,262,110],[210,22,262,110,"_ref2"],[210,27,262,110],[211,16,262,112,"value"],[211,21,262,117],[211,24,262,117,"_ref2"],[211,29,262,117],[212,14,263,10],[212,18,263,16,"index"],[212,23,263,21],[212,26,263,24,"Number"],[212,32,263,30],[212,33,263,31,"key"],[212,36,263,34],[212,37,263,35,"replace"],[212,44,263,42],[212,45,263,43],[212,53,263,51],[212,55,263,53],[212,57,263,55],[212,58,263,56],[212,59,263,57],[213,14,264,10],[213,18,264,16,"param"],[213,23,264,21],[213,26,264,24,"routeConfig"],[213,37,264,35],[213,38,264,36,"params"],[213,44,264,42],[213,45,264,43,"find"],[213,49,264,47],[213,50,264,48,"it"],[213,52,264,50],[213,56,264,54,"it"],[213,58,264,56],[213,59,264,57,"index"],[213,64,264,62],[213,69,264,67,"index"],[213,74,264,72],[213,75,264,73],[214,14,265,10],[214,18,265,14,"param"],[214,23,265,19],[214,25,265,21,"screen"],[214,31,265,27],[214,36,265,32,"routeName"],[214,45,265,41],[214,49,265,45,"param"],[214,54,265,50],[214,56,265,52,"name"],[214,60,265,56],[214,62,265,58],[215,16,266,12],[215,23,266,19],[215,24,266,20,"param"],[215,29,266,25],[215,30,266,26,"name"],[215,34,266,30],[215,36,266,32,"value"],[215,41,266,37],[215,42,266,38],[216,14,267,10],[217,14,268,10],[217,21,268,17],[217,25,268,21],[218,12,269,8],[218,13,269,9],[218,14,269,10],[218,15,269,11,"filter"],[218,21,269,17],[218,22,269,18,"it"],[218,24,269,20],[218,28,269,24,"it"],[218,30,269,26],[218,34,269,30],[218,38,269,34],[218,39,269,35],[218,40,269,36,"map"],[218,43,269,39],[218,44,269,40,"_ref3"],[218,49,269,40],[218,53,269,58],[219,14,269,58],[219,18,269,58,"_ref4"],[219,23,269,58],[219,30,269,58,"_slicedToArray"],[219,44,269,58],[219,45,269,58,"default"],[219,52,269,58],[219,54,269,58,"_ref3"],[219,59,269,58],[220,16,269,42,"key"],[220,19,269,45],[220,22,269,45,"_ref4"],[220,27,269,45],[221,16,269,47,"value"],[221,21,269,52],[221,24,269,52,"_ref4"],[221,29,269,52],[222,14,270,10],[222,18,270,14,"value"],[222,23,270,19],[222,27,270,23],[222,31,270,27],[222,33,270,29],[223,16,271,12],[223,23,271,19],[223,24,271,20,"key"],[223,27,271,23],[223,29,271,25,"undefined"],[223,38,271,34],[223,39,271,35],[224,14,272,10],[225,14,273,10],[225,18,273,16,"decoded"],[225,25,273,23],[225,28,273,26,"decodeURIComponent"],[225,46,273,44],[225,47,273,45,"value"],[225,52,273,50],[225,53,273,51],[226,14,274,10],[226,18,274,16,"parsed"],[226,24,274,22],[226,27,274,25,"routeConfig"],[226,38,274,36],[226,39,274,37,"parse"],[226,44,274,42],[226,47,274,45,"key"],[226,50,274,48],[226,51,274,49],[226,54,274,52,"routeConfig"],[226,65,274,63],[226,66,274,64,"parse"],[226,71,274,69],[226,72,274,70,"key"],[226,75,274,73],[226,76,274,74],[226,77,274,75,"decoded"],[226,84,274,82],[226,85,274,83],[226,88,274,86,"decoded"],[226,95,274,93],[227,14,275,10],[227,21,275,17],[227,22,275,18,"key"],[227,25,275,21],[227,27,275,23,"parsed"],[227,33,275,29],[227,34,275,30],[228,12,276,8],[228,13,276,9],[228,14,276,10],[228,15,276,11],[228,18,276,14,"undefined"],[228,27,276,23],[229,12,277,8],[229,16,277,12,"params"],[229,22,277,18],[229,26,277,22,"Object"],[229,32,277,28],[229,33,277,29,"keys"],[229,37,277,33],[229,38,277,34,"params"],[229,44,277,40],[229,45,277,41],[229,46,277,42,"length"],[229,52,277,48],[229,54,277,50],[230,14,278,10],[230,21,278,17],[231,16,279,12,"name"],[231,20,279,16],[231,22,279,18,"routeName"],[231,31,279,27],[232,16,280,12,"params"],[233,14,281,10],[233,15,281,11],[234,12,282,8],[235,12,283,8],[235,19,283,15],[236,14,284,10,"name"],[236,18,284,14],[236,20,284,16,"routeName"],[237,12,285,8],[237,13,285,9],[238,10,286,6],[238,11,286,7],[238,12,286,8],[239,10,287,6,"remainingPath"],[239,23,287,19],[239,26,287,22,"remainingPath"],[239,39,287,35],[239,40,287,36,"replace"],[239,47,287,43],[239,48,287,44,"match"],[239,53,287,49],[239,54,287,50],[239,55,287,51],[239,56,287,52],[239,58,287,54],[239,60,287,56],[239,61,287,57],[240,10,287,58],[241,8,289,4],[242,6,290,2],[242,7,290,3],[243,6,290,3,"_ret"],[243,10,290,3],[244,4,249,2],[244,9,249,7],[244,13,249,13,"config"],[244,19,249,19],[244,23,249,23,"configs"],[244,30,249,30],[245,6,249,30,"_ret"],[245,10,249,30],[245,13,249,30,"_loop"],[245,18,249,30],[245,19,249,30,"config"],[245,25,249,30],[246,6,249,30],[246,10,249,30,"_ret"],[246,14,249,30],[246,22,251,6],[247,6,251,15],[247,10,251,15,"_ret"],[247,14,251,15],[247,22,288,6],[248,4,288,12],[249,4,291,2],[249,11,291,9],[250,6,292,4,"routes"],[250,12,292,10],[251,6,293,4,"remainingPath"],[252,4,294,2],[252,5,294,3],[253,2,295,0],[253,3,295,1],[254,2,296,0],[254,6,296,6,"createNormalizedConfigs"],[254,29,296,29],[254,32,296,32,"createNormalizedConfigs"],[254,33,296,33,"screen"],[254,39,296,39],[254,41,296,41,"routeConfig"],[254,52,296,52],[254,54,296,54,"initials"],[254,62,296,62],[254,64,296,64,"paths"],[254,69,296,69],[254,71,296,71,"parentScreens"],[254,84,296,84],[254,86,296,86,"routeNames"],[254,96,296,96],[254,101,296,101],[255,4,297,2],[255,8,297,8,"configs"],[255,15,297,15],[255,18,297,18],[255,20,297,20],[256,4,298,2,"routeNames"],[256,14,298,12],[256,15,298,13,"push"],[256,19,298,17],[256,20,298,18,"screen"],[256,26,298,24],[256,27,298,25],[257,4,299,2,"parentScreens"],[257,17,299,15],[257,18,299,16,"push"],[257,22,299,20],[257,23,299,21,"screen"],[257,29,299,27],[257,30,299,28],[258,4,300,2],[258,8,300,8,"config"],[258,14,300,14],[258,17,300,17,"routeConfig"],[258,28,300,28],[258,29,300,29,"screen"],[258,35,300,35],[258,36,300,36],[259,4,301,2],[259,8,301,6],[259,15,301,13,"config"],[259,21,301,19],[259,26,301,24],[259,34,301,32],[259,36,301,34],[260,6,302,4,"paths"],[260,11,302,9],[260,12,302,10,"push"],[260,16,302,14],[260,17,302,15],[261,8,303,6,"screen"],[261,14,303,12],[262,8,304,6,"path"],[262,12,304,10],[262,14,304,12,"config"],[263,6,305,4],[263,7,305,5],[263,8,305,6],[264,6,306,4,"configs"],[264,13,306,11],[264,14,306,12,"push"],[264,18,306,16],[264,19,306,17,"createConfigItem"],[264,35,306,33],[264,36,306,34,"screen"],[264,42,306,40],[264,44,306,42],[264,45,306,43],[264,48,306,46,"routeNames"],[264,58,306,56],[264,59,306,57],[264,61,306,59],[264,62,306,60],[264,65,306,63,"paths"],[264,70,306,68],[264,71,306,69],[264,72,306,70],[264,73,306,71],[265,4,307,2],[265,5,307,3],[265,11,307,9],[265,15,307,13],[265,22,307,20,"config"],[265,28,307,26],[265,33,307,31],[265,41,307,39],[265,43,307,41],[266,6,311,4],[266,10,311,8],[266,17,311,15,"config"],[266,23,311,21],[266,24,311,22,"path"],[266,28,311,26],[266,33,311,31],[266,41,311,39],[266,43,311,41],[267,8,312,6],[267,12,312,10,"config"],[267,18,312,16],[267,19,312,17,"exact"],[267,24,312,22],[267,28,312,26,"config"],[267,34,312,32],[267,35,312,33,"path"],[267,39,312,37],[267,43,312,41],[267,47,312,45],[267,49,312,47],[268,10,313,8],[268,16,313,14],[268,20,313,18,"Error"],[268,25,313,23],[268,26,313,24],[268,37,313,35,"screen"],[268,43,313,41],[268,223,313,221],[268,224,313,222],[269,8,314,6],[270,8,318,6],[270,12,318,12,"aliasConfigs"],[270,24,318,24],[270,27,318,27],[270,29,318,29],[271,8,319,6],[271,12,319,10,"config"],[271,18,319,16],[271,19,319,17,"alias"],[271,24,319,22],[271,26,319,24],[272,10,320,8],[272,15,320,13],[272,19,320,19,"alias"],[272,24,320,24],[272,28,320,28,"config"],[272,34,320,34],[272,35,320,35,"alias"],[272,40,320,40],[272,42,320,42],[273,12,321,10],[273,16,321,14],[273,23,321,21,"alias"],[273,28,321,26],[273,33,321,31],[273,41,321,39],[273,43,321,41],[274,14,322,12,"aliasConfigs"],[274,26,322,24],[274,27,322,25,"push"],[274,31,322,29],[274,32,322,30,"createConfigItem"],[274,48,322,46],[274,49,322,47,"screen"],[274,55,322,53],[274,57,322,55],[274,58,322,56],[274,61,322,59,"routeNames"],[274,71,322,69],[274,72,322,70],[274,74,322,72],[274,75,322,73],[274,78,322,76,"paths"],[274,83,322,81],[274,85,322,83],[275,16,323,14,"screen"],[275,22,323,20],[276,16,324,14,"path"],[276,20,324,18],[276,22,324,20,"alias"],[277,14,325,12],[277,15,325,13],[277,16,325,14],[277,18,325,16,"config"],[277,24,325,22],[277,25,325,23,"parse"],[277,30,325,28],[277,31,325,29],[277,32,325,30],[278,12,326,10],[278,13,326,11],[278,19,326,17],[278,23,326,21],[278,30,326,28,"alias"],[278,35,326,33],[278,40,326,38],[278,48,326,46],[278,50,326,48],[279,14,327,12,"aliasConfigs"],[279,26,327,24],[279,27,327,25,"push"],[279,31,327,29],[279,32,327,30,"createConfigItem"],[279,48,327,46],[279,49,327,47,"screen"],[279,55,327,53],[279,57,327,55],[279,58,327,56],[279,61,327,59,"routeNames"],[279,71,327,69],[279,72,327,70],[279,74,327,72,"alias"],[279,79,327,77],[279,80,327,78,"exact"],[279,85,327,83],[279,88,327,86],[279,89,327,87],[280,16,328,14,"screen"],[280,22,328,20],[281,16,329,14,"path"],[281,20,329,18],[281,22,329,20,"alias"],[281,27,329,25],[281,28,329,26,"path"],[282,14,330,12],[282,15,330,13],[282,16,330,14],[282,19,330,17],[282,20,330,18],[282,23,330,21,"paths"],[282,28,330,26],[282,30,330,28],[283,16,331,14,"screen"],[283,22,331,20],[284,16,332,14,"path"],[284,20,332,18],[284,22,332,20,"alias"],[284,27,332,25],[284,28,332,26,"path"],[285,14,333,12],[285,15,333,13],[285,16,333,14],[285,18,333,16,"alias"],[285,23,333,21],[285,24,333,22,"parse"],[285,29,333,27],[285,30,333,28],[285,31,333,29],[286,12,334,10],[287,10,335,8],[288,8,336,6],[289,8,337,6],[289,12,337,10,"config"],[289,18,337,16],[289,19,337,17,"exact"],[289,24,337,22],[289,26,337,24],[290,10,340,8,"paths"],[290,15,340,13],[290,16,340,14,"length"],[290,22,340,20],[290,25,340,23],[290,26,340,24],[291,8,341,6],[292,8,342,6,"paths"],[292,13,342,11],[292,14,342,12,"push"],[292,18,342,16],[292,19,342,17],[293,10,343,8,"screen"],[293,16,343,14],[294,10,344,8,"path"],[294,14,344,12],[294,16,344,14,"config"],[294,22,344,20],[294,23,344,21,"path"],[295,8,345,6],[295,9,345,7],[295,10,345,8],[296,8,346,6,"configs"],[296,15,346,13],[296,16,346,14,"push"],[296,20,346,18],[296,21,346,19,"createConfigItem"],[296,37,346,35],[296,38,346,36,"screen"],[296,44,346,42],[296,46,346,44],[296,47,346,45],[296,50,346,48,"routeNames"],[296,60,346,58],[296,61,346,59],[296,63,346,61],[296,64,346,62],[296,67,346,65,"paths"],[296,72,346,70],[296,73,346,71],[296,75,346,73,"config"],[296,81,346,79],[296,82,346,80,"parse"],[296,87,346,85],[296,88,346,86],[296,89,346,87],[297,8,347,6,"configs"],[297,15,347,13],[297,16,347,14,"push"],[297,20,347,18],[297,21,347,19],[297,24,347,22,"aliasConfigs"],[297,36,347,34],[297,37,347,35],[298,6,348,4],[299,6,349,4],[299,10,349,8],[299,17,349,15,"config"],[299,23,349,21],[299,28,349,26],[299,36,349,34],[299,40,349,38],[299,47,349,45,"config"],[299,53,349,51],[299,54,349,52,"path"],[299,58,349,56],[299,63,349,61],[299,71,349,69],[299,75,349,73,"config"],[299,81,349,79],[299,82,349,80,"alias"],[299,87,349,85],[299,89,349,87,"length"],[299,95,349,93],[299,97,349,95],[300,8,350,6],[300,14,350,12],[300,18,350,16,"Error"],[300,23,350,21],[300,24,350,22],[300,35,350,33,"screen"],[300,41,350,39],[300,126,350,124],[300,127,350,125],[301,6,351,4],[302,6,352,4],[302,10,352,8,"config"],[302,16,352,14],[302,17,352,15,"screens"],[302,24,352,22],[302,26,352,24],[303,8,354,6],[303,12,354,10,"config"],[303,18,354,16],[303,19,354,17,"initialRouteName"],[303,35,354,33],[303,37,354,35],[304,10,355,8,"initials"],[304,18,355,16],[304,19,355,17,"push"],[304,23,355,21],[304,24,355,22],[305,12,356,10,"initialRouteName"],[305,28,356,26],[305,30,356,28,"config"],[305,36,356,34],[305,37,356,35,"initialRouteName"],[305,53,356,51],[306,12,357,10,"parentScreens"],[307,10,358,8],[307,11,358,9],[307,12,358,10],[308,8,359,6],[309,8,360,6,"Object"],[309,14,360,12],[309,15,360,13,"keys"],[309,19,360,17],[309,20,360,18,"config"],[309,26,360,24],[309,27,360,25,"screens"],[309,34,360,32],[309,35,360,33],[309,36,360,34,"forEach"],[309,43,360,41],[309,44,360,42,"nestedConfig"],[309,56,360,54],[309,60,360,58],[310,10,361,8],[310,14,361,14,"result"],[310,20,361,20],[310,23,361,23,"createNormalizedConfigs"],[310,46,361,46],[310,47,361,47,"nestedConfig"],[310,59,361,59],[310,61,361,61,"config"],[310,67,361,67],[310,68,361,68,"screens"],[310,75,361,75],[310,77,361,77,"initials"],[310,85,361,85],[310,87,361,87],[310,88,361,88],[310,91,361,91,"paths"],[310,96,361,96],[310,97,361,97],[310,99,361,99],[310,100,361,100],[310,103,361,103,"parentScreens"],[310,116,361,116],[310,117,361,117],[310,119,361,119,"routeNames"],[310,129,361,129],[310,130,361,130],[311,10,362,8,"configs"],[311,17,362,15],[311,18,362,16,"push"],[311,22,362,20],[311,23,362,21],[311,26,362,24,"result"],[311,32,362,30],[311,33,362,31],[312,8,363,6],[312,9,363,7],[312,10,363,8],[313,6,364,4],[314,4,365,2],[315,4,366,2,"routeNames"],[315,14,366,12],[315,15,366,13,"pop"],[315,18,366,16],[315,19,366,17],[315,20,366,18],[316,4,367,2],[316,11,367,9,"configs"],[316,18,367,16],[317,2,368,0],[317,3,368,1],[318,2,369,0],[318,6,369,6,"createConfigItem"],[318,22,369,22],[318,25,369,25,"createConfigItem"],[318,26,369,26,"screen"],[318,32,369,32],[318,34,369,34,"routeNames"],[318,44,369,44],[318,46,369,46,"paths"],[318,51,369,51],[318,53,369,53,"parse"],[318,58,369,58],[318,63,369,63],[319,4,370,2],[319,8,370,8,"parts"],[319,13,370,13],[319,16,370,16],[319,18,370,18],[320,4,370,19],[320,8,370,19,"_loop2"],[320,14,370,19],[320,26,370,19,"_loop2"],[320,27,370,19,"_screen"],[320,34,370,19],[320,36,376,14],[321,6,377,4,"parts"],[321,11,377,9],[321,12,377,10,"push"],[321,16,377,14],[321,17,377,15],[321,20,377,18],[321,24,377,18,"getPatternParts"],[321,42,377,33],[321,43,377,33,"getPatternParts"],[321,58,377,33],[321,60,377,34,"path"],[321,64,377,38],[321,65,377,39],[321,66,377,40,"map"],[321,69,377,43],[321,70,377,44,"part"],[321,74,377,48],[321,79,377,53],[322,8,378,6],[322,11,378,9,"part"],[322,15,378,13],[323,8,379,6,"screen"],[323,14,379,12],[323,16,379,6,"screen"],[324,6,380,4],[324,7,380,5],[324,8,380,6],[324,9,380,7],[324,10,380,8],[325,4,381,2],[325,5,381,3],[326,4,373,2],[326,13,373,2,"_ref5"],[326,18,373,2],[326,22,376,7,"paths"],[326,27,376,12],[327,6,376,12],[327,10,374,4,"screen"],[327,17,374,10],[327,20,374,10,"_ref5"],[327,25,374,10],[327,26,374,4,"screen"],[327,32,374,10],[328,6,374,10],[328,10,375,4,"path"],[328,14,375,8],[328,17,375,8,"_ref5"],[328,22,375,8],[328,23,375,4,"path"],[328,27,375,8],[329,6,375,8,"_loop2"],[329,12,375,8],[329,13,375,8,"_screen"],[329,20,375,8],[330,4,375,8],[331,4,382,2],[331,8,382,8,"regex"],[331,13,382,13],[331,16,382,16,"parts"],[331,21,382,21],[331,22,382,22,"length"],[331,28,382,28],[331,31,382,31],[331,35,382,35,"RegExp"],[331,41,382,41],[331,42,382,42],[331,47,382,47,"parts"],[331,52,382,52],[331,53,382,53,"map"],[331,56,382,56],[331,57,382,57],[331,58,382,58,"it"],[331,60,382,60],[331,62,382,62,"i"],[331,63,382,63],[331,68,382,68],[332,6,383,4],[332,10,383,8,"it"],[332,12,383,10],[332,13,383,11,"param"],[332,18,383,16],[332,20,383,18],[333,8,384,6],[333,12,384,12,"reg"],[333,15,384,15],[333,18,384,18,"it"],[333,20,384,20],[333,21,384,21,"regex"],[333,26,384,26],[333,30,384,30],[333,37,384,37],[334,8,385,6],[334,15,385,13],[334,29,385,27,"i"],[334,30,385,28],[334,34,385,32,"reg"],[334,37,385,35],[334,45,385,43,"it"],[334,47,385,45],[334,48,385,46,"optional"],[334,56,385,54],[334,59,385,57],[334,62,385,60],[334,65,385,63],[334,67,385,65],[334,70,385,68],[335,6,386,4],[336,6,387,4],[336,13,387,11],[336,16,387,14,"it"],[336,18,387,16],[336,19,387,17,"segment"],[336,26,387,24],[336,31,387,29],[336,34,387,32],[336,37,387,35],[336,41,387,39],[336,44,387,42],[336,48,387,42,"escape"],[336,54,387,48],[336,55,387,48,"default"],[336,62,387,48],[336,64,387,49,"it"],[336,66,387,51],[336,67,387,52,"segment"],[336,74,387,59],[336,75,387,60],[336,80,387,65],[337,4,388,2],[337,5,388,3],[337,6,388,4],[337,7,388,5,"join"],[337,11,388,9],[337,12,388,10],[337,14,388,12],[337,15,388,13],[337,19,388,17],[337,20,388,18],[337,23,388,21,"undefined"],[337,32,388,30],[338,4,389,2],[338,8,389,8,"segments"],[338,16,389,16],[338,19,389,19,"parts"],[338,24,389,24],[338,25,389,25,"map"],[338,28,389,28],[338,29,389,29,"it"],[338,31,389,31],[338,35,389,35,"it"],[338,37,389,37],[338,38,389,38,"segment"],[338,45,389,45],[338,46,389,46],[339,4,390,2],[339,8,390,8,"params"],[339,14,390,14],[339,17,390,17,"parts"],[339,22,390,22],[339,23,390,23,"map"],[339,26,390,26],[339,27,390,27],[339,28,390,28,"it"],[339,30,390,30],[339,32,390,32,"i"],[339,33,390,33],[339,38,390,38,"it"],[339,40,390,40],[339,41,390,41,"param"],[339,46,390,46],[339,49,390,49],[340,6,391,4,"index"],[340,11,391,9],[340,13,391,11,"i"],[340,14,391,12],[341,6,392,4,"screen"],[341,12,392,10],[341,14,392,12,"it"],[341,16,392,14],[341,17,392,15,"screen"],[341,23,392,21],[342,6,393,4,"name"],[342,10,393,8],[342,12,393,10,"it"],[342,14,393,12],[342,15,393,13,"param"],[343,4,394,2],[343,5,394,3],[343,8,394,6],[343,12,394,10],[343,13,394,11],[343,14,394,12,"filter"],[343,20,394,18],[343,21,394,19,"it"],[343,23,394,21],[343,27,394,25,"it"],[343,29,394,27],[343,33,394,31],[343,37,394,35],[343,38,394,36],[344,4,395,2],[344,11,395,9],[345,6,396,4,"screen"],[345,12,396,10],[346,6,397,4,"regex"],[346,11,397,9],[347,6,398,4,"segments"],[347,14,398,12],[348,6,399,4,"params"],[348,12,399,10],[349,6,400,4,"routeNames"],[349,16,400,14],[350,6,401,4,"parse"],[351,4,402,2],[351,5,402,3],[352,2,403,0],[352,3,403,1],[353,2,404,0],[353,6,404,6,"findParseConfigForRoute"],[353,29,404,29],[353,32,404,32,"findParseConfigForRoute"],[353,33,404,33,"routeName"],[353,42,404,42],[353,44,404,44,"flatConfig"],[353,54,404,54],[353,59,404,59],[354,4,405,2],[354,9,405,7],[354,13,405,13,"config"],[354,19,405,19],[354,23,405,23,"flatConfig"],[354,33,405,33],[354,35,405,35],[355,6,406,4],[355,10,406,8,"routeName"],[355,19,406,17],[355,24,406,22,"config"],[355,30,406,28],[355,31,406,29,"routeNames"],[355,41,406,39],[355,42,406,40,"config"],[355,48,406,46],[355,49,406,47,"routeNames"],[355,59,406,57],[355,60,406,58,"length"],[355,66,406,64],[355,69,406,67],[355,70,406,68],[355,71,406,69],[355,73,406,71],[356,8,407,6],[356,15,407,13,"config"],[356,21,407,19],[356,22,407,20,"parse"],[356,27,407,25],[357,6,408,4],[358,4,409,2],[359,4,410,2],[359,11,410,9,"undefined"],[359,20,410,18],[360,2,411,0],[360,3,411,1],[361,2,414,0],[361,6,414,6,"findInitialRoute"],[361,22,414,22],[361,25,414,25,"findInitialRoute"],[361,26,414,26,"routeName"],[361,35,414,35],[361,37,414,37,"parentScreens"],[361,50,414,50],[361,52,414,52,"initialRoutes"],[361,65,414,65],[361,70,414,70],[362,4,415,2],[362,9,415,7],[362,13,415,13,"config"],[362,19,415,19],[362,23,415,23,"initialRoutes"],[362,36,415,36],[362,38,415,38],[363,6,416,4],[363,10,416,8,"parentScreens"],[363,23,416,21],[363,24,416,22,"length"],[363,30,416,28],[363,35,416,33,"config"],[363,41,416,39],[363,42,416,40,"parentScreens"],[363,55,416,53],[363,56,416,54,"length"],[363,62,416,60],[363,64,416,62],[364,8,417,6],[364,12,417,10,"sameParents"],[364,23,417,21],[364,26,417,24],[364,30,417,28],[365,8,418,6],[365,13,418,11],[365,17,418,15,"i"],[365,18,418,16],[365,21,418,19],[365,22,418,20],[365,24,418,22,"i"],[365,25,418,23],[365,28,418,26,"parentScreens"],[365,41,418,39],[365,42,418,40,"length"],[365,48,418,46],[365,50,418,48,"i"],[365,51,418,49],[365,53,418,51],[365,55,418,53],[366,10,419,8],[366,14,419,12,"parentScreens"],[366,27,419,25],[366,28,419,26,"i"],[366,29,419,27],[366,30,419,28],[366,31,419,29,"localeCompare"],[366,44,419,42],[366,45,419,43,"config"],[366,51,419,49],[366,52,419,50,"parentScreens"],[366,65,419,63],[366,66,419,64,"i"],[366,67,419,65],[366,68,419,66],[366,69,419,67],[366,74,419,72],[366,75,419,73],[366,77,419,75],[367,12,420,10,"sameParents"],[367,23,420,21],[367,26,420,24],[367,31,420,29],[368,12,421,10],[369,10,422,8],[370,8,423,6],[371,8,424,6],[371,12,424,10,"sameParents"],[371,23,424,21],[371,25,424,23],[372,10,425,8],[372,17,425,15,"routeName"],[372,26,425,24],[372,31,425,29,"config"],[372,37,425,35],[372,38,425,36,"initialRouteName"],[372,54,425,52],[372,57,425,55,"config"],[372,63,425,61],[372,64,425,62,"initialRouteName"],[372,80,425,78],[372,83,425,81,"undefined"],[372,92,425,90],[373,8,426,6],[374,6,427,4],[375,4,428,2],[376,4,429,2],[376,11,429,9,"undefined"],[376,20,429,18],[377,2,430,0],[377,3,430,1],[378,2,434,0],[378,6,434,6,"createStateObject"],[378,23,434,23],[378,26,434,26,"createStateObject"],[378,27,434,27,"initialRoute"],[378,39,434,39],[378,41,434,41,"route"],[378,46,434,46],[378,48,434,48,"isEmpty"],[378,55,434,55],[378,60,434,60],[379,4,435,2],[379,8,435,6,"isEmpty"],[379,15,435,13],[379,17,435,15],[380,6,436,4],[380,10,436,8,"initialRoute"],[380,22,436,20],[380,24,436,22],[381,8,437,6],[381,15,437,13],[382,10,438,8,"index"],[382,15,438,13],[382,17,438,15],[382,18,438,16],[383,10,439,8,"routes"],[383,16,439,14],[383,18,439,16],[383,19,439,17],[384,12,440,10,"name"],[384,16,440,14],[384,18,440,16,"initialRoute"],[385,10,441,8],[385,11,441,9],[385,13,441,11,"route"],[385,18,441,16],[386,8,442,6],[386,9,442,7],[387,6,443,4],[387,7,443,5],[387,13,443,11],[388,8,444,6],[388,15,444,13],[389,10,445,8,"routes"],[389,16,445,14],[389,18,445,16],[389,19,445,17,"route"],[389,24,445,22],[390,8,446,6],[390,9,446,7],[391,6,447,4],[392,4,448,2],[392,5,448,3],[392,11,448,9],[393,6,449,4],[393,10,449,8,"initialRoute"],[393,22,449,20],[393,24,449,22],[394,8,450,6],[394,15,450,13],[395,10,451,8,"index"],[395,15,451,13],[395,17,451,15],[395,18,451,16],[396,10,452,8,"routes"],[396,16,452,14],[396,18,452,16],[396,19,452,17],[397,12,453,10,"name"],[397,16,453,14],[397,18,453,16,"initialRoute"],[398,10,454,8],[398,11,454,9],[398,13,454,11],[399,12,455,10],[399,15,455,13,"route"],[399,20,455,18],[400,12,456,10,"state"],[400,17,456,15],[400,19,456,17],[401,14,457,12,"routes"],[401,20,457,18],[401,22,457,20],[402,12,458,10],[403,10,459,8],[403,11,459,9],[404,8,460,6],[404,9,460,7],[405,6,461,4],[405,7,461,5],[405,13,461,11],[406,8,462,6],[406,15,462,13],[407,10,463,8,"routes"],[407,16,463,14],[407,18,463,16],[407,19,463,17],[408,12,464,10],[408,15,464,13,"route"],[408,20,464,18],[409,12,465,10,"state"],[409,17,465,15],[409,19,465,17],[410,14,466,12,"routes"],[410,20,466,18],[410,22,466,20],[411,12,467,10],[412,10,468,8],[412,11,468,9],[413,8,469,6],[413,9,469,7],[414,6,470,4],[415,4,471,2],[416,2,472,0],[416,3,472,1],[417,2,473,0],[417,6,473,6,"createNestedStateObject"],[417,29,473,29],[417,32,473,32,"createNestedStateObject"],[417,33,473,33,"path"],[417,37,473,37],[417,39,473,39,"routes"],[417,45,473,45],[417,47,473,47,"initialRoutes"],[417,60,473,60],[417,62,473,62,"flatConfig"],[417,72,473,72],[417,77,473,77],[418,4,474,2],[418,8,474,6,"route"],[418,13,474,11],[418,16,474,14,"routes"],[418,22,474,20],[418,23,474,21,"shift"],[418,28,474,26],[418,29,474,27],[418,30,474,28],[419,4,475,2],[419,8,475,8,"parentScreens"],[419,21,475,21],[419,24,475,24],[419,26,475,26],[420,4,476,2],[420,8,476,6,"initialRoute"],[420,20,476,18],[420,23,476,21,"findInitialRoute"],[420,39,476,37],[420,40,476,38,"route"],[420,45,476,43],[420,46,476,44,"name"],[420,50,476,48],[420,52,476,50,"parentScreens"],[420,65,476,63],[420,67,476,65,"initialRoutes"],[420,80,476,78],[420,81,476,79],[421,4,477,2,"parentScreens"],[421,17,477,15],[421,18,477,16,"push"],[421,22,477,20],[421,23,477,21,"route"],[421,28,477,26],[421,29,477,27,"name"],[421,33,477,31],[421,34,477,32],[422,4,478,2],[422,8,478,8,"state"],[422,13,478,13],[422,16,478,16,"createStateObject"],[422,33,478,33],[422,34,478,34,"initialRoute"],[422,46,478,46],[422,48,478,48,"route"],[422,53,478,53],[422,55,478,55,"routes"],[422,61,478,61],[422,62,478,62,"length"],[422,68,478,68],[422,73,478,73],[422,74,478,74],[422,75,478,75],[423,4,479,2],[423,8,479,6,"routes"],[423,14,479,12],[423,15,479,13,"length"],[423,21,479,19],[423,24,479,22],[423,25,479,23],[423,27,479,25],[424,6,480,4],[424,10,480,8,"nestedState"],[424,21,480,19],[424,24,480,22,"state"],[424,29,480,27],[425,6,481,4],[425,13,481,11,"route"],[425,18,481,16],[425,21,481,19,"routes"],[425,27,481,25],[425,28,481,26,"shift"],[425,33,481,31],[425,34,481,32],[425,35,481,33],[425,37,481,35],[426,8,482,6,"initialRoute"],[426,20,482,18],[426,23,482,21,"findInitialRoute"],[426,39,482,37],[426,40,482,38,"route"],[426,45,482,43],[426,46,482,44,"name"],[426,50,482,48],[426,52,482,50,"parentScreens"],[426,65,482,63],[426,67,482,65,"initialRoutes"],[426,80,482,78],[426,81,482,79],[427,8,483,6],[427,12,483,12,"nestedStateIndex"],[427,28,483,28],[427,31,483,31,"nestedState"],[427,42,483,42],[427,43,483,43,"index"],[427,48,483,48],[427,52,483,52,"nestedState"],[427,63,483,63],[427,64,483,64,"routes"],[427,70,483,70],[427,71,483,71,"length"],[427,77,483,77],[427,80,483,80],[427,81,483,81],[428,8,484,6,"nestedState"],[428,19,484,17],[428,20,484,18,"routes"],[428,26,484,24],[428,27,484,25,"nestedStateIndex"],[428,43,484,41],[428,44,484,42],[428,45,484,43,"state"],[428,50,484,48],[428,53,484,51,"createStateObject"],[428,70,484,68],[428,71,484,69,"initialRoute"],[428,83,484,81],[428,85,484,83,"route"],[428,90,484,88],[428,92,484,90,"routes"],[428,98,484,96],[428,99,484,97,"length"],[428,105,484,103],[428,110,484,108],[428,111,484,109],[428,112,484,110],[429,8,485,6],[429,12,485,10,"routes"],[429,18,485,16],[429,19,485,17,"length"],[429,25,485,23],[429,28,485,26],[429,29,485,27],[429,31,485,29],[430,10,486,8,"nestedState"],[430,21,486,19],[430,24,486,22,"nestedState"],[430,35,486,33],[430,36,486,34,"routes"],[430,42,486,40],[430,43,486,41,"nestedStateIndex"],[430,59,486,57],[430,60,486,58],[430,61,486,59,"state"],[430,66,486,64],[431,8,487,6],[432,8,488,6,"parentScreens"],[432,21,488,19],[432,22,488,20,"push"],[432,26,488,24],[432,27,488,25,"route"],[432,32,488,30],[432,33,488,31,"name"],[432,37,488,35],[432,38,488,36],[433,6,489,4],[434,4,490,2],[435,4,491,2,"route"],[435,9,491,7],[435,12,491,10],[435,16,491,10,"findFocusedRoute"],[435,35,491,26],[435,36,491,26,"findFocusedRoute"],[435,52,491,26],[435,54,491,27,"state"],[435,59,491,32],[435,60,491,33],[436,4,492,2,"route"],[436,9,492,7],[436,10,492,8,"path"],[436,14,492,12],[436,17,492,15,"path"],[436,21,492,19],[436,22,492,20,"replace"],[436,29,492,27],[436,30,492,28],[436,35,492,33],[436,37,492,35],[436,39,492,37],[436,40,492,38],[437,4,493,2],[437,8,493,8,"params"],[437,14,493,14],[437,17,493,17,"parseQueryParams"],[437,33,493,33],[437,34,493,34,"path"],[437,38,493,38],[437,40,493,40,"flatConfig"],[437,50,493,50],[437,53,493,53,"findParseConfigForRoute"],[437,76,493,76],[437,77,493,77,"route"],[437,82,493,82],[437,83,493,83,"name"],[437,87,493,87],[437,89,493,89,"flatConfig"],[437,99,493,99],[437,100,493,100],[437,103,493,103,"undefined"],[437,112,493,112],[437,113,493,113],[438,4,494,2],[438,8,494,6,"params"],[438,14,494,12],[438,16,494,14],[439,6,495,4,"route"],[439,11,495,9],[439,12,495,10,"params"],[439,18,495,16],[439,21,495,19],[440,8,496,6],[440,11,496,9,"route"],[440,16,496,14],[440,17,496,15,"params"],[440,23,496,21],[441,8,497,6],[441,11,497,9,"params"],[442,6,498,4],[442,7,498,5],[443,4,499,2],[444,4,500,2],[444,11,500,9,"state"],[444,16,500,14],[445,2,501,0],[445,3,501,1],[446,2,502,0],[446,6,502,6,"parseQueryParams"],[446,22,502,22],[446,25,502,25,"parseQueryParams"],[446,26,502,26,"path"],[446,30,502,30],[446,32,502,32,"parseConfig"],[446,43,502,43],[446,48,502,48],[447,4,503,2],[447,8,503,8,"query"],[447,13,503,13],[447,16,503,16,"path"],[447,20,503,20],[447,21,503,21,"split"],[447,26,503,26],[447,27,503,27],[447,30,503,30],[447,31,503,31],[447,32,503,32],[447,33,503,33],[447,34,503,34],[448,4,504,2],[448,8,504,8,"params"],[448,14,504,14],[448,17,504,17,"queryString"],[448,28,504,28],[448,29,504,29,"parse"],[448,34,504,34],[448,35,504,35,"query"],[448,40,504,40],[448,41,504,41],[449,4,505,2],[449,8,505,6,"parseConfig"],[449,19,505,17],[449,21,505,19],[450,6,506,4,"Object"],[450,12,506,10],[450,13,506,11,"keys"],[450,17,506,15],[450,18,506,16,"params"],[450,24,506,22],[450,25,506,23],[450,26,506,24,"forEach"],[450,33,506,31],[450,34,506,32,"name"],[450,38,506,36],[450,42,506,40],[451,8,507,6],[451,12,507,10,"Object"],[451,18,507,16],[451,19,507,17,"hasOwnProperty"],[451,33,507,31],[451,34,507,32,"call"],[451,38,507,36],[451,39,507,37,"parseConfig"],[451,50,507,48],[451,52,507,50,"name"],[451,56,507,54],[451,57,507,55],[451,61,507,59],[451,68,507,66,"params"],[451,74,507,72],[451,75,507,73,"name"],[451,79,507,77],[451,80,507,78],[451,85,507,83],[451,93,507,91],[451,95,507,93],[452,10,508,8,"params"],[452,16,508,14],[452,17,508,15,"name"],[452,21,508,19],[452,22,508,20],[452,25,508,23,"parseConfig"],[452,36,508,34],[452,37,508,35,"name"],[452,41,508,39],[452,42,508,40],[452,43,508,41,"params"],[452,49,508,47],[452,50,508,48,"name"],[452,54,508,52],[452,55,508,53],[452,56,508,54],[453,8,509,6],[454,6,510,4],[454,7,510,5],[454,8,510,6],[455,4,511,2],[456,4,512,2],[456,11,512,9,"Object"],[456,17,512,15],[456,18,512,16,"keys"],[456,22,512,20],[456,23,512,21,"params"],[456,29,512,27],[456,30,512,28],[456,31,512,29,"length"],[456,37,512,35],[456,40,512,38,"params"],[456,46,512,44],[456,49,512,47,"undefined"],[456,58,512,56],[457,2,513,0],[457,3,513,1],[458,0,513,2],[458,3]],"functionMap":{"names":["<global>","getStateFromPath","remaining.split.filter.map$argument_0","configs.find$argument_0","match.routeNames.map$argument_0","getConfigResources","prepareConfigResources","getInitialRoutes","getSortedNormalizedConfigs","Object.keys.map$argument_0","concat.sort$argument_0","checkForDuplicatedConfigs","configs.reduce$argument_0","b.every$argument_0","a.every$argument_0","getConfigsWithRegexes","configs.map$argument_0","matchAgainstConfigs","config.routeNames.map$argument_0","Object.entries.map$argument_0","routeConfig.params.find$argument_0","Object.entries.map.filter$argument_0","Object.entries.map.filter.map$argument_0","createNormalizedConfigs","Object.keys.forEach$argument_0","createConfigItem","getPatternParts.map$argument_0","parts.map$argument_0","parts.map.filter$argument_0","findParseConfigForRoute","findInitialRoute","createStateObject","createNestedStateObject","parseQueryParams"],"mappings":"AAA;OC8B;4DC4B;KDK;+BES,0CF;gEGE;QHE;CDuB;AKM;CLO;AMC;CNa;AOC;CPS;AQC;+CCE,uED,QE;GF2E;CRC;AWC;iBCE;uDCQ,sBD,YE,sBF;GDQ;CXC;AeC;qBCC;IDI;CfC;4BiBC;qCCa;yCfC;SeG;yGCC;gDCE,wBD;SDK,SG,gBH,MI;SJO;ODU;CjBS;gCuBC;0CCgE;ODG;CvBK;yByBC;4CCQ;MDG;yDEE;GFM;6BEC,gBF;2BEC;UFI,SG,gBH;CzBS;gC6BC;C7BO;yB8BG;C9BgB;0B+BI;C/BsC;gCgCC;ChC4B;yBiCC;gCTI;KSI;CjCG"},"hasCjsExports":false},"type":"js/module"}]}